//------------------------------------------------------------------------------
// <auto-generated>
//    這個程式碼是由範本產生。
//
//    對這個檔案進行手動變更可能導致您的應用程式產生未預期的行為。
//    如果重新產生程式碼，將會覆寫對這個檔案的手動變更。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM 關聯性中繼資料

[assembly: EdmRelationshipAttribute("XINModel", "FK_Delivery_Customer", "Customer", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(XIN2012.Customer), "Delivery", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(XIN2012.Delivery), true)]
[assembly: EdmRelationshipAttribute("XINModel", "FK_DeliveryDetails_Delivery", "Delivery", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(XIN2012.Delivery), "DeliveryDetails", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(XIN2012.DeliveryDetails), true)]
[assembly: EdmRelationshipAttribute("XINModel", "FK_DeliveryDetails_Product", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(XIN2012.Product), "DeliveryDetails", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(XIN2012.DeliveryDetails), true)]
[assembly: EdmRelationshipAttribute("XINModel", "FK_ReceiptDetails_Product", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(XIN2012.Product), "ReceiptDetails", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(XIN2012.ReceiptDetails), true)]
[assembly: EdmRelationshipAttribute("XINModel", "FK_TransferDetails_Product", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(XIN2012.Product), "TransferDetails", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(XIN2012.TransferDetails), true)]
[assembly: EdmRelationshipAttribute("XINModel", "FK_UserAuthority_Programs", "Programs", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(XIN2012.Programs), "UserAuthority", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(XIN2012.UserAuthority), true)]
[assembly: EdmRelationshipAttribute("XINModel", "FK_Receipt_Supplier", "Supplier", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(XIN2012.Supplier), "Receipt", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(XIN2012.Receipt), true)]
[assembly: EdmRelationshipAttribute("XINModel", "FK_ReceiptDetails_Receipt", "Receipt", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(XIN2012.Receipt), "ReceiptDetails", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(XIN2012.ReceiptDetails), true)]
[assembly: EdmRelationshipAttribute("XINModel", "FK_TransferDetails_Transfer", "Transfer", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(XIN2012.Transfer), "TransferDetails", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(XIN2012.TransferDetails), true)]
[assembly: EdmRelationshipAttribute("XINModel", "FK_UserAuthority_XINUsers", "XINUsers", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(XIN2012.XINUsers), "UserAuthority", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(XIN2012.UserAuthority), true)]

#endregion

namespace XIN2012
{
    #region 內容
    
    /// <summary>
    /// 沒有可用的中繼資料文件。
    /// </summary>
    public partial class XINEntities : ObjectContext
    {
        #region 建構函式
    
        /// <summary>
        /// 使用在應用程式組態檔的 'XINEntities' 區段中找到的連接字串，初始化新的 XINEntities 物件。
        /// </summary>
        public XINEntities() : base("name=XINEntities", "XINEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 XINEntities 物件。
        /// </summary>
        public XINEntities(string connectionString) : base(connectionString, "XINEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 XINEntities 物件。
        /// </summary>
        public XINEntities(EntityConnection connection) : base(connection, "XINEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region 部分方法
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet 屬性
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        public ObjectSet<Customer> Customer
        {
            get
            {
                if ((_Customer == null))
                {
                    _Customer = base.CreateObjectSet<Customer>("Customer");
                }
                return _Customer;
            }
        }
        private ObjectSet<Customer> _Customer;
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        public ObjectSet<Delivery> Delivery
        {
            get
            {
                if ((_Delivery == null))
                {
                    _Delivery = base.CreateObjectSet<Delivery>("Delivery");
                }
                return _Delivery;
            }
        }
        private ObjectSet<Delivery> _Delivery;
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        public ObjectSet<DeliveryDetails> DeliveryDetails
        {
            get
            {
                if ((_DeliveryDetails == null))
                {
                    _DeliveryDetails = base.CreateObjectSet<DeliveryDetails>("DeliveryDetails");
                }
                return _DeliveryDetails;
            }
        }
        private ObjectSet<DeliveryDetails> _DeliveryDetails;
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        public ObjectSet<Product> Product
        {
            get
            {
                if ((_Product == null))
                {
                    _Product = base.CreateObjectSet<Product>("Product");
                }
                return _Product;
            }
        }
        private ObjectSet<Product> _Product;
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        public ObjectSet<Programs> Programs
        {
            get
            {
                if ((_Programs == null))
                {
                    _Programs = base.CreateObjectSet<Programs>("Programs");
                }
                return _Programs;
            }
        }
        private ObjectSet<Programs> _Programs;
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        public ObjectSet<Receipt> Receipt
        {
            get
            {
                if ((_Receipt == null))
                {
                    _Receipt = base.CreateObjectSet<Receipt>("Receipt");
                }
                return _Receipt;
            }
        }
        private ObjectSet<Receipt> _Receipt;
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        public ObjectSet<ReceiptDetails> ReceiptDetails
        {
            get
            {
                if ((_ReceiptDetails == null))
                {
                    _ReceiptDetails = base.CreateObjectSet<ReceiptDetails>("ReceiptDetails");
                }
                return _ReceiptDetails;
            }
        }
        private ObjectSet<ReceiptDetails> _ReceiptDetails;
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        public ObjectSet<Supplier> Supplier
        {
            get
            {
                if ((_Supplier == null))
                {
                    _Supplier = base.CreateObjectSet<Supplier>("Supplier");
                }
                return _Supplier;
            }
        }
        private ObjectSet<Supplier> _Supplier;
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        public ObjectSet<Transfer> Transfer
        {
            get
            {
                if ((_Transfer == null))
                {
                    _Transfer = base.CreateObjectSet<Transfer>("Transfer");
                }
                return _Transfer;
            }
        }
        private ObjectSet<Transfer> _Transfer;
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        public ObjectSet<TransferDetails> TransferDetails
        {
            get
            {
                if ((_TransferDetails == null))
                {
                    _TransferDetails = base.CreateObjectSet<TransferDetails>("TransferDetails");
                }
                return _TransferDetails;
            }
        }
        private ObjectSet<TransferDetails> _TransferDetails;
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        public ObjectSet<UserAuthority> UserAuthority
        {
            get
            {
                if ((_UserAuthority == null))
                {
                    _UserAuthority = base.CreateObjectSet<UserAuthority>("UserAuthority");
                }
                return _UserAuthority;
            }
        }
        private ObjectSet<UserAuthority> _UserAuthority;
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        public ObjectSet<XINUsers> XINUsers
        {
            get
            {
                if ((_XINUsers == null))
                {
                    _XINUsers = base.CreateObjectSet<XINUsers>("XINUsers");
                }
                return _XINUsers;
            }
        }
        private ObjectSet<XINUsers> _XINUsers;

        #endregion

        #region AddTo 方法
    
        /// <summary>
        /// 將新物件加入 Customer EntitySet 的方法已被取代。請考慮改為使用關聯的 ObjectSet&lt;T&gt; 屬性的 .Add 方法。
        /// </summary>
        public void AddToCustomer(Customer customer)
        {
            base.AddObject("Customer", customer);
        }
    
        /// <summary>
        /// 將新物件加入 Delivery EntitySet 的方法已被取代。請考慮改為使用關聯的 ObjectSet&lt;T&gt; 屬性的 .Add 方法。
        /// </summary>
        public void AddToDelivery(Delivery delivery)
        {
            base.AddObject("Delivery", delivery);
        }
    
        /// <summary>
        /// 將新物件加入 DeliveryDetails EntitySet 的方法已被取代。請考慮改為使用關聯的 ObjectSet&lt;T&gt; 屬性的 .Add 方法。
        /// </summary>
        public void AddToDeliveryDetails(DeliveryDetails deliveryDetails)
        {
            base.AddObject("DeliveryDetails", deliveryDetails);
        }
    
        /// <summary>
        /// 將新物件加入 Product EntitySet 的方法已被取代。請考慮改為使用關聯的 ObjectSet&lt;T&gt; 屬性的 .Add 方法。
        /// </summary>
        public void AddToProduct(Product product)
        {
            base.AddObject("Product", product);
        }
    
        /// <summary>
        /// 將新物件加入 Programs EntitySet 的方法已被取代。請考慮改為使用關聯的 ObjectSet&lt;T&gt; 屬性的 .Add 方法。
        /// </summary>
        public void AddToPrograms(Programs programs)
        {
            base.AddObject("Programs", programs);
        }
    
        /// <summary>
        /// 將新物件加入 Receipt EntitySet 的方法已被取代。請考慮改為使用關聯的 ObjectSet&lt;T&gt; 屬性的 .Add 方法。
        /// </summary>
        public void AddToReceipt(Receipt receipt)
        {
            base.AddObject("Receipt", receipt);
        }
    
        /// <summary>
        /// 將新物件加入 ReceiptDetails EntitySet 的方法已被取代。請考慮改為使用關聯的 ObjectSet&lt;T&gt; 屬性的 .Add 方法。
        /// </summary>
        public void AddToReceiptDetails(ReceiptDetails receiptDetails)
        {
            base.AddObject("ReceiptDetails", receiptDetails);
        }
    
        /// <summary>
        /// 將新物件加入 Supplier EntitySet 的方法已被取代。請考慮改為使用關聯的 ObjectSet&lt;T&gt; 屬性的 .Add 方法。
        /// </summary>
        public void AddToSupplier(Supplier supplier)
        {
            base.AddObject("Supplier", supplier);
        }
    
        /// <summary>
        /// 將新物件加入 Transfer EntitySet 的方法已被取代。請考慮改為使用關聯的 ObjectSet&lt;T&gt; 屬性的 .Add 方法。
        /// </summary>
        public void AddToTransfer(Transfer transfer)
        {
            base.AddObject("Transfer", transfer);
        }
    
        /// <summary>
        /// 將新物件加入 TransferDetails EntitySet 的方法已被取代。請考慮改為使用關聯的 ObjectSet&lt;T&gt; 屬性的 .Add 方法。
        /// </summary>
        public void AddToTransferDetails(TransferDetails transferDetails)
        {
            base.AddObject("TransferDetails", transferDetails);
        }
    
        /// <summary>
        /// 將新物件加入 UserAuthority EntitySet 的方法已被取代。請考慮改為使用關聯的 ObjectSet&lt;T&gt; 屬性的 .Add 方法。
        /// </summary>
        public void AddToUserAuthority(UserAuthority userAuthority)
        {
            base.AddObject("UserAuthority", userAuthority);
        }
    
        /// <summary>
        /// 將新物件加入 XINUsers EntitySet 的方法已被取代。請考慮改為使用關聯的 ObjectSet&lt;T&gt; 屬性的 .Add 方法。
        /// </summary>
        public void AddToXINUsers(XINUsers xINUsers)
        {
            base.AddObject("XINUsers", xINUsers);
        }

        #endregion

    }

    #endregion

    #region 實體
    
    /// <summary>
    /// 沒有可用的中繼資料文件。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="XINModel", Name="Customer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Customer : EntityObject
    {
        #region Factory 方法
    
        /// <summary>
        /// 建立新 Customer 物件。
        /// </summary>
        /// <param name="customerID">CustomerID 屬性的初始值。</param>
        public static Customer CreateCustomer(global::System.String customerID)
        {
            Customer customer = new Customer();
            customer.CustomerID = customerID;
            return customer;
        }

        #endregion

        #region 簡單屬性
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CustomerID
        {
            get
            {
                return _CustomerID;
            }
            set
            {
                if (_CustomerID != value)
                {
                    OnCustomerIDChanging(value);
                    ReportPropertyChanging("CustomerID");
                    _CustomerID = StructuralObject.SetValidValue(value, false, "CustomerID");
                    ReportPropertyChanged("CustomerID");
                    OnCustomerIDChanged();
                }
            }
        }
        private global::System.String _CustomerID;
        partial void OnCustomerIDChanging(global::System.String value);
        partial void OnCustomerIDChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AttribName
        {
            get
            {
                return _AttribName;
            }
            set
            {
                OnAttribNameChanging(value);
                ReportPropertyChanging("AttribName");
                _AttribName = StructuralObject.SetValidValue(value, true, "AttribName");
                ReportPropertyChanged("AttribName");
                OnAttribNameChanged();
            }
        }
        private global::System.String _AttribName;
        partial void OnAttribNameChanging(global::System.String value);
        partial void OnAttribNameChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CompanyName
        {
            get
            {
                return _CompanyName;
            }
            set
            {
                OnCompanyNameChanging(value);
                ReportPropertyChanging("CompanyName");
                _CompanyName = StructuralObject.SetValidValue(value, true, "CompanyName");
                ReportPropertyChanged("CompanyName");
                OnCompanyNameChanged();
            }
        }
        private global::System.String _CompanyName;
        partial void OnCompanyNameChanging(global::System.String value);
        partial void OnCompanyNameChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EarNo
        {
            get
            {
                return _EarNo;
            }
            set
            {
                OnEarNoChanging(value);
                ReportPropertyChanging("EarNo");
                _EarNo = StructuralObject.SetValidValue(value, true, "EarNo");
                ReportPropertyChanged("EarNo");
                OnEarNoChanged();
            }
        }
        private global::System.String _EarNo;
        partial void OnEarNoChanging(global::System.String value);
        partial void OnEarNoChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String JoinMan
        {
            get
            {
                return _JoinMan;
            }
            set
            {
                OnJoinManChanging(value);
                ReportPropertyChanging("JoinMan");
                _JoinMan = StructuralObject.SetValidValue(value, true, "JoinMan");
                ReportPropertyChanged("JoinMan");
                OnJoinManChanged();
            }
        }
        private global::System.String _JoinMan;
        partial void OnJoinManChanging(global::System.String value);
        partial void OnJoinManChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Tel1
        {
            get
            {
                return _Tel1;
            }
            set
            {
                OnTel1Changing(value);
                ReportPropertyChanging("Tel1");
                _Tel1 = StructuralObject.SetValidValue(value, true, "Tel1");
                ReportPropertyChanged("Tel1");
                OnTel1Changed();
            }
        }
        private global::System.String _Tel1;
        partial void OnTel1Changing(global::System.String value);
        partial void OnTel1Changed();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Tel2
        {
            get
            {
                return _Tel2;
            }
            set
            {
                OnTel2Changing(value);
                ReportPropertyChanging("Tel2");
                _Tel2 = StructuralObject.SetValidValue(value, true, "Tel2");
                ReportPropertyChanged("Tel2");
                OnTel2Changed();
            }
        }
        private global::System.String _Tel2;
        partial void OnTel2Changing(global::System.String value);
        partial void OnTel2Changed();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Fax
        {
            get
            {
                return _Fax;
            }
            set
            {
                OnFaxChanging(value);
                ReportPropertyChanging("Fax");
                _Fax = StructuralObject.SetValidValue(value, true, "Fax");
                ReportPropertyChanged("Fax");
                OnFaxChanged();
            }
        }
        private global::System.String _Fax;
        partial void OnFaxChanging(global::System.String value);
        partial void OnFaxChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MobilePhone
        {
            get
            {
                return _MobilePhone;
            }
            set
            {
                OnMobilePhoneChanging(value);
                ReportPropertyChanging("MobilePhone");
                _MobilePhone = StructuralObject.SetValidValue(value, true, "MobilePhone");
                ReportPropertyChanged("MobilePhone");
                OnMobilePhoneChanged();
            }
        }
        private global::System.String _MobilePhone;
        partial void OnMobilePhoneChanging(global::System.String value);
        partial void OnMobilePhoneChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CompanyAddress
        {
            get
            {
                return _CompanyAddress;
            }
            set
            {
                OnCompanyAddressChanging(value);
                ReportPropertyChanging("CompanyAddress");
                _CompanyAddress = StructuralObject.SetValidValue(value, true, "CompanyAddress");
                ReportPropertyChanged("CompanyAddress");
                OnCompanyAddressChanged();
            }
        }
        private global::System.String _CompanyAddress;
        partial void OnCompanyAddressChanging(global::System.String value);
        partial void OnCompanyAddressChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DeliveryAddress
        {
            get
            {
                return _DeliveryAddress;
            }
            set
            {
                OnDeliveryAddressChanging(value);
                ReportPropertyChanging("DeliveryAddress");
                _DeliveryAddress = StructuralObject.SetValidValue(value, true, "DeliveryAddress");
                ReportPropertyChanged("DeliveryAddress");
                OnDeliveryAddressChanged();
            }
        }
        private global::System.String _DeliveryAddress;
        partial void OnDeliveryAddressChanging(global::System.String value);
        partial void OnDeliveryAddressChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastDeliveryDate
        {
            get
            {
                return _LastDeliveryDate;
            }
            set
            {
                OnLastDeliveryDateChanging(value);
                ReportPropertyChanging("LastDeliveryDate");
                _LastDeliveryDate = StructuralObject.SetValidValue(value, "LastDeliveryDate");
                ReportPropertyChanged("LastDeliveryDate");
                OnLastDeliveryDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastDeliveryDate;
        partial void OnLastDeliveryDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastDeliveryDateChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comment
        {
            get
            {
                return _Comment;
            }
            set
            {
                OnCommentChanging(value);
                ReportPropertyChanging("Comment");
                _Comment = StructuralObject.SetValidValue(value, true, "Comment");
                ReportPropertyChanged("Comment");
                OnCommentChanged();
            }
        }
        private global::System.String _Comment;
        partial void OnCommentChanging(global::System.String value);
        partial void OnCommentChanged();

        #endregion

        #region 導覽屬性
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("XINModel", "FK_Delivery_Customer", "Delivery")]
        public EntityCollection<Delivery> Delivery
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Delivery>("XINModel.FK_Delivery_Customer", "Delivery");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Delivery>("XINModel.FK_Delivery_Customer", "Delivery", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 沒有可用的中繼資料文件。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="XINModel", Name="Delivery")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Delivery : EntityObject
    {
        #region Factory 方法
    
        /// <summary>
        /// 建立新 Delivery 物件。
        /// </summary>
        /// <param name="deliveryID">DeliveryID 屬性的初始值。</param>
        /// <param name="deliveryDate">DeliveryDate 屬性的初始值。</param>
        /// <param name="customerID">CustomerID 屬性的初始值。</param>
        /// <param name="deliveryType">DeliveryType 屬性的初始值。</param>
        /// <param name="subTotal">SubTotal 屬性的初始值。</param>
        /// <param name="valueAddTax">ValueAddTax 屬性的初始值。</param>
        /// <param name="amount">Amount 屬性的初始值。</param>
        public static Delivery CreateDelivery(global::System.String deliveryID, global::System.DateTime deliveryDate, global::System.String customerID, global::System.String deliveryType, global::System.Int32 subTotal, global::System.Int32 valueAddTax, global::System.Int32 amount)
        {
            Delivery delivery = new Delivery();
            delivery.DeliveryID = deliveryID;
            delivery.DeliveryDate = deliveryDate;
            delivery.CustomerID = customerID;
            delivery.DeliveryType = deliveryType;
            delivery.SubTotal = subTotal;
            delivery.ValueAddTax = valueAddTax;
            delivery.Amount = amount;
            return delivery;
        }

        #endregion

        #region 簡單屬性
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DeliveryID
        {
            get
            {
                return _DeliveryID;
            }
            set
            {
                if (_DeliveryID != value)
                {
                    OnDeliveryIDChanging(value);
                    ReportPropertyChanging("DeliveryID");
                    _DeliveryID = StructuralObject.SetValidValue(value, false, "DeliveryID");
                    ReportPropertyChanged("DeliveryID");
                    OnDeliveryIDChanged();
                }
            }
        }
        private global::System.String _DeliveryID;
        partial void OnDeliveryIDChanging(global::System.String value);
        partial void OnDeliveryIDChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DeliveryDate
        {
            get
            {
                return _DeliveryDate;
            }
            set
            {
                OnDeliveryDateChanging(value);
                ReportPropertyChanging("DeliveryDate");
                _DeliveryDate = StructuralObject.SetValidValue(value, "DeliveryDate");
                ReportPropertyChanged("DeliveryDate");
                OnDeliveryDateChanged();
            }
        }
        private global::System.DateTime _DeliveryDate;
        partial void OnDeliveryDateChanging(global::System.DateTime value);
        partial void OnDeliveryDateChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CustomerID
        {
            get
            {
                return _CustomerID;
            }
            set
            {
                OnCustomerIDChanging(value);
                ReportPropertyChanging("CustomerID");
                _CustomerID = StructuralObject.SetValidValue(value, false, "CustomerID");
                ReportPropertyChanged("CustomerID");
                OnCustomerIDChanged();
            }
        }
        private global::System.String _CustomerID;
        partial void OnCustomerIDChanging(global::System.String value);
        partial void OnCustomerIDChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String JoinMan
        {
            get
            {
                return _JoinMan;
            }
            set
            {
                OnJoinManChanging(value);
                ReportPropertyChanging("JoinMan");
                _JoinMan = StructuralObject.SetValidValue(value, true, "JoinMan");
                ReportPropertyChanged("JoinMan");
                OnJoinManChanged();
            }
        }
        private global::System.String _JoinMan;
        partial void OnJoinManChanging(global::System.String value);
        partial void OnJoinManChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DeliveryType
        {
            get
            {
                return _DeliveryType;
            }
            set
            {
                OnDeliveryTypeChanging(value);
                ReportPropertyChanging("DeliveryType");
                _DeliveryType = StructuralObject.SetValidValue(value, false, "DeliveryType");
                ReportPropertyChanged("DeliveryType");
                OnDeliveryTypeChanged();
            }
        }
        private global::System.String _DeliveryType;
        partial void OnDeliveryTypeChanging(global::System.String value);
        partial void OnDeliveryTypeChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String InvoiceNo
        {
            get
            {
                return _InvoiceNo;
            }
            set
            {
                OnInvoiceNoChanging(value);
                ReportPropertyChanging("InvoiceNo");
                _InvoiceNo = StructuralObject.SetValidValue(value, true, "InvoiceNo");
                ReportPropertyChanged("InvoiceNo");
                OnInvoiceNoChanged();
            }
        }
        private global::System.String _InvoiceNo;
        partial void OnInvoiceNoChanging(global::System.String value);
        partial void OnInvoiceNoChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SubTotal
        {
            get
            {
                return _SubTotal;
            }
            set
            {
                OnSubTotalChanging(value);
                ReportPropertyChanging("SubTotal");
                _SubTotal = StructuralObject.SetValidValue(value, "SubTotal");
                ReportPropertyChanged("SubTotal");
                OnSubTotalChanged();
            }
        }
        private global::System.Int32 _SubTotal;
        partial void OnSubTotalChanging(global::System.Int32 value);
        partial void OnSubTotalChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ValueAddTax
        {
            get
            {
                return _ValueAddTax;
            }
            set
            {
                OnValueAddTaxChanging(value);
                ReportPropertyChanging("ValueAddTax");
                _ValueAddTax = StructuralObject.SetValidValue(value, "ValueAddTax");
                ReportPropertyChanged("ValueAddTax");
                OnValueAddTaxChanged();
            }
        }
        private global::System.Int32 _ValueAddTax;
        partial void OnValueAddTaxChanging(global::System.Int32 value);
        partial void OnValueAddTaxChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value, "Amount");
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private global::System.Int32 _Amount;
        partial void OnAmountChanging(global::System.Int32 value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ShipAddress
        {
            get
            {
                return _ShipAddress;
            }
            set
            {
                OnShipAddressChanging(value);
                ReportPropertyChanging("ShipAddress");
                _ShipAddress = StructuralObject.SetValidValue(value, true, "ShipAddress");
                ReportPropertyChanged("ShipAddress");
                OnShipAddressChanged();
            }
        }
        private global::System.String _ShipAddress;
        partial void OnShipAddressChanging(global::System.String value);
        partial void OnShipAddressChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comment
        {
            get
            {
                return _Comment;
            }
            set
            {
                OnCommentChanging(value);
                ReportPropertyChanging("Comment");
                _Comment = StructuralObject.SetValidValue(value, true, "Comment");
                ReportPropertyChanged("Comment");
                OnCommentChanged();
            }
        }
        private global::System.String _Comment;
        partial void OnCommentChanging(global::System.String value);
        partial void OnCommentChanged();

        #endregion

        #region 導覽屬性
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("XINModel", "FK_Delivery_Customer", "Customer")]
        public Customer Customer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customer>("XINModel.FK_Delivery_Customer", "Customer").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customer>("XINModel.FK_Delivery_Customer", "Customer").Value = value;
            }
        }
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Customer> CustomerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customer>("XINModel.FK_Delivery_Customer", "Customer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Customer>("XINModel.FK_Delivery_Customer", "Customer", value);
                }
            }
        }
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("XINModel", "FK_DeliveryDetails_Delivery", "DeliveryDetails")]
        public EntityCollection<DeliveryDetails> DeliveryDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DeliveryDetails>("XINModel.FK_DeliveryDetails_Delivery", "DeliveryDetails");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DeliveryDetails>("XINModel.FK_DeliveryDetails_Delivery", "DeliveryDetails", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 沒有可用的中繼資料文件。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="XINModel", Name="DeliveryDetails")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DeliveryDetails : EntityObject
    {
        #region Factory 方法
    
        /// <summary>
        /// 建立新 DeliveryDetails 物件。
        /// </summary>
        /// <param name="deliveryID">DeliveryID 屬性的初始值。</param>
        /// <param name="deliverySeq">DeliverySeq 屬性的初始值。</param>
        /// <param name="productID">ProductID 屬性的初始值。</param>
        /// <param name="quantity">Quantity 屬性的初始值。</param>
        /// <param name="unitPrice">UnitPrice 屬性的初始值。</param>
        /// <param name="amount">Amount 屬性的初始值。</param>
        public static DeliveryDetails CreateDeliveryDetails(global::System.String deliveryID, global::System.Byte deliverySeq, global::System.String productID, global::System.Int32 quantity, global::System.Int32 unitPrice, global::System.Int32 amount)
        {
            DeliveryDetails deliveryDetails = new DeliveryDetails();
            deliveryDetails.DeliveryID = deliveryID;
            deliveryDetails.DeliverySeq = deliverySeq;
            deliveryDetails.ProductID = productID;
            deliveryDetails.Quantity = quantity;
            deliveryDetails.UnitPrice = unitPrice;
            deliveryDetails.Amount = amount;
            return deliveryDetails;
        }

        #endregion

        #region 簡單屬性
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DeliveryID
        {
            get
            {
                return _DeliveryID;
            }
            set
            {
                if (_DeliveryID != value)
                {
                    OnDeliveryIDChanging(value);
                    ReportPropertyChanging("DeliveryID");
                    _DeliveryID = StructuralObject.SetValidValue(value, false, "DeliveryID");
                    ReportPropertyChanged("DeliveryID");
                    OnDeliveryIDChanged();
                }
            }
        }
        private global::System.String _DeliveryID;
        partial void OnDeliveryIDChanging(global::System.String value);
        partial void OnDeliveryIDChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte DeliverySeq
        {
            get
            {
                return _DeliverySeq;
            }
            set
            {
                if (_DeliverySeq != value)
                {
                    OnDeliverySeqChanging(value);
                    ReportPropertyChanging("DeliverySeq");
                    _DeliverySeq = StructuralObject.SetValidValue(value, "DeliverySeq");
                    ReportPropertyChanged("DeliverySeq");
                    OnDeliverySeqChanged();
                }
            }
        }
        private global::System.Byte _DeliverySeq;
        partial void OnDeliverySeqChanging(global::System.Byte value);
        partial void OnDeliverySeqChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProductID
        {
            get
            {
                return _ProductID;
            }
            set
            {
                OnProductIDChanging(value);
                ReportPropertyChanging("ProductID");
                _ProductID = StructuralObject.SetValidValue(value, false, "ProductID");
                ReportPropertyChanged("ProductID");
                OnProductIDChanged();
            }
        }
        private global::System.String _ProductID;
        partial void OnProductIDChanging(global::System.String value);
        partial void OnProductIDChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value, "Quantity");
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private global::System.Int32 _Quantity;
        partial void OnQuantityChanging(global::System.Int32 value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UnitPrice
        {
            get
            {
                return _UnitPrice;
            }
            set
            {
                OnUnitPriceChanging(value);
                ReportPropertyChanging("UnitPrice");
                _UnitPrice = StructuralObject.SetValidValue(value, "UnitPrice");
                ReportPropertyChanged("UnitPrice");
                OnUnitPriceChanged();
            }
        }
        private global::System.Int32 _UnitPrice;
        partial void OnUnitPriceChanging(global::System.Int32 value);
        partial void OnUnitPriceChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value, "Amount");
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private global::System.Int32 _Amount;
        partial void OnAmountChanging(global::System.Int32 value);
        partial void OnAmountChanged();

        #endregion

        #region 導覽屬性
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("XINModel", "FK_DeliveryDetails_Delivery", "Delivery")]
        public Delivery Delivery
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Delivery>("XINModel.FK_DeliveryDetails_Delivery", "Delivery").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Delivery>("XINModel.FK_DeliveryDetails_Delivery", "Delivery").Value = value;
            }
        }
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Delivery> DeliveryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Delivery>("XINModel.FK_DeliveryDetails_Delivery", "Delivery");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Delivery>("XINModel.FK_DeliveryDetails_Delivery", "Delivery", value);
                }
            }
        }
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("XINModel", "FK_DeliveryDetails_Product", "Product")]
        public Product Product
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("XINModel.FK_DeliveryDetails_Product", "Product").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("XINModel.FK_DeliveryDetails_Product", "Product").Value = value;
            }
        }
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> ProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("XINModel.FK_DeliveryDetails_Product", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("XINModel.FK_DeliveryDetails_Product", "Product", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 沒有可用的中繼資料文件。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="XINModel", Name="Product")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Product : EntityObject
    {
        #region Factory 方法
    
        /// <summary>
        /// 建立新 Product 物件。
        /// </summary>
        /// <param name="productID">ProductID 屬性的初始值。</param>
        public static Product CreateProduct(global::System.String productID)
        {
            Product product = new Product();
            product.ProductID = productID;
            return product;
        }

        #endregion

        #region 簡單屬性
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProductID
        {
            get
            {
                return _ProductID;
            }
            set
            {
                if (_ProductID != value)
                {
                    OnProductIDChanging(value);
                    ReportPropertyChanging("ProductID");
                    _ProductID = StructuralObject.SetValidValue(value, false, "ProductID");
                    ReportPropertyChanged("ProductID");
                    OnProductIDChanged();
                }
            }
        }
        private global::System.String _ProductID;
        partial void OnProductIDChanging(global::System.String value);
        partial void OnProductIDChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ProductName
        {
            get
            {
                return _ProductName;
            }
            set
            {
                OnProductNameChanging(value);
                ReportPropertyChanging("ProductName");
                _ProductName = StructuralObject.SetValidValue(value, true, "ProductName");
                ReportPropertyChanged("ProductName");
                OnProductNameChanged();
            }
        }
        private global::System.String _ProductName;
        partial void OnProductNameChanging(global::System.String value);
        partial void OnProductNameChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Unit
        {
            get
            {
                return _Unit;
            }
            set
            {
                OnUnitChanging(value);
                ReportPropertyChanging("Unit");
                _Unit = StructuralObject.SetValidValue(value, true, "Unit");
                ReportPropertyChanged("Unit");
                OnUnitChanged();
            }
        }
        private global::System.String _Unit;
        partial void OnUnitChanging(global::System.String value);
        partial void OnUnitChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastReceiptDate
        {
            get
            {
                return _LastReceiptDate;
            }
            set
            {
                OnLastReceiptDateChanging(value);
                ReportPropertyChanging("LastReceiptDate");
                _LastReceiptDate = StructuralObject.SetValidValue(value, "LastReceiptDate");
                ReportPropertyChanged("LastReceiptDate");
                OnLastReceiptDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastReceiptDate;
        partial void OnLastReceiptDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastReceiptDateChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastDeliveryDate
        {
            get
            {
                return _LastDeliveryDate;
            }
            set
            {
                OnLastDeliveryDateChanging(value);
                ReportPropertyChanging("LastDeliveryDate");
                _LastDeliveryDate = StructuralObject.SetValidValue(value, "LastDeliveryDate");
                ReportPropertyChanged("LastDeliveryDate");
                OnLastDeliveryDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastDeliveryDate;
        partial void OnLastDeliveryDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastDeliveryDateChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> StopSales
        {
            get
            {
                return _StopSales;
            }
            set
            {
                OnStopSalesChanging(value);
                ReportPropertyChanging("StopSales");
                _StopSales = StructuralObject.SetValidValue(value, "StopSales");
                ReportPropertyChanged("StopSales");
                OnStopSalesChanged();
            }
        }
        private Nullable<global::System.Boolean> _StopSales;
        partial void OnStopSalesChanging(Nullable<global::System.Boolean> value);
        partial void OnStopSalesChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value, "Price");
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private Nullable<global::System.Int32> _Price;
        partial void OnPriceChanging(Nullable<global::System.Int32> value);
        partial void OnPriceChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Stock
        {
            get
            {
                return _Stock;
            }
            set
            {
                OnStockChanging(value);
                ReportPropertyChanging("Stock");
                _Stock = StructuralObject.SetValidValue(value, "Stock");
                ReportPropertyChanged("Stock");
                OnStockChanged();
            }
        }
        private Nullable<global::System.Int32> _Stock;
        partial void OnStockChanging(Nullable<global::System.Int32> value);
        partial void OnStockChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Picture
        {
            get
            {
                return StructuralObject.GetValidValue(_Picture);
            }
            set
            {
                OnPictureChanging(value);
                ReportPropertyChanging("Picture");
                _Picture = StructuralObject.SetValidValue(value, true, "Picture");
                ReportPropertyChanged("Picture");
                OnPictureChanged();
            }
        }
        private global::System.Byte[] _Picture;
        partial void OnPictureChanging(global::System.Byte[] value);
        partial void OnPictureChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comment
        {
            get
            {
                return _Comment;
            }
            set
            {
                OnCommentChanging(value);
                ReportPropertyChanging("Comment");
                _Comment = StructuralObject.SetValidValue(value, true, "Comment");
                ReportPropertyChanged("Comment");
                OnCommentChanged();
            }
        }
        private global::System.String _Comment;
        partial void OnCommentChanging(global::System.String value);
        partial void OnCommentChanged();

        #endregion

        #region 導覽屬性
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("XINModel", "FK_DeliveryDetails_Product", "DeliveryDetails")]
        public EntityCollection<DeliveryDetails> DeliveryDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DeliveryDetails>("XINModel.FK_DeliveryDetails_Product", "DeliveryDetails");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DeliveryDetails>("XINModel.FK_DeliveryDetails_Product", "DeliveryDetails", value);
                }
            }
        }
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("XINModel", "FK_ReceiptDetails_Product", "ReceiptDetails")]
        public EntityCollection<ReceiptDetails> ReceiptDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ReceiptDetails>("XINModel.FK_ReceiptDetails_Product", "ReceiptDetails");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ReceiptDetails>("XINModel.FK_ReceiptDetails_Product", "ReceiptDetails", value);
                }
            }
        }
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("XINModel", "FK_TransferDetails_Product", "TransferDetails")]
        public EntityCollection<TransferDetails> TransferDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TransferDetails>("XINModel.FK_TransferDetails_Product", "TransferDetails");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TransferDetails>("XINModel.FK_TransferDetails_Product", "TransferDetails", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 沒有可用的中繼資料文件。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="XINModel", Name="Programs")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Programs : EntityObject
    {
        #region Factory 方法
    
        /// <summary>
        /// 建立新 Programs 物件。
        /// </summary>
        /// <param name="programID">ProgramID 屬性的初始值。</param>
        /// <param name="programName">ProgramName 屬性的初始值。</param>
        public static Programs CreatePrograms(global::System.String programID, global::System.String programName)
        {
            Programs programs = new Programs();
            programs.ProgramID = programID;
            programs.ProgramName = programName;
            return programs;
        }

        #endregion

        #region 簡單屬性
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProgramID
        {
            get
            {
                return _ProgramID;
            }
            set
            {
                if (_ProgramID != value)
                {
                    OnProgramIDChanging(value);
                    ReportPropertyChanging("ProgramID");
                    _ProgramID = StructuralObject.SetValidValue(value, false, "ProgramID");
                    ReportPropertyChanged("ProgramID");
                    OnProgramIDChanged();
                }
            }
        }
        private global::System.String _ProgramID;
        partial void OnProgramIDChanging(global::System.String value);
        partial void OnProgramIDChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProgramName
        {
            get
            {
                return _ProgramName;
            }
            set
            {
                OnProgramNameChanging(value);
                ReportPropertyChanging("ProgramName");
                _ProgramName = StructuralObject.SetValidValue(value, false, "ProgramName");
                ReportPropertyChanged("ProgramName");
                OnProgramNameChanged();
            }
        }
        private global::System.String _ProgramName;
        partial void OnProgramNameChanging(global::System.String value);
        partial void OnProgramNameChanged();

        #endregion

        #region 導覽屬性
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("XINModel", "FK_UserAuthority_Programs", "UserAuthority")]
        public EntityCollection<UserAuthority> UserAuthority
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserAuthority>("XINModel.FK_UserAuthority_Programs", "UserAuthority");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserAuthority>("XINModel.FK_UserAuthority_Programs", "UserAuthority", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 沒有可用的中繼資料文件。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="XINModel", Name="Receipt")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Receipt : EntityObject
    {
        #region Factory 方法
    
        /// <summary>
        /// 建立新 Receipt 物件。
        /// </summary>
        /// <param name="receiptID">ReceiptID 屬性的初始值。</param>
        /// <param name="receiptDate">ReceiptDate 屬性的初始值。</param>
        /// <param name="supplierID">SupplierID 屬性的初始值。</param>
        /// <param name="receiptType">ReceiptType 屬性的初始值。</param>
        /// <param name="subTotal">SubTotal 屬性的初始值。</param>
        /// <param name="valueAddTax">ValueAddTax 屬性的初始值。</param>
        /// <param name="amount">Amount 屬性的初始值。</param>
        public static Receipt CreateReceipt(global::System.String receiptID, global::System.DateTime receiptDate, global::System.String supplierID, global::System.String receiptType, global::System.Int32 subTotal, global::System.Int32 valueAddTax, global::System.Int32 amount)
        {
            Receipt receipt = new Receipt();
            receipt.ReceiptID = receiptID;
            receipt.ReceiptDate = receiptDate;
            receipt.SupplierID = supplierID;
            receipt.ReceiptType = receiptType;
            receipt.SubTotal = subTotal;
            receipt.ValueAddTax = valueAddTax;
            receipt.Amount = amount;
            return receipt;
        }

        #endregion

        #region 簡單屬性
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ReceiptID
        {
            get
            {
                return _ReceiptID;
            }
            set
            {
                if (_ReceiptID != value)
                {
                    OnReceiptIDChanging(value);
                    ReportPropertyChanging("ReceiptID");
                    _ReceiptID = StructuralObject.SetValidValue(value, false, "ReceiptID");
                    ReportPropertyChanged("ReceiptID");
                    OnReceiptIDChanged();
                }
            }
        }
        private global::System.String _ReceiptID;
        partial void OnReceiptIDChanging(global::System.String value);
        partial void OnReceiptIDChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ReceiptDate
        {
            get
            {
                return _ReceiptDate;
            }
            set
            {
                OnReceiptDateChanging(value);
                ReportPropertyChanging("ReceiptDate");
                _ReceiptDate = StructuralObject.SetValidValue(value, "ReceiptDate");
                ReportPropertyChanged("ReceiptDate");
                OnReceiptDateChanged();
            }
        }
        private global::System.DateTime _ReceiptDate;
        partial void OnReceiptDateChanging(global::System.DateTime value);
        partial void OnReceiptDateChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SupplierID
        {
            get
            {
                return _SupplierID;
            }
            set
            {
                OnSupplierIDChanging(value);
                ReportPropertyChanging("SupplierID");
                _SupplierID = StructuralObject.SetValidValue(value, false, "SupplierID");
                ReportPropertyChanged("SupplierID");
                OnSupplierIDChanged();
            }
        }
        private global::System.String _SupplierID;
        partial void OnSupplierIDChanging(global::System.String value);
        partial void OnSupplierIDChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ReceiptType
        {
            get
            {
                return _ReceiptType;
            }
            set
            {
                OnReceiptTypeChanging(value);
                ReportPropertyChanging("ReceiptType");
                _ReceiptType = StructuralObject.SetValidValue(value, false, "ReceiptType");
                ReportPropertyChanged("ReceiptType");
                OnReceiptTypeChanged();
            }
        }
        private global::System.String _ReceiptType;
        partial void OnReceiptTypeChanging(global::System.String value);
        partial void OnReceiptTypeChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String InvoiceNo
        {
            get
            {
                return _InvoiceNo;
            }
            set
            {
                OnInvoiceNoChanging(value);
                ReportPropertyChanging("InvoiceNo");
                _InvoiceNo = StructuralObject.SetValidValue(value, true, "InvoiceNo");
                ReportPropertyChanged("InvoiceNo");
                OnInvoiceNoChanged();
            }
        }
        private global::System.String _InvoiceNo;
        partial void OnInvoiceNoChanging(global::System.String value);
        partial void OnInvoiceNoChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SubTotal
        {
            get
            {
                return _SubTotal;
            }
            set
            {
                OnSubTotalChanging(value);
                ReportPropertyChanging("SubTotal");
                _SubTotal = StructuralObject.SetValidValue(value, "SubTotal");
                ReportPropertyChanged("SubTotal");
                OnSubTotalChanged();
            }
        }
        private global::System.Int32 _SubTotal;
        partial void OnSubTotalChanging(global::System.Int32 value);
        partial void OnSubTotalChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ValueAddTax
        {
            get
            {
                return _ValueAddTax;
            }
            set
            {
                OnValueAddTaxChanging(value);
                ReportPropertyChanging("ValueAddTax");
                _ValueAddTax = StructuralObject.SetValidValue(value, "ValueAddTax");
                ReportPropertyChanged("ValueAddTax");
                OnValueAddTaxChanged();
            }
        }
        private global::System.Int32 _ValueAddTax;
        partial void OnValueAddTaxChanging(global::System.Int32 value);
        partial void OnValueAddTaxChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value, "Amount");
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private global::System.Int32 _Amount;
        partial void OnAmountChanging(global::System.Int32 value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ShipAddress
        {
            get
            {
                return _ShipAddress;
            }
            set
            {
                OnShipAddressChanging(value);
                ReportPropertyChanging("ShipAddress");
                _ShipAddress = StructuralObject.SetValidValue(value, true, "ShipAddress");
                ReportPropertyChanged("ShipAddress");
                OnShipAddressChanged();
            }
        }
        private global::System.String _ShipAddress;
        partial void OnShipAddressChanging(global::System.String value);
        partial void OnShipAddressChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comment
        {
            get
            {
                return _Comment;
            }
            set
            {
                OnCommentChanging(value);
                ReportPropertyChanging("Comment");
                _Comment = StructuralObject.SetValidValue(value, true, "Comment");
                ReportPropertyChanged("Comment");
                OnCommentChanged();
            }
        }
        private global::System.String _Comment;
        partial void OnCommentChanging(global::System.String value);
        partial void OnCommentChanged();

        #endregion

        #region 導覽屬性
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("XINModel", "FK_Receipt_Supplier", "Supplier")]
        public Supplier Supplier
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Supplier>("XINModel.FK_Receipt_Supplier", "Supplier").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Supplier>("XINModel.FK_Receipt_Supplier", "Supplier").Value = value;
            }
        }
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Supplier> SupplierReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Supplier>("XINModel.FK_Receipt_Supplier", "Supplier");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Supplier>("XINModel.FK_Receipt_Supplier", "Supplier", value);
                }
            }
        }
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("XINModel", "FK_ReceiptDetails_Receipt", "ReceiptDetails")]
        public EntityCollection<ReceiptDetails> ReceiptDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ReceiptDetails>("XINModel.FK_ReceiptDetails_Receipt", "ReceiptDetails");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ReceiptDetails>("XINModel.FK_ReceiptDetails_Receipt", "ReceiptDetails", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 沒有可用的中繼資料文件。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="XINModel", Name="ReceiptDetails")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ReceiptDetails : EntityObject
    {
        #region Factory 方法
    
        /// <summary>
        /// 建立新 ReceiptDetails 物件。
        /// </summary>
        /// <param name="receiptID">ReceiptID 屬性的初始值。</param>
        /// <param name="receiptSeq">ReceiptSeq 屬性的初始值。</param>
        /// <param name="productID">ProductID 屬性的初始值。</param>
        /// <param name="quantity">Quantity 屬性的初始值。</param>
        /// <param name="unitPrice">UnitPrice 屬性的初始值。</param>
        /// <param name="amount">Amount 屬性的初始值。</param>
        public static ReceiptDetails CreateReceiptDetails(global::System.String receiptID, global::System.Byte receiptSeq, global::System.String productID, global::System.Int32 quantity, global::System.Int32 unitPrice, global::System.Int32 amount)
        {
            ReceiptDetails receiptDetails = new ReceiptDetails();
            receiptDetails.ReceiptID = receiptID;
            receiptDetails.ReceiptSeq = receiptSeq;
            receiptDetails.ProductID = productID;
            receiptDetails.Quantity = quantity;
            receiptDetails.UnitPrice = unitPrice;
            receiptDetails.Amount = amount;
            return receiptDetails;
        }

        #endregion

        #region 簡單屬性
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ReceiptID
        {
            get
            {
                return _ReceiptID;
            }
            set
            {
                if (_ReceiptID != value)
                {
                    OnReceiptIDChanging(value);
                    ReportPropertyChanging("ReceiptID");
                    _ReceiptID = StructuralObject.SetValidValue(value, false, "ReceiptID");
                    ReportPropertyChanged("ReceiptID");
                    OnReceiptIDChanged();
                }
            }
        }
        private global::System.String _ReceiptID;
        partial void OnReceiptIDChanging(global::System.String value);
        partial void OnReceiptIDChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte ReceiptSeq
        {
            get
            {
                return _ReceiptSeq;
            }
            set
            {
                if (_ReceiptSeq != value)
                {
                    OnReceiptSeqChanging(value);
                    ReportPropertyChanging("ReceiptSeq");
                    _ReceiptSeq = StructuralObject.SetValidValue(value, "ReceiptSeq");
                    ReportPropertyChanged("ReceiptSeq");
                    OnReceiptSeqChanged();
                }
            }
        }
        private global::System.Byte _ReceiptSeq;
        partial void OnReceiptSeqChanging(global::System.Byte value);
        partial void OnReceiptSeqChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProductID
        {
            get
            {
                return _ProductID;
            }
            set
            {
                OnProductIDChanging(value);
                ReportPropertyChanging("ProductID");
                _ProductID = StructuralObject.SetValidValue(value, false, "ProductID");
                ReportPropertyChanged("ProductID");
                OnProductIDChanged();
            }
        }
        private global::System.String _ProductID;
        partial void OnProductIDChanging(global::System.String value);
        partial void OnProductIDChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value, "Quantity");
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private global::System.Int32 _Quantity;
        partial void OnQuantityChanging(global::System.Int32 value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UnitPrice
        {
            get
            {
                return _UnitPrice;
            }
            set
            {
                OnUnitPriceChanging(value);
                ReportPropertyChanging("UnitPrice");
                _UnitPrice = StructuralObject.SetValidValue(value, "UnitPrice");
                ReportPropertyChanged("UnitPrice");
                OnUnitPriceChanged();
            }
        }
        private global::System.Int32 _UnitPrice;
        partial void OnUnitPriceChanging(global::System.Int32 value);
        partial void OnUnitPriceChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value, "Amount");
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private global::System.Int32 _Amount;
        partial void OnAmountChanging(global::System.Int32 value);
        partial void OnAmountChanged();

        #endregion

        #region 導覽屬性
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("XINModel", "FK_ReceiptDetails_Product", "Product")]
        public Product Product
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("XINModel.FK_ReceiptDetails_Product", "Product").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("XINModel.FK_ReceiptDetails_Product", "Product").Value = value;
            }
        }
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> ProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("XINModel.FK_ReceiptDetails_Product", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("XINModel.FK_ReceiptDetails_Product", "Product", value);
                }
            }
        }
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("XINModel", "FK_ReceiptDetails_Receipt", "Receipt")]
        public Receipt Receipt
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Receipt>("XINModel.FK_ReceiptDetails_Receipt", "Receipt").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Receipt>("XINModel.FK_ReceiptDetails_Receipt", "Receipt").Value = value;
            }
        }
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Receipt> ReceiptReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Receipt>("XINModel.FK_ReceiptDetails_Receipt", "Receipt");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Receipt>("XINModel.FK_ReceiptDetails_Receipt", "Receipt", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 沒有可用的中繼資料文件。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="XINModel", Name="Supplier")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Supplier : EntityObject
    {
        #region Factory 方法
    
        /// <summary>
        /// 建立新 Supplier 物件。
        /// </summary>
        /// <param name="supplierID">SupplierID 屬性的初始值。</param>
        public static Supplier CreateSupplier(global::System.String supplierID)
        {
            Supplier supplier = new Supplier();
            supplier.SupplierID = supplierID;
            return supplier;
        }

        #endregion

        #region 簡單屬性
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SupplierID
        {
            get
            {
                return _SupplierID;
            }
            set
            {
                if (_SupplierID != value)
                {
                    OnSupplierIDChanging(value);
                    ReportPropertyChanging("SupplierID");
                    _SupplierID = StructuralObject.SetValidValue(value, false, "SupplierID");
                    ReportPropertyChanged("SupplierID");
                    OnSupplierIDChanged();
                }
            }
        }
        private global::System.String _SupplierID;
        partial void OnSupplierIDChanging(global::System.String value);
        partial void OnSupplierIDChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AttribName
        {
            get
            {
                return _AttribName;
            }
            set
            {
                OnAttribNameChanging(value);
                ReportPropertyChanging("AttribName");
                _AttribName = StructuralObject.SetValidValue(value, true, "AttribName");
                ReportPropertyChanged("AttribName");
                OnAttribNameChanged();
            }
        }
        private global::System.String _AttribName;
        partial void OnAttribNameChanging(global::System.String value);
        partial void OnAttribNameChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CompanyName
        {
            get
            {
                return _CompanyName;
            }
            set
            {
                OnCompanyNameChanging(value);
                ReportPropertyChanging("CompanyName");
                _CompanyName = StructuralObject.SetValidValue(value, true, "CompanyName");
                ReportPropertyChanged("CompanyName");
                OnCompanyNameChanged();
            }
        }
        private global::System.String _CompanyName;
        partial void OnCompanyNameChanging(global::System.String value);
        partial void OnCompanyNameChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EarNo
        {
            get
            {
                return _EarNo;
            }
            set
            {
                OnEarNoChanging(value);
                ReportPropertyChanging("EarNo");
                _EarNo = StructuralObject.SetValidValue(value, true, "EarNo");
                ReportPropertyChanged("EarNo");
                OnEarNoChanged();
            }
        }
        private global::System.String _EarNo;
        partial void OnEarNoChanging(global::System.String value);
        partial void OnEarNoChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String JoinMan
        {
            get
            {
                return _JoinMan;
            }
            set
            {
                OnJoinManChanging(value);
                ReportPropertyChanging("JoinMan");
                _JoinMan = StructuralObject.SetValidValue(value, true, "JoinMan");
                ReportPropertyChanged("JoinMan");
                OnJoinManChanged();
            }
        }
        private global::System.String _JoinMan;
        partial void OnJoinManChanging(global::System.String value);
        partial void OnJoinManChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Tel1
        {
            get
            {
                return _Tel1;
            }
            set
            {
                OnTel1Changing(value);
                ReportPropertyChanging("Tel1");
                _Tel1 = StructuralObject.SetValidValue(value, true, "Tel1");
                ReportPropertyChanged("Tel1");
                OnTel1Changed();
            }
        }
        private global::System.String _Tel1;
        partial void OnTel1Changing(global::System.String value);
        partial void OnTel1Changed();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Tel2
        {
            get
            {
                return _Tel2;
            }
            set
            {
                OnTel2Changing(value);
                ReportPropertyChanging("Tel2");
                _Tel2 = StructuralObject.SetValidValue(value, true, "Tel2");
                ReportPropertyChanged("Tel2");
                OnTel2Changed();
            }
        }
        private global::System.String _Tel2;
        partial void OnTel2Changing(global::System.String value);
        partial void OnTel2Changed();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Fax
        {
            get
            {
                return _Fax;
            }
            set
            {
                OnFaxChanging(value);
                ReportPropertyChanging("Fax");
                _Fax = StructuralObject.SetValidValue(value, true, "Fax");
                ReportPropertyChanged("Fax");
                OnFaxChanged();
            }
        }
        private global::System.String _Fax;
        partial void OnFaxChanging(global::System.String value);
        partial void OnFaxChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MobilePhone
        {
            get
            {
                return _MobilePhone;
            }
            set
            {
                OnMobilePhoneChanging(value);
                ReportPropertyChanging("MobilePhone");
                _MobilePhone = StructuralObject.SetValidValue(value, true, "MobilePhone");
                ReportPropertyChanged("MobilePhone");
                OnMobilePhoneChanged();
            }
        }
        private global::System.String _MobilePhone;
        partial void OnMobilePhoneChanging(global::System.String value);
        partial void OnMobilePhoneChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CompanyAddress
        {
            get
            {
                return _CompanyAddress;
            }
            set
            {
                OnCompanyAddressChanging(value);
                ReportPropertyChanging("CompanyAddress");
                _CompanyAddress = StructuralObject.SetValidValue(value, true, "CompanyAddress");
                ReportPropertyChanged("CompanyAddress");
                OnCompanyAddressChanged();
            }
        }
        private global::System.String _CompanyAddress;
        partial void OnCompanyAddressChanging(global::System.String value);
        partial void OnCompanyAddressChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DeliveryAddress
        {
            get
            {
                return _DeliveryAddress;
            }
            set
            {
                OnDeliveryAddressChanging(value);
                ReportPropertyChanging("DeliveryAddress");
                _DeliveryAddress = StructuralObject.SetValidValue(value, true, "DeliveryAddress");
                ReportPropertyChanged("DeliveryAddress");
                OnDeliveryAddressChanged();
            }
        }
        private global::System.String _DeliveryAddress;
        partial void OnDeliveryAddressChanging(global::System.String value);
        partial void OnDeliveryAddressChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastReceiptDate
        {
            get
            {
                return _LastReceiptDate;
            }
            set
            {
                OnLastReceiptDateChanging(value);
                ReportPropertyChanging("LastReceiptDate");
                _LastReceiptDate = StructuralObject.SetValidValue(value, "LastReceiptDate");
                ReportPropertyChanged("LastReceiptDate");
                OnLastReceiptDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastReceiptDate;
        partial void OnLastReceiptDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastReceiptDateChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comment
        {
            get
            {
                return _Comment;
            }
            set
            {
                OnCommentChanging(value);
                ReportPropertyChanging("Comment");
                _Comment = StructuralObject.SetValidValue(value, true, "Comment");
                ReportPropertyChanged("Comment");
                OnCommentChanged();
            }
        }
        private global::System.String _Comment;
        partial void OnCommentChanging(global::System.String value);
        partial void OnCommentChanged();

        #endregion

        #region 導覽屬性
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("XINModel", "FK_Receipt_Supplier", "Receipt")]
        public EntityCollection<Receipt> Receipt
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Receipt>("XINModel.FK_Receipt_Supplier", "Receipt");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Receipt>("XINModel.FK_Receipt_Supplier", "Receipt", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 沒有可用的中繼資料文件。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="XINModel", Name="Transfer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Transfer : EntityObject
    {
        #region Factory 方法
    
        /// <summary>
        /// 建立新 Transfer 物件。
        /// </summary>
        /// <param name="transferID">TransferID 屬性的初始值。</param>
        /// <param name="transferDate">TransferDate 屬性的初始值。</param>
        /// <param name="transferType">TransferType 屬性的初始值。</param>
        /// <param name="amount">Amount 屬性的初始值。</param>
        public static Transfer CreateTransfer(global::System.String transferID, global::System.DateTime transferDate, global::System.String transferType, global::System.Int32 amount)
        {
            Transfer transfer = new Transfer();
            transfer.TransferID = transferID;
            transfer.TransferDate = transferDate;
            transfer.TransferType = transferType;
            transfer.Amount = amount;
            return transfer;
        }

        #endregion

        #region 簡單屬性
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TransferID
        {
            get
            {
                return _TransferID;
            }
            set
            {
                if (_TransferID != value)
                {
                    OnTransferIDChanging(value);
                    ReportPropertyChanging("TransferID");
                    _TransferID = StructuralObject.SetValidValue(value, false, "TransferID");
                    ReportPropertyChanged("TransferID");
                    OnTransferIDChanged();
                }
            }
        }
        private global::System.String _TransferID;
        partial void OnTransferIDChanging(global::System.String value);
        partial void OnTransferIDChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime TransferDate
        {
            get
            {
                return _TransferDate;
            }
            set
            {
                OnTransferDateChanging(value);
                ReportPropertyChanging("TransferDate");
                _TransferDate = StructuralObject.SetValidValue(value, "TransferDate");
                ReportPropertyChanged("TransferDate");
                OnTransferDateChanged();
            }
        }
        private global::System.DateTime _TransferDate;
        partial void OnTransferDateChanging(global::System.DateTime value);
        partial void OnTransferDateChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TransferType
        {
            get
            {
                return _TransferType;
            }
            set
            {
                OnTransferTypeChanging(value);
                ReportPropertyChanging("TransferType");
                _TransferType = StructuralObject.SetValidValue(value, false, "TransferType");
                ReportPropertyChanged("TransferType");
                OnTransferTypeChanged();
            }
        }
        private global::System.String _TransferType;
        partial void OnTransferTypeChanging(global::System.String value);
        partial void OnTransferTypeChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value, "Amount");
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private global::System.Int32 _Amount;
        partial void OnAmountChanging(global::System.Int32 value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comment
        {
            get
            {
                return _Comment;
            }
            set
            {
                OnCommentChanging(value);
                ReportPropertyChanging("Comment");
                _Comment = StructuralObject.SetValidValue(value, true, "Comment");
                ReportPropertyChanged("Comment");
                OnCommentChanged();
            }
        }
        private global::System.String _Comment;
        partial void OnCommentChanging(global::System.String value);
        partial void OnCommentChanged();

        #endregion

        #region 導覽屬性
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("XINModel", "FK_TransferDetails_Transfer", "TransferDetails")]
        public EntityCollection<TransferDetails> TransferDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TransferDetails>("XINModel.FK_TransferDetails_Transfer", "TransferDetails");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TransferDetails>("XINModel.FK_TransferDetails_Transfer", "TransferDetails", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 沒有可用的中繼資料文件。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="XINModel", Name="TransferDetails")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TransferDetails : EntityObject
    {
        #region Factory 方法
    
        /// <summary>
        /// 建立新 TransferDetails 物件。
        /// </summary>
        /// <param name="transferID">TransferID 屬性的初始值。</param>
        /// <param name="seq">Seq 屬性的初始值。</param>
        /// <param name="productID">ProductID 屬性的初始值。</param>
        /// <param name="quantity">Quantity 屬性的初始值。</param>
        /// <param name="amount">Amount 屬性的初始值。</param>
        public static TransferDetails CreateTransferDetails(global::System.String transferID, global::System.Byte seq, global::System.String productID, global::System.Int32 quantity, global::System.Int32 amount)
        {
            TransferDetails transferDetails = new TransferDetails();
            transferDetails.TransferID = transferID;
            transferDetails.Seq = seq;
            transferDetails.ProductID = productID;
            transferDetails.Quantity = quantity;
            transferDetails.Amount = amount;
            return transferDetails;
        }

        #endregion

        #region 簡單屬性
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TransferID
        {
            get
            {
                return _TransferID;
            }
            set
            {
                if (_TransferID != value)
                {
                    OnTransferIDChanging(value);
                    ReportPropertyChanging("TransferID");
                    _TransferID = StructuralObject.SetValidValue(value, false, "TransferID");
                    ReportPropertyChanged("TransferID");
                    OnTransferIDChanged();
                }
            }
        }
        private global::System.String _TransferID;
        partial void OnTransferIDChanging(global::System.String value);
        partial void OnTransferIDChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte Seq
        {
            get
            {
                return _Seq;
            }
            set
            {
                if (_Seq != value)
                {
                    OnSeqChanging(value);
                    ReportPropertyChanging("Seq");
                    _Seq = StructuralObject.SetValidValue(value, "Seq");
                    ReportPropertyChanged("Seq");
                    OnSeqChanged();
                }
            }
        }
        private global::System.Byte _Seq;
        partial void OnSeqChanging(global::System.Byte value);
        partial void OnSeqChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProductID
        {
            get
            {
                return _ProductID;
            }
            set
            {
                OnProductIDChanging(value);
                ReportPropertyChanging("ProductID");
                _ProductID = StructuralObject.SetValidValue(value, false, "ProductID");
                ReportPropertyChanged("ProductID");
                OnProductIDChanged();
            }
        }
        private global::System.String _ProductID;
        partial void OnProductIDChanging(global::System.String value);
        partial void OnProductIDChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value, "Quantity");
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private global::System.Int32 _Quantity;
        partial void OnQuantityChanging(global::System.Int32 value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value, "Amount");
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private global::System.Int32 _Amount;
        partial void OnAmountChanging(global::System.Int32 value);
        partial void OnAmountChanged();

        #endregion

        #region 導覽屬性
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("XINModel", "FK_TransferDetails_Product", "Product")]
        public Product Product
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("XINModel.FK_TransferDetails_Product", "Product").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("XINModel.FK_TransferDetails_Product", "Product").Value = value;
            }
        }
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> ProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("XINModel.FK_TransferDetails_Product", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("XINModel.FK_TransferDetails_Product", "Product", value);
                }
            }
        }
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("XINModel", "FK_TransferDetails_Transfer", "Transfer")]
        public Transfer Transfer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Transfer>("XINModel.FK_TransferDetails_Transfer", "Transfer").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Transfer>("XINModel.FK_TransferDetails_Transfer", "Transfer").Value = value;
            }
        }
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Transfer> TransferReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Transfer>("XINModel.FK_TransferDetails_Transfer", "Transfer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Transfer>("XINModel.FK_TransferDetails_Transfer", "Transfer", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 沒有可用的中繼資料文件。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="XINModel", Name="UserAuthority")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserAuthority : EntityObject
    {
        #region Factory 方法
    
        /// <summary>
        /// 建立新 UserAuthority 物件。
        /// </summary>
        /// <param name="employeeNo">EmployeeNo 屬性的初始值。</param>
        /// <param name="programID">ProgramID 屬性的初始值。</param>
        /// <param name="run">Run 屬性的初始值。</param>
        /// <param name="append">Append 屬性的初始值。</param>
        /// <param name="edit">Edit 屬性的初始值。</param>
        /// <param name="report">Report 屬性的初始值。</param>
        public static UserAuthority CreateUserAuthority(global::System.String employeeNo, global::System.String programID, global::System.Boolean run, global::System.Boolean append, global::System.Boolean edit, global::System.Boolean report)
        {
            UserAuthority userAuthority = new UserAuthority();
            userAuthority.EmployeeNo = employeeNo;
            userAuthority.ProgramID = programID;
            userAuthority.Run = run;
            userAuthority.Append = append;
            userAuthority.Edit = edit;
            userAuthority.Report = report;
            return userAuthority;
        }

        #endregion

        #region 簡單屬性
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EmployeeNo
        {
            get
            {
                return _EmployeeNo;
            }
            set
            {
                if (_EmployeeNo != value)
                {
                    OnEmployeeNoChanging(value);
                    ReportPropertyChanging("EmployeeNo");
                    _EmployeeNo = StructuralObject.SetValidValue(value, false, "EmployeeNo");
                    ReportPropertyChanged("EmployeeNo");
                    OnEmployeeNoChanged();
                }
            }
        }
        private global::System.String _EmployeeNo;
        partial void OnEmployeeNoChanging(global::System.String value);
        partial void OnEmployeeNoChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProgramID
        {
            get
            {
                return _ProgramID;
            }
            set
            {
                if (_ProgramID != value)
                {
                    OnProgramIDChanging(value);
                    ReportPropertyChanging("ProgramID");
                    _ProgramID = StructuralObject.SetValidValue(value, false, "ProgramID");
                    ReportPropertyChanged("ProgramID");
                    OnProgramIDChanged();
                }
            }
        }
        private global::System.String _ProgramID;
        partial void OnProgramIDChanging(global::System.String value);
        partial void OnProgramIDChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Run
        {
            get
            {
                return _Run;
            }
            set
            {
                OnRunChanging(value);
                ReportPropertyChanging("Run");
                _Run = StructuralObject.SetValidValue(value, "Run");
                ReportPropertyChanged("Run");
                OnRunChanged();
            }
        }
        private global::System.Boolean _Run;
        partial void OnRunChanging(global::System.Boolean value);
        partial void OnRunChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Append
        {
            get
            {
                return _Append;
            }
            set
            {
                OnAppendChanging(value);
                ReportPropertyChanging("Append");
                _Append = StructuralObject.SetValidValue(value, "Append");
                ReportPropertyChanged("Append");
                OnAppendChanged();
            }
        }
        private global::System.Boolean _Append;
        partial void OnAppendChanging(global::System.Boolean value);
        partial void OnAppendChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Edit
        {
            get
            {
                return _Edit;
            }
            set
            {
                OnEditChanging(value);
                ReportPropertyChanging("Edit");
                _Edit = StructuralObject.SetValidValue(value, "Edit");
                ReportPropertyChanged("Edit");
                OnEditChanged();
            }
        }
        private global::System.Boolean _Edit;
        partial void OnEditChanging(global::System.Boolean value);
        partial void OnEditChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Report
        {
            get
            {
                return _Report;
            }
            set
            {
                OnReportChanging(value);
                ReportPropertyChanging("Report");
                _Report = StructuralObject.SetValidValue(value, "Report");
                ReportPropertyChanged("Report");
                OnReportChanged();
            }
        }
        private global::System.Boolean _Report;
        partial void OnReportChanging(global::System.Boolean value);
        partial void OnReportChanged();

        #endregion

        #region 導覽屬性
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("XINModel", "FK_UserAuthority_Programs", "Programs")]
        public Programs Programs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Programs>("XINModel.FK_UserAuthority_Programs", "Programs").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Programs>("XINModel.FK_UserAuthority_Programs", "Programs").Value = value;
            }
        }
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Programs> ProgramsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Programs>("XINModel.FK_UserAuthority_Programs", "Programs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Programs>("XINModel.FK_UserAuthority_Programs", "Programs", value);
                }
            }
        }
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("XINModel", "FK_UserAuthority_XINUsers", "XINUsers")]
        public XINUsers XINUsers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<XINUsers>("XINModel.FK_UserAuthority_XINUsers", "XINUsers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<XINUsers>("XINModel.FK_UserAuthority_XINUsers", "XINUsers").Value = value;
            }
        }
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<XINUsers> XINUsersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<XINUsers>("XINModel.FK_UserAuthority_XINUsers", "XINUsers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<XINUsers>("XINModel.FK_UserAuthority_XINUsers", "XINUsers", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 沒有可用的中繼資料文件。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="XINModel", Name="XINUsers")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class XINUsers : EntityObject
    {
        #region Factory 方法
    
        /// <summary>
        /// 建立新 XINUsers 物件。
        /// </summary>
        /// <param name="employeeNo">EmployeeNo 屬性的初始值。</param>
        /// <param name="employeeName">EmployeeName 屬性的初始值。</param>
        /// <param name="passwordCode">PasswordCode 屬性的初始值。</param>
        public static XINUsers CreateXINUsers(global::System.String employeeNo, global::System.String employeeName, global::System.String passwordCode)
        {
            XINUsers xINUsers = new XINUsers();
            xINUsers.EmployeeNo = employeeNo;
            xINUsers.EmployeeName = employeeName;
            xINUsers.PasswordCode = passwordCode;
            return xINUsers;
        }

        #endregion

        #region 簡單屬性
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EmployeeNo
        {
            get
            {
                return _EmployeeNo;
            }
            set
            {
                if (_EmployeeNo != value)
                {
                    OnEmployeeNoChanging(value);
                    ReportPropertyChanging("EmployeeNo");
                    _EmployeeNo = StructuralObject.SetValidValue(value, false, "EmployeeNo");
                    ReportPropertyChanged("EmployeeNo");
                    OnEmployeeNoChanged();
                }
            }
        }
        private global::System.String _EmployeeNo;
        partial void OnEmployeeNoChanging(global::System.String value);
        partial void OnEmployeeNoChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EmployeeName
        {
            get
            {
                return _EmployeeName;
            }
            set
            {
                OnEmployeeNameChanging(value);
                ReportPropertyChanging("EmployeeName");
                _EmployeeName = StructuralObject.SetValidValue(value, false, "EmployeeName");
                ReportPropertyChanged("EmployeeName");
                OnEmployeeNameChanged();
            }
        }
        private global::System.String _EmployeeName;
        partial void OnEmployeeNameChanging(global::System.String value);
        partial void OnEmployeeNameChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PasswordCode
        {
            get
            {
                return _PasswordCode;
            }
            set
            {
                OnPasswordCodeChanging(value);
                ReportPropertyChanging("PasswordCode");
                _PasswordCode = StructuralObject.SetValidValue(value, false, "PasswordCode");
                ReportPropertyChanged("PasswordCode");
                OnPasswordCodeChanged();
            }
        }
        private global::System.String _PasswordCode;
        partial void OnPasswordCodeChanging(global::System.String value);
        partial void OnPasswordCodeChanged();

        #endregion

        #region 導覽屬性
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("XINModel", "FK_UserAuthority_XINUsers", "UserAuthority")]
        public EntityCollection<UserAuthority> UserAuthority
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserAuthority>("XINModel.FK_UserAuthority_XINUsers", "UserAuthority");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserAuthority>("XINModel.FK_UserAuthority_XINUsers", "UserAuthority", value);
                }
            }
        }

        #endregion

    }

    #endregion

}
