//------------------------------------------------------------------------------
// <auto-generated>
//    這個程式碼是由範本產生。
//
//    對這個檔案進行手動變更可能導致您的應用程式產生未預期的行為。
//    如果重新產生程式碼，將會覆寫對這個檔案的手動變更。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM 關聯性中繼資料

[assembly: EdmRelationshipAttribute("XINModel", "FK_UserAuthority_Programs", "Programs", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(_10_05_01.Programs), "UserAuthority", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(_10_05_01.UserAuthority), true)]
[assembly: EdmRelationshipAttribute("XINModel", "FK_UserAuthority_XINUsers", "XINUsers", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(_10_05_01.XINUsers), "UserAuthority", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(_10_05_01.UserAuthority), true)]

#endregion

namespace _10_05_01
{
    #region 內容
    
    /// <summary>
    /// 沒有可用的中繼資料文件。
    /// </summary>
    public partial class XINEntities : ObjectContext
    {
        #region 建構函式
    
        /// <summary>
        /// 使用在應用程式組態檔的 'XINEntities' 區段中找到的連接字串，初始化新的 XINEntities 物件。
        /// </summary>
        public XINEntities() : base("name=XINEntities", "XINEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 XINEntities 物件。
        /// </summary>
        public XINEntities(string connectionString) : base(connectionString, "XINEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 XINEntities 物件。
        /// </summary>
        public XINEntities(EntityConnection connection) : base(connection, "XINEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region 部分方法
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet 屬性
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        public ObjectSet<Programs> Programs
        {
            get
            {
                if ((_Programs == null))
                {
                    _Programs = base.CreateObjectSet<Programs>("Programs");
                }
                return _Programs;
            }
        }
        private ObjectSet<Programs> _Programs;
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        public ObjectSet<UserAuthority> UserAuthority
        {
            get
            {
                if ((_UserAuthority == null))
                {
                    _UserAuthority = base.CreateObjectSet<UserAuthority>("UserAuthority");
                }
                return _UserAuthority;
            }
        }
        private ObjectSet<UserAuthority> _UserAuthority;
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        public ObjectSet<XINUsers> XINUsers
        {
            get
            {
                if ((_XINUsers == null))
                {
                    _XINUsers = base.CreateObjectSet<XINUsers>("XINUsers");
                }
                return _XINUsers;
            }
        }
        private ObjectSet<XINUsers> _XINUsers;

        #endregion

        #region AddTo 方法
    
        /// <summary>
        /// 將新物件加入 Programs EntitySet 的方法已被取代。請考慮改為使用關聯的 ObjectSet&lt;T&gt; 屬性的 .Add 方法。
        /// </summary>
        public void AddToPrograms(Programs programs)
        {
            base.AddObject("Programs", programs);
        }
    
        /// <summary>
        /// 將新物件加入 UserAuthority EntitySet 的方法已被取代。請考慮改為使用關聯的 ObjectSet&lt;T&gt; 屬性的 .Add 方法。
        /// </summary>
        public void AddToUserAuthority(UserAuthority userAuthority)
        {
            base.AddObject("UserAuthority", userAuthority);
        }
    
        /// <summary>
        /// 將新物件加入 XINUsers EntitySet 的方法已被取代。請考慮改為使用關聯的 ObjectSet&lt;T&gt; 屬性的 .Add 方法。
        /// </summary>
        public void AddToXINUsers(XINUsers xINUsers)
        {
            base.AddObject("XINUsers", xINUsers);
        }

        #endregion

    }

    #endregion

    #region 實體
    
    /// <summary>
    /// 沒有可用的中繼資料文件。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="XINModel", Name="Programs")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Programs : EntityObject
    {
        #region Factory 方法
    
        /// <summary>
        /// 建立新 Programs 物件。
        /// </summary>
        /// <param name="programID">ProgramID 屬性的初始值。</param>
        /// <param name="programName">ProgramName 屬性的初始值。</param>
        public static Programs CreatePrograms(global::System.String programID, global::System.String programName)
        {
            Programs programs = new Programs();
            programs.ProgramID = programID;
            programs.ProgramName = programName;
            return programs;
        }

        #endregion

        #region 簡單屬性
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProgramID
        {
            get
            {
                return _ProgramID;
            }
            set
            {
                if (_ProgramID != value)
                {
                    OnProgramIDChanging(value);
                    ReportPropertyChanging("ProgramID");
                    _ProgramID = StructuralObject.SetValidValue(value, false, "ProgramID");
                    ReportPropertyChanged("ProgramID");
                    OnProgramIDChanged();
                }
            }
        }
        private global::System.String _ProgramID;
        partial void OnProgramIDChanging(global::System.String value);
        partial void OnProgramIDChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProgramName
        {
            get
            {
                return _ProgramName;
            }
            set
            {
                OnProgramNameChanging(value);
                ReportPropertyChanging("ProgramName");
                _ProgramName = StructuralObject.SetValidValue(value, false, "ProgramName");
                ReportPropertyChanged("ProgramName");
                OnProgramNameChanged();
            }
        }
        private global::System.String _ProgramName;
        partial void OnProgramNameChanging(global::System.String value);
        partial void OnProgramNameChanged();

        #endregion

        #region 導覽屬性
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("XINModel", "FK_UserAuthority_Programs", "UserAuthority")]
        public EntityCollection<UserAuthority> UserAuthority
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserAuthority>("XINModel.FK_UserAuthority_Programs", "UserAuthority");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserAuthority>("XINModel.FK_UserAuthority_Programs", "UserAuthority", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 沒有可用的中繼資料文件。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="XINModel", Name="UserAuthority")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserAuthority : EntityObject
    {
        #region Factory 方法
    
        /// <summary>
        /// 建立新 UserAuthority 物件。
        /// </summary>
        /// <param name="employeeNo">EmployeeNo 屬性的初始值。</param>
        /// <param name="programID">ProgramID 屬性的初始值。</param>
        /// <param name="run">Run 屬性的初始值。</param>
        /// <param name="append">Append 屬性的初始值。</param>
        /// <param name="edit">Edit 屬性的初始值。</param>
        /// <param name="report">Report 屬性的初始值。</param>
        public static UserAuthority CreateUserAuthority(global::System.String employeeNo, global::System.String programID, global::System.Boolean run, global::System.Boolean append, global::System.Boolean edit, global::System.Boolean report)
        {
            UserAuthority userAuthority = new UserAuthority();
            userAuthority.EmployeeNo = employeeNo;
            userAuthority.ProgramID = programID;
            userAuthority.Run = run;
            userAuthority.Append = append;
            userAuthority.Edit = edit;
            userAuthority.Report = report;
            return userAuthority;
        }

        #endregion

        #region 簡單屬性
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EmployeeNo
        {
            get
            {
                return _EmployeeNo;
            }
            set
            {
                if (_EmployeeNo != value)
                {
                    OnEmployeeNoChanging(value);
                    ReportPropertyChanging("EmployeeNo");
                    _EmployeeNo = StructuralObject.SetValidValue(value, false, "EmployeeNo");
                    ReportPropertyChanged("EmployeeNo");
                    OnEmployeeNoChanged();
                }
            }
        }
        private global::System.String _EmployeeNo;
        partial void OnEmployeeNoChanging(global::System.String value);
        partial void OnEmployeeNoChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProgramID
        {
            get
            {
                return _ProgramID;
            }
            set
            {
                if (_ProgramID != value)
                {
                    OnProgramIDChanging(value);
                    ReportPropertyChanging("ProgramID");
                    _ProgramID = StructuralObject.SetValidValue(value, false, "ProgramID");
                    ReportPropertyChanged("ProgramID");
                    OnProgramIDChanged();
                }
            }
        }
        private global::System.String _ProgramID;
        partial void OnProgramIDChanging(global::System.String value);
        partial void OnProgramIDChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Run
        {
            get
            {
                return _Run;
            }
            set
            {
                OnRunChanging(value);
                ReportPropertyChanging("Run");
                _Run = StructuralObject.SetValidValue(value, "Run");
                ReportPropertyChanged("Run");
                OnRunChanged();
            }
        }
        private global::System.Boolean _Run;
        partial void OnRunChanging(global::System.Boolean value);
        partial void OnRunChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Append
        {
            get
            {
                return _Append;
            }
            set
            {
                OnAppendChanging(value);
                ReportPropertyChanging("Append");
                _Append = StructuralObject.SetValidValue(value, "Append");
                ReportPropertyChanged("Append");
                OnAppendChanged();
            }
        }
        private global::System.Boolean _Append;
        partial void OnAppendChanging(global::System.Boolean value);
        partial void OnAppendChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Edit
        {
            get
            {
                return _Edit;
            }
            set
            {
                OnEditChanging(value);
                ReportPropertyChanging("Edit");
                _Edit = StructuralObject.SetValidValue(value, "Edit");
                ReportPropertyChanged("Edit");
                OnEditChanged();
            }
        }
        private global::System.Boolean _Edit;
        partial void OnEditChanging(global::System.Boolean value);
        partial void OnEditChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Report
        {
            get
            {
                return _Report;
            }
            set
            {
                OnReportChanging(value);
                ReportPropertyChanging("Report");
                _Report = StructuralObject.SetValidValue(value, "Report");
                ReportPropertyChanged("Report");
                OnReportChanged();
            }
        }
        private global::System.Boolean _Report;
        partial void OnReportChanging(global::System.Boolean value);
        partial void OnReportChanged();

        #endregion

        #region 導覽屬性
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("XINModel", "FK_UserAuthority_Programs", "Programs")]
        public Programs Programs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Programs>("XINModel.FK_UserAuthority_Programs", "Programs").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Programs>("XINModel.FK_UserAuthority_Programs", "Programs").Value = value;
            }
        }
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Programs> ProgramsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Programs>("XINModel.FK_UserAuthority_Programs", "Programs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Programs>("XINModel.FK_UserAuthority_Programs", "Programs", value);
                }
            }
        }
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("XINModel", "FK_UserAuthority_XINUsers", "XINUsers")]
        public XINUsers XINUsers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<XINUsers>("XINModel.FK_UserAuthority_XINUsers", "XINUsers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<XINUsers>("XINModel.FK_UserAuthority_XINUsers", "XINUsers").Value = value;
            }
        }
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<XINUsers> XINUsersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<XINUsers>("XINModel.FK_UserAuthority_XINUsers", "XINUsers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<XINUsers>("XINModel.FK_UserAuthority_XINUsers", "XINUsers", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 沒有可用的中繼資料文件。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="XINModel", Name="XINUsers")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class XINUsers : EntityObject
    {
        #region Factory 方法
    
        /// <summary>
        /// 建立新 XINUsers 物件。
        /// </summary>
        /// <param name="employeeNo">EmployeeNo 屬性的初始值。</param>
        /// <param name="employeeName">EmployeeName 屬性的初始值。</param>
        /// <param name="passwordCode">PasswordCode 屬性的初始值。</param>
        public static XINUsers CreateXINUsers(global::System.String employeeNo, global::System.String employeeName, global::System.String passwordCode)
        {
            XINUsers xINUsers = new XINUsers();
            xINUsers.EmployeeNo = employeeNo;
            xINUsers.EmployeeName = employeeName;
            xINUsers.PasswordCode = passwordCode;
            return xINUsers;
        }

        #endregion

        #region 簡單屬性
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EmployeeNo
        {
            get
            {
                return _EmployeeNo;
            }
            set
            {
                if (_EmployeeNo != value)
                {
                    OnEmployeeNoChanging(value);
                    ReportPropertyChanging("EmployeeNo");
                    _EmployeeNo = StructuralObject.SetValidValue(value, false, "EmployeeNo");
                    ReportPropertyChanged("EmployeeNo");
                    OnEmployeeNoChanged();
                }
            }
        }
        private global::System.String _EmployeeNo;
        partial void OnEmployeeNoChanging(global::System.String value);
        partial void OnEmployeeNoChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EmployeeName
        {
            get
            {
                return _EmployeeName;
            }
            set
            {
                OnEmployeeNameChanging(value);
                ReportPropertyChanging("EmployeeName");
                _EmployeeName = StructuralObject.SetValidValue(value, false, "EmployeeName");
                ReportPropertyChanged("EmployeeName");
                OnEmployeeNameChanged();
            }
        }
        private global::System.String _EmployeeName;
        partial void OnEmployeeNameChanging(global::System.String value);
        partial void OnEmployeeNameChanged();
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PasswordCode
        {
            get
            {
                return _PasswordCode;
            }
            set
            {
                OnPasswordCodeChanging(value);
                ReportPropertyChanging("PasswordCode");
                _PasswordCode = StructuralObject.SetValidValue(value, false, "PasswordCode");
                ReportPropertyChanged("PasswordCode");
                OnPasswordCodeChanged();
            }
        }
        private global::System.String _PasswordCode;
        partial void OnPasswordCodeChanging(global::System.String value);
        partial void OnPasswordCodeChanged();

        #endregion

        #region 導覽屬性
    
        /// <summary>
        /// 沒有可用的中繼資料文件。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("XINModel", "FK_UserAuthority_XINUsers", "UserAuthority")]
        public EntityCollection<UserAuthority> UserAuthority
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserAuthority>("XINModel.FK_UserAuthority_XINUsers", "UserAuthority");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserAuthority>("XINModel.FK_UserAuthority_XINUsers", "UserAuthority", value);
                }
            }
        }

        #endregion

    }

    #endregion

}
