//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EightQueensProblem
{
    namespace Properties
    {

        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "12.0.0.0"), global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal sealed partial class Settings : System.Configuration.ApplicationSettingsBase
        {
            private static Settings defaultInstance = (Settings)global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings());

            #region My.Settings Auto-Save Functionality
            private static bool addedHandler;

            private static object addedHandlerLockObject = new object();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
            private static void AutoSaveSettings(object sender, global::System.EventArgs e)
            {
                if (My.MyApplication.Application.SaveMySettingsOnExit)
                {
                    defaultInstance.Save();
                }
            }
            #endregion

            public static Settings Default
            {
                get
                {

                    if (!addedHandler)
                    {
                        lock (addedHandlerLockObject)
                        {
                            if (!addedHandler)
                            {
                                My.MyApplication.Application.Shutdown += new Microsoft.VisualBasic.ApplicationServices.ShutdownEventHandler(AutoSaveSettings);
                                addedHandler = true;
                            }
                        }
                    }
                    return defaultInstance;
                }
            }
        }
    }

}