#------------------------------------------------------------------------
# Source File Information (DO NOT MODIFY)
# Source ID: 535928c1-595f-4e9c-ab04-8087802c0d75
# Source File: EventLogCollector.psf
#------------------------------------------------------------------------
#region File Recovery Data (DO NOT MODIFY)
<#RecoveryData:
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#>
#endregion

<#
    .NOTES
    --------------------------------------------------------------------------------
     Code generated by:  SAPIEN Technologies, Inc., PowerShell Studio 2015 v4.2.98
     Generated on:       12/11/2015 11:26 PM
     Generated by:        
     Organization:        
    --------------------------------------------------------------------------------
    .DESCRIPTION
        GUI script generated by PowerShell Studio 2015
#>
#----------------------------------------------
#region Application Functions
#----------------------------------------------

#endregion Application Functions

#----------------------------------------------
# Generated Form Function
#----------------------------------------------
function Call-EventLogCollector_psf {

	#----------------------------------------------
	#region Import the Assemblies
	#----------------------------------------------
	[void][reflection.assembly]::Load('mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
	[void][reflection.assembly]::Load('System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
	[void][reflection.assembly]::Load('System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
	[void][reflection.assembly]::Load('System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
	[void][reflection.assembly]::Load('System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a')
	[void][reflection.assembly]::Load('System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
	[void][reflection.assembly]::Load('System.DirectoryServices, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a')
	[void][reflection.assembly]::Load('System.Core, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
	[void][reflection.assembly]::Load('System.ServiceProcess, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a')
	#endregion Import Assemblies

	#----------------------------------------------
	#region Define SAPIEN Types
	#----------------------------------------------
	try{
		$local:type = [FolderBrowserModernDialog]
	}
	catch
	{
		Add-Type -ReferencedAssemblies ('System.Windows.Forms') -TypeDefinition  @" 
		using System;
		using System.Windows.Forms;
		using System.Reflection;

        namespace SAPIENTypes
        {
		    public class FolderBrowserModernDialog : System.Windows.Forms.CommonDialog
            {
                private System.Windows.Forms.OpenFileDialog fileDialog;
                public FolderBrowserModernDialog()
                {
                    fileDialog = new System.Windows.Forms.OpenFileDialog();
                    fileDialog.Filter = "Folders|\n";
                    fileDialog.AddExtension = false;
                    fileDialog.CheckFileExists = false;
                    fileDialog.DereferenceLinks = true;
                    fileDialog.Multiselect = false;
                    fileDialog.Title = "Select a folder";
                }

                public string Title
                {
                    get { return fileDialog.Title; }
                    set { fileDialog.Title = value; }
                }

                public string InitialDirectory
                {
                    get { return fileDialog.InitialDirectory; }
                    set { fileDialog.InitialDirectory = value; }
                }
                
                public string SelectedPath
                {
                    get { return fileDialog.FileName; }
                    set { fileDialog.FileName = value; }
                }

                object InvokeMethod(Type type, object obj, string method, object[] parameters)
                {
                    MethodInfo methInfo = type.GetMethod(method, BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic);
                    return methInfo.Invoke(obj, parameters);
                }

                bool ShowOriginalBrowserDialog(IntPtr hwndOwner)
                {
                    FolderBrowserDialog folderBrowserDialog = new FolderBrowserDialog();
                    folderBrowserDialog.Description = this.Title;
                    folderBrowserDialog.SelectedPath = !string.IsNullOrEmpty(this.SelectedPath) ? this.SelectedPath : this.InitialDirectory;
                    folderBrowserDialog.ShowNewFolderButton = false;
                    if (folderBrowserDialog.ShowDialog() == DialogResult.OK)
                    {
                        fileDialog.FileName = folderBrowserDialog.SelectedPath;
                        return true;
                    }
                    return false;
                }

                protected override bool RunDialog(IntPtr hwndOwner)
                {
                    if (Environment.OSVersion.Version.Major >= 6)
                    {      
                        try
                        {
                            bool flag = false;
                            System.Reflection.Assembly assembly = Assembly.Load("System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089");
                            Type typeIFileDialog = assembly.GetType("System.Windows.Forms.FileDialogNative").GetNestedType("IFileDialog", BindingFlags.NonPublic);
                            uint num = 0;
                            object dialog = InvokeMethod(fileDialog.GetType(), fileDialog, "CreateVistaDialog", null);
                            InvokeMethod(fileDialog.GetType(), fileDialog, "OnBeforeVistaDialog", new object[] { dialog });
                            uint options = (uint)InvokeMethod(typeof(System.Windows.Forms.FileDialog), fileDialog, "GetOptions", null) | (uint)0x20;
                            InvokeMethod(typeIFileDialog, dialog, "SetOptions", new object[] { options });
                            Type vistaDialogEventsType = assembly.GetType("System.Windows.Forms.FileDialog").GetNestedType("VistaDialogEvents", BindingFlags.NonPublic);
                            object pfde = Activator.CreateInstance(vistaDialogEventsType, fileDialog);
                            object[] parameters = new object[] { pfde, num };
                            InvokeMethod(typeIFileDialog, dialog, "Advise", parameters);
                            num = (uint)parameters[1];
                            try
                            {
                                int num2 = (int)InvokeMethod(typeIFileDialog, dialog, "Show", new object[] { hwndOwner });
                                flag = 0 == num2;
                            }
                            finally
                            {
                                InvokeMethod(typeIFileDialog, dialog, "Unadvise", new object[] { num });
                                GC.KeepAlive(pfde);
                            }
                            return flag;
                        }
                        catch
                        {
                            return ShowOriginalBrowserDialog(hwndOwner);
                        }
                    }
                    else
                        return ShowOriginalBrowserDialog(hwndOwner);
                }

                public override void Reset()
                {
                    fileDialog.Reset();
                }
            }
       }
"@ | Out-Null
	}
	#endregion Define SAPIEN Types

	#----------------------------------------------
	#region Generated Form Objects
	#----------------------------------------------
	[System.Windows.Forms.Application]::EnableVisualStyles()
	$formEventLogCollectorV10 = New-Object 'System.Windows.Forms.Form'
	$statusbar1 = New-Object 'System.Windows.Forms.StatusBar'
	$groupboxExportResults = New-Object 'System.Windows.Forms.GroupBox'
	$buttonExportResults = New-Object 'System.Windows.Forms.Button'
	$checkboxOpenResultsAutomatic = New-Object 'System.Windows.Forms.CheckBox'
	$radiobuttonHTML = New-Object 'System.Windows.Forms.RadioButton'
	$radiobuttonCSV = New-Object 'System.Windows.Forms.RadioButton'
	$datagridview1 = New-Object 'System.Windows.Forms.DataGridView'
	$groupboxSelectEventLog = New-Object 'System.Windows.Forms.GroupBox'
	$buttonLoad = New-Object 'System.Windows.Forms.Button'
	$comboboxEventLogSelect = New-Object 'System.Windows.Forms.ComboBox'
	$labelSelectALogToQuery = New-Object 'System.Windows.Forms.Label'
	$groupbox1 = New-Object 'System.Windows.Forms.GroupBox'
	$buttonConnect = New-Object 'System.Windows.Forms.Button'
	$textbox1 = New-Object 'System.Windows.Forms.TextBox'
	$labelEnterComputerName = New-Object 'System.Windows.Forms.Label'
	$menustrip1 = New-Object 'System.Windows.Forms.MenuStrip'
	$fileToolStripMenuItem = New-Object 'System.Windows.Forms.ToolStripMenuItem'
	$closeToolStripMenuItem = New-Object 'System.Windows.Forms.ToolStripMenuItem'
	$helpToolStripMenuItem = New-Object 'System.Windows.Forms.ToolStripMenuItem'
	$onlineDocumentationToolStripMenuItem = New-Object 'System.Windows.Forms.ToolStripMenuItem'
	$aboutToolStripMenuItem = New-Object 'System.Windows.Forms.ToolStripMenuItem'
	$errorprovider1 = New-Object 'System.Windows.Forms.ErrorProvider'
	$folderbrowsermoderndialog1 = New-Object 'SAPIENTypes.FolderBrowserModernDialog'
	$InitialFormWindowState = New-Object 'System.Windows.Forms.FormWindowState'
	#endregion Generated Form Objects

	#----------------------------------------------
	# User Generated Script
	#----------------------------------------------
	
	$formEventLogCollectorV10_Load={
		#TODO: Place custom script here
		$script:ComputerName = $env:COMPUTERNAME
		$textbox1.Text = $ComputerName
		
	}
	
	#region Control Helper Functions
	function Load-DataGridView
	{
		<#
		.SYNOPSIS
			This functions helps you load items into a DataGridView.
	
		.DESCRIPTION
			Use this function to dynamically load items into the DataGridView control.
	
		.PARAMETER  DataGridView
			The DataGridView control you want to add items to.
	
		.PARAMETER  Item
			The object or objects you wish to load into the DataGridView's items collection.
		
		.PARAMETER  DataMember
			Sets the name of the list or table in the data source for which the DataGridView is displaying data.
	
		#>
		Param (
			[ValidateNotNull()]
			[Parameter(Mandatory=$true)]
			[System.Windows.Forms.DataGridView]$DataGridView,
			[ValidateNotNull()]
			[Parameter(Mandatory=$true)]
			$Item,
		    [Parameter(Mandatory=$false)]
			[string]$DataMember
		)
		$DataGridView.SuspendLayout()
		$DataGridView.DataMember = $DataMember
		
		if ($Item -is [System.ComponentModel.IListSource]`
		-or $Item -is [System.ComponentModel.IBindingList] -or $Item -is [System.ComponentModel.IBindingListView] )
		{
			$DataGridView.DataSource = $Item
		}
		else
		{
			$array = New-Object System.Collections.ArrayList
			
			if ($Item -is [System.Collections.IList])
			{
				$array.AddRange($Item)
			}
			else
			{	
				$array.Add($Item)	
			}
			$DataGridView.DataSource = $array
		}
		
		$DataGridView.ResumeLayout()
	}
	
	function ConvertTo-DataTable
	{
		<#
			.SYNOPSIS
				Converts objects into a DataTable.
		
			.DESCRIPTION
				Converts objects into a DataTable, which are used for DataBinding.
		
			.PARAMETER  InputObject
				The input to convert into a DataTable.
		
			.PARAMETER  Table
				The DataTable you wish to load the input into.
		
			.PARAMETER RetainColumns
				This switch tells the function to keep the DataTable's existing columns.
			
			.PARAMETER FilterWMIProperties
				This switch removes WMI properties that start with an underline.
		
			.EXAMPLE
				$DataTable = ConvertTo-DataTable -InputObject (Get-Process)
		#>
		[OutputType([System.Data.DataTable])]
		param(
		[ValidateNotNull()]
		$InputObject, 
		[ValidateNotNull()]
		[System.Data.DataTable]$Table,
		[switch]$RetainColumns,
		[switch]$FilterWMIProperties)
		
		if($Table -eq $null)
		{
			$Table = New-Object System.Data.DataTable
		}
	
		if($InputObject-is [System.Data.DataTable])
		{
			$Table = $InputObject
		}
		else
		{
			if(-not $RetainColumns -or $Table.Columns.Count -eq 0)
			{
				#Clear out the Table Contents
				$Table.Clear()
	
				if($InputObject -eq $null){ return } #Empty Data
				
				$object = $null
				#find the first non null value
				foreach($item in $InputObject)
				{
					if($item -ne $null)
					{
						$object = $item
						break	
					}
				}
	
				if($object -eq $null) { return } #All null then empty
				
				#Get all the properties in order to create the columns
				foreach ($prop in $object.PSObject.Get_Properties())
				{
					if(-not $FilterWMIProperties -or -not $prop.Name.StartsWith('__'))#filter out WMI properties
					{
						#Get the type from the Definition string
						$type = $null
						
						if($prop.Value -ne $null)
						{
							try{ $type = $prop.Value.GetType() } catch {}
						}
	
						if($type -ne $null) # -and [System.Type]::GetTypeCode($type) -ne 'Object')
						{
			      			[void]$table.Columns.Add($prop.Name, $type) 
						}
						else #Type info not found
						{ 
							[void]$table.Columns.Add($prop.Name) 	
						}
					}
			    }
				
				if($object -is [System.Data.DataRow])
				{
					foreach($item in $InputObject)
					{	
						$Table.Rows.Add($item)
					}
					return  @(,$Table)
				}
			}
			else
			{
				$Table.Rows.Clear()	
			}
			
			foreach($item in $InputObject)
			{		
				$row = $table.NewRow()
				
				if($item)
				{
					foreach ($prop in $item.PSObject.Get_Properties())
					{
						if($table.Columns.Contains($prop.Name))
						{
							$row.Item($prop.Name) = $prop.Value
						}
					}
				}
				[void]$table.Rows.Add($row)
			}
		}
	
		return @(,$Table)	
	}
	
	function Load-ComboBox 
	{
	<#
		.SYNOPSIS
			This functions helps you load items into a ComboBox.
	
		.DESCRIPTION
			Use this function to dynamically load items into the ComboBox control.
	
		.PARAMETER  ComboBox
			The ComboBox control you want to add items to.
	
		.PARAMETER  Items
			The object or objects you wish to load into the ComboBox's Items collection.
	
		.PARAMETER  DisplayMember
			Indicates the property to display for the items in this control.
		
		.PARAMETER  Append
			Adds the item(s) to the ComboBox without clearing the Items collection.
		
		.EXAMPLE
			Load-ComboBox $combobox1 "Red", "White", "Blue"
		
		.EXAMPLE
			Load-ComboBox $combobox1 "Red" -Append
			Load-ComboBox $combobox1 "White" -Append
			Load-ComboBox $combobox1 "Blue" -Append
		
		.EXAMPLE
			Load-ComboBox $combobox1 (Get-Process) "ProcessName"
	#>
		Param (
			[ValidateNotNull()]
			[Parameter(Mandatory=$true)]
			[System.Windows.Forms.ComboBox]$ComboBox,
			[ValidateNotNull()]
			[Parameter(Mandatory=$true)]
			$Items,
		    [Parameter(Mandatory=$false)]
			[string]$DisplayMember,
			[switch]$Append
		)
		
		if(-not $Append)
		{
			$ComboBox.Items.Clear()	
		}
		
		if($Items -is [Object[]])
		{
			$ComboBox.Items.AddRange($Items)
		}
		elseif ($Items -is [Array])
		{
			$ComboBox.BeginUpdate()
			foreach($obj in $Items)
			{
				$ComboBox.Items.Add($obj)	
			}
			$ComboBox.EndUpdate()
		}
		else
		{
			$ComboBox.Items.Add($Items)	
		}
	
		$ComboBox.DisplayMember = $DisplayMember	
	}
	#endregion
	
	$buttonConnect_Click={
		#TODO: Place custom script here
		$ComputerName = $textbox1.Text
		
		try
		{
			Get-EventLog -ComputerName $ComputerName -List -OutVariable Logs -ErrorAction Stop
			$statusbar1.Text = "Successfully connected to the computer $($ComputerName)"
			Load-ComboBox -ComboBox $comboboxEventLogSelect -Items $Logs.Log
		}
		
		catch
		{
			$errorprovider1.SetIconAlignment($buttonConnect, 'MiddleLeft')
			$errorprovider1.SetError($buttonConnect,$($_.Exception.Message))
			$statusbar1.Text = "$($ComputerName): $($_.Exception.Message)"
			
		}
	}
	
	$buttonLoad_Click={
		#TODO: Place custom script here
		
		$datagridview1.AutoSizeColumnsMode = 'Fill'
		
		try
		{
			$script:LogsQueried = Get-EventLog -ComputerName $ComputerName -LogName $($comboboxEventLogSelect.SelectedItem) -Newest 10 | select EventId, EntryType, Message
			Load-DataGridView -DataGridView $datagridview1 -Item $LogsQueried
			$statusbar1.Text = "Successfully queried the $($comboboxEventLogSelect.SelectedItem) Log into the DataGridview"
			
		}
		
		catch
		{
			
		    $statusbar1.Text = "$($comboboxEventLogSelect.SelectedItem) : $($_.Exception.Message)"
			
			
		}
		
	}
	
	$buttonExportResults_Click={
		#TODO: Place custom script here
		
		$folderbrowsermoderndialog1.InitialDirectory = "E:\Projects"
		
		if ($folderbrowsermoderndialog1.ShowDialog() -eq 'OK')
		{
			$SelectedPath = $folderbrowsermoderndialog1.SelectedPath
			
		}
		
		if ($radiobuttonCSV.Checked)
		{
			
			$LogsQueried | Export-Csv -NoTypeInformation -Path "$SelectedPath\Results.csv"
			$statusbar1.Text = "Results are exported to the $SelectedPath\Results.csv file"
			
			if ($checkboxOpenResultsAutomatic.Checked)
			{
				
			  Invoke-Item -Path "$SelectedPath\Results.csv"		
			}
			
			
		}
		
		
		if ($radiobuttonHTML.Checked)
		{
			
			$LogsQueried | ConvertTo-Html | Out-File -FilePath "$SelectedPath\Results.html"
			$statusbar1.Text = "Results are exported to the $SelectedPath\Results.html file"
			
			if ($checkboxOpenResultsAutomatic.Checked)
			{
				
				Invoke-Item -Path "$SelectedPath\Results.html"
			}
			
			
		}
		
		
		
		
	}
	
	$closeToolStripMenuItem_Click={
		#TODO: Place custom script here
		$formEventLogCollectorV10.Close()
		
	}
	
	$onlineDocumentationToolStripMenuItem_Click={
		#TODO: Place custom script here
		Start-Process -FilePath "www.pluralsight.com"
	}
	
	$aboutToolStripMenuItem_Click={
		
		#------------------------------------------------------------------------
		# Source File Information (DO NOT MODIFY)
		# Source ID: 84dda7ce-e6d2-4adc-bf41-af77987a260a
		# Source File: E:\Projects\About.psf
		#------------------------------------------------------------------------
		
	<#
	    .NOTES
	    --------------------------------------------------------------------------------
	     Code generated by:  SAPIEN Technologies, Inc., PowerShell Studio 2015 v4.2.98
	     Generated on:       12/10/2015 4:12 PM
	     Generated by:        
	     Organization:        
	    --------------------------------------------------------------------------------
	    .DESCRIPTION
	        GUI script generated by PowerShell Studio 2015
	#>
		#----------------------------------------------
		#region Application Functions
		#----------------------------------------------
		
		#endregion Application Functions
		
		#----------------------------------------------
		# Generated Form Function
		#----------------------------------------------
		function Call-About_psf
		{
			
			#----------------------------------------------
			#region Import the Assemblies
			#----------------------------------------------
			[void][reflection.assembly]::Load('mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
			[void][reflection.assembly]::Load('System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
			[void][reflection.assembly]::Load('System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
			[void][reflection.assembly]::Load('System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
			[void][reflection.assembly]::Load('System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a')
			[void][reflection.assembly]::Load('System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
			[void][reflection.assembly]::Load('System.DirectoryServices, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a')
			[void][reflection.assembly]::Load('System.Core, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
			[void][reflection.assembly]::Load('System.ServiceProcess, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a')
			#endregion Import Assemblies
			
			#----------------------------------------------
			#region Generated Form Objects
			#----------------------------------------------
			[System.Windows.Forms.Application]::EnableVisualStyles()
			$formAbout = New-Object 'System.Windows.Forms.Form'
			$picturebox1 = New-Object 'System.Windows.Forms.PictureBox'
			$buttonOK = New-Object 'System.Windows.Forms.Button'
			$InitialFormWindowState = New-Object 'System.Windows.Forms.FormWindowState'
			#endregion Generated Form Objects
			
			#----------------------------------------------
			# User Generated Script
			#----------------------------------------------
			
			$formAbout_Load = {
				#TODO: Initialize Form Controls here
				
			}
			
			# --End User Generated Script--
			#----------------------------------------------
			#region Generated Events
			#----------------------------------------------
			
			$Form_StateCorrection_Load =
			{
				#Correct the initial state of the form to prevent the .Net maximized form issue
				$formAbout.WindowState = $InitialFormWindowState
			}
			
			$Form_Cleanup_FormClosed =
			{
				#Remove all event handlers from the controls
				try
				{
					$formAbout.remove_Load($formAbout_Load)
					$formAbout.remove_Load($Form_StateCorrection_Load)
					$formAbout.remove_FormClosed($Form_Cleanup_FormClosed)
				}
				catch [Exception]
				{ }
			}
			#endregion Generated Events
			
			#----------------------------------------------
			#region Generated Form Code
			#----------------------------------------------
			$formAbout.SuspendLayout()
			#
			# formAbout
			#
			$formAbout.Controls.Add($picturebox1)
			$formAbout.Controls.Add($buttonOK)
			$formAbout.AcceptButton = $buttonOK
			$formAbout.ClientSize = '284, 262'
			$formAbout.Font = 'Segoe UI, 11.25pt'
			$formAbout.FormBorderStyle = 'FixedDialog'
			$formAbout.MaximizeBox = $False
			$formAbout.MinimizeBox = $False
			$formAbout.Name = 'formAbout'
			$formAbout.StartPosition = 'CenterScreen'
			$formAbout.Text = 'About'
			$formAbout.add_Load($formAbout_Load)
			#
			# picturebox1
			#
			#region Binary Data
			$picturebox1.Image = [System.Convert]::FromBase64String('
iVBORw0KGgoAAAANSUhEUgAAAMgAAADwCAYAAABFcSteAAAABGdBTUEAALGOfPtRkwAAACBjSFJN
AACHDwAAjA8AAP1SAACBQAAAfXkAAOmLAAA85QAAGcxzPIV3AAAKOWlDQ1BQaG90b3Nob3AgSUND
IHByb2ZpbGUAAEjHnZZ3VFTXFofPvXd6oc0wAlKG3rvAANJ7k15FYZgZYCgDDjM0sSGiAhFFRJoi
SFDEgNFQJFZEsRAUVLAHJAgoMRhFVCxvRtaLrqy89/Ly++Osb+2z97n77L3PWhcAkqcvl5cGSwGQ
yhPwgzyc6RGRUXTsAIABHmCAKQBMVka6X7B7CBDJy82FniFyAl8EAfB6WLwCcNPQM4BOB/+fpFnp
fIHomAARm7M5GSwRF4g4JUuQLrbPipgalyxmGCVmvihBEcuJOWGRDT77LLKjmNmpPLaIxTmns1PZ
Yu4V8bZMIUfEiK+ICzO5nCwR3xKxRoowlSviN+LYVA4zAwAUSWwXcFiJIjYRMYkfEuQi4uUA4EgJ
X3HcVyzgZAvEl3JJS8/hcxMSBXQdli7d1NqaQffkZKVwBALDACYrmcln013SUtOZvBwAFu/8WTLi
2tJFRbY0tba0NDQzMv2qUP91829K3NtFehn4uWcQrf+L7a/80hoAYMyJarPziy2uCoDOLQDI3fti
0zgAgKSobx3Xv7oPTTwviQJBuo2xcVZWlhGXwzISF/QP/U+Hv6GvvmckPu6P8tBdOfFMYYqALq4b
Ky0lTcinZ6QzWRy64Z+H+B8H/nUeBkGceA6fwxNFhImmjMtLELWbx+YKuGk8Opf3n5r4D8P+pMW5
FonS+BFQY4yA1HUqQH7tBygKESDR+8Vd/6NvvvgwIH554SqTi3P/7zf9Z8Gl4iWDm/A5ziUohM4S
8jMX98TPEqABAUgCKpAHykAd6ABDYAasgC1wBG7AG/iDEBAJVgMWSASpgA+yQB7YBApBMdgJ9oBq
UAcaQTNoBcdBJzgFzoNL4Bq4AW6D+2AUTIBnYBa8BgsQBGEhMkSB5CEVSBPSh8wgBmQPuUG+UBAU
CcVCCRAPEkJ50GaoGCqDqqF6qBn6HjoJnYeuQIPQXWgMmoZ+h97BCEyCqbASrAUbwwzYCfaBQ+BV
cAK8Bs6FC+AdcCXcAB+FO+Dz8DX4NjwKP4PnEIAQERqiihgiDMQF8UeikHiEj6xHipAKpAFpRbqR
PuQmMorMIG9RGBQFRUcZomxRnqhQFAu1BrUeVYKqRh1GdaB6UTdRY6hZ1Ec0Ga2I1kfboL3QEegE
dBa6EF2BbkK3oy+ib6Mn0K8xGAwNo42xwnhiIjFJmLWYEsw+TBvmHGYQM46Zw2Kx8lh9rB3WH8vE
CrCF2CrsUexZ7BB2AvsGR8Sp4Mxw7rgoHA+Xj6vAHcGdwQ3hJnELeCm8Jt4G749n43PwpfhGfDf+
On4Cv0CQJmgT7AghhCTCJkIloZVwkfCA8JJIJKoRrYmBRC5xI7GSeIx4mThGfEuSIemRXEjRJCFp
B+kQ6RzpLuklmUzWIjuSo8gC8g5yM/kC+RH5jQRFwkjCS4ItsUGiRqJDYkjiuSReUlPSSXK1ZK5k
heQJyeuSM1J4KS0pFymm1HqpGqmTUiNSc9IUaVNpf+lU6RLpI9JXpKdksDJaMm4ybJkCmYMyF2TG
KQhFneJCYVE2UxopFykTVAxVm+pFTaIWU7+jDlBnZWVkl8mGyWbL1sielh2lITQtmhcthVZKO04b
pr1borTEaQlnyfYlrUuGlszLLZVzlOPIFcm1yd2WeydPl3eTT5bfJd8p/1ABpaCnEKiQpbBf4aLC
zFLqUtulrKVFS48vvacIK+opBimuVTyo2K84p6Ss5KGUrlSldEFpRpmm7KicpFyufEZ5WoWiYq/C
VSlXOavylC5Ld6Kn0CvpvfRZVUVVT1Whar3qgOqCmrZaqFq+WpvaQ3WCOkM9Xr1cvUd9VkNFw08j
T6NF454mXpOhmai5V7NPc15LWytca6tWp9aUtpy2l3audov2Ax2yjoPOGp0GnVu6GF2GbrLuPt0b
erCehV6iXo3edX1Y31Kfq79Pf9AAbWBtwDNoMBgxJBk6GWYathiOGdGMfI3yjTqNnhtrGEcZ7zLu
M/5oYmGSYtJoct9UxtTbNN+02/R3Mz0zllmN2S1zsrm7+QbzLvMXy/SXcZbtX3bHgmLhZ7HVosfi
g6WVJd+y1XLaSsMq1qrWaoRBZQQwShiXrdHWztYbrE9Zv7WxtBHYHLf5zdbQNtn2iO3Ucu3lnOWN
y8ft1OyYdvV2o/Z0+1j7A/ajDqoOTIcGh8eO6o5sxybHSSddpySno07PnU2c+c7tzvMuNi7rXM65
Iq4erkWuA24ybqFu1W6P3NXcE9xb3Gc9LDzWepzzRHv6eO7yHPFS8mJ5NXvNelt5r/Pu9SH5BPtU
+zz21fPl+3b7wX7efrv9HqzQXMFb0ekP/L38d/s/DNAOWBPwYyAmMCCwJvBJkGlQXlBfMCU4JvhI
8OsQ55DSkPuhOqHC0J4wybDosOaw+XDX8LLw0QjjiHUR1yIVIrmRXVHYqLCopqi5lW4r96yciLaI
LoweXqW9KnvVldUKq1NWn46RjGHGnIhFx4bHHol9z/RnNjDn4rziauNmWS6svaxnbEd2OXuaY8cp
40zG28WXxU8l2CXsTphOdEisSJzhunCruS+SPJPqkuaT/ZMPJX9KCU9pS8Wlxqae5Mnwknm9acpp
2WmD6frphemja2zW7Fkzy/fhN2VAGasyugRU0c9Uv1BHuEU4lmmfWZP5Jiss60S2dDYvuz9HL2d7
zmSue+63a1FrWWt78lTzNuWNrXNaV78eWh+3vmeD+oaCDRMbPTYe3kTYlLzpp3yT/LL8V5vDN3cX
KBVsLBjf4rGlpVCikF84stV2a9021DbutoHt5turtn8sYhddLTYprih+X8IqufqN6TeV33zaEb9j
oNSydP9OzE7ezuFdDrsOl0mX5ZaN7/bb3VFOLy8qf7UnZs+VimUVdXsJe4V7Ryt9K7uqNKp2Vr2v
Tqy+XeNc01arWLu9dn4fe9/Qfsf9rXVKdcV17w5wD9yp96jvaNBqqDiIOZh58EljWGPft4xvm5sU
moqbPhziHRo9HHS4t9mqufmI4pHSFrhF2DJ9NProje9cv+tqNWytb6O1FR8Dx4THnn4f+/3wcZ/j
PScYJ1p/0Pyhtp3SXtQBdeR0zHYmdo52RXYNnvQ+2dNt293+o9GPh06pnqo5LXu69AzhTMGZT2dz
z86dSz83cz7h/HhPTM/9CxEXbvUG9g5c9Ll4+ZL7pQt9Tn1nL9tdPnXF5srJq4yrndcsr3X0W/S3
/2TxU/uA5UDHdavrXTesb3QPLh88M+QwdP6m681Lt7xuXbu94vbgcOjwnZHokdE77DtTd1PuvriX
eW/h/sYH6AdFD6UeVjxSfNTws+7PbaOWo6fHXMf6Hwc/vj/OGn/2S8Yv7ycKnpCfVEyqTDZPmU2d
mnafvvF05dOJZ+nPFmYKf5X+tfa5zvMffnP8rX82YnbiBf/Fp99LXsq/PPRq2aueuYC5R69TXy/M
F72Rf3P4LeNt37vwd5MLWe+x7ys/6H7o/ujz8cGn1E+f/gUDmPP8usTo0wAAAAlwSFlzAAAuIgAA
LiIBquLdkgAAQjpJREFUeF7tnQd4HcXVhscFQwpJSCBAAiGBhEDogQQIkED4IYGEYgi9l1BM72AI
xd3GvUq23HvvFdxtuRfJ6pblblm25d6wZc3/fXt3pPXqXOnu3qu+4+d9rny23p3z7ZwzM7tXaa0D
AgLCIBoDAgJCiMaAgIAQojEgICCEaAwICAghGgMCAkKIxoCAgBCiMSAgIIRoDAgICCEaAwICQojG
gICAEKIxICAghGgMCAgIIRoDAgJCiMaAgIAQojEgICCEaPRD34ze0fBT8A/wLugK+oCEWgK/a2/Q
BrwKbgSnAOk6eSZu3TA1IC1OHe7xA6XbKlXQufYg+alXRKMfpMqJgNPAw4COkgK+A7oWsx8sAhTL
DUC6Zp4IBBIdotEPUuWUwq1gLNgJJEcJCLEWdANnA+k6lkkgkOgQjX6QKkfgCjAQSM4QEJ5D4GPw
QyBd17AEAokO0egHqXJcvACkyg+InI3gOiBdX5FAINEhGv0gVY6D0UCq8AB/vAOk61yCQCDRIRr9
IFUOqAemAqmSA6KjMZCu+UkEAokO0egHqXLAdCBVbkBsYF4iXfci4tYNVf3Te6pDcT8MBOID0egH
oXI4niFVakBsuRNI19+i+/pRanhSW3W8Sz2l28mOVFOR/NQrotEProppCKTKDIg9x8A5wF0HFl03
jFWjVzRXhR1R1+1lR6qpSH7qFdHoB0el1AVSRQaUH6OAsw6K6Lh5spq05FOlv1aWSCRHqqlIfuoV
0egHR6U0A1IlBpQvtwNnPah+6Qmq7bZZavH0R5VuLjtRTUbyU6+IRj/YlfIrIFVeQPnzLThJIH0y
+6ouG8er7QN+o3RL2YlqMpKfekU0+sGulCZAqryAiuFcUCSQzhDHmBXNrOS8sIPsRDUZyU+9Ihr9
YFdKIpAqLqBi4CRHuy4S1Ne5s9SKKfcr3RQO06WkA4GLwfPgC5v/VTCfgy/Bf8HVQDpH30h+6hXR
6AdUyq/tSgqoPDYDdpKovplI0LdMVRuHXqF0ixLO8wr4BugqxnzwDqgP3OfsGclPvSIa/YBKec2u
pIDK5SJgde8OTe6ojneq5+ze/SVYCCTnrEqkA7ZuJzm8VyQ/9Ypo9AMqJZilWzW4JdR7NVOljr3N
GV5dBvYBySGrKn8HJRw/UiQ/9Ypo9AMqZomrogIqh8d6Zg9hfahDPb6vdBvLWb4P9gPJCasyB8Hl
oITzR4Lkp14RjX5AhXAqtlRhARXL+503TVQTlv7PGhzUocHB4UBywOpAFijh/JEg+alXRKMfUDFb
XRUVUDl82n7LdDVzXiNr7ONEJ3UnnEVyvOrEHUAUQWlIfuoV0egHVMwmV0VVOXqlxevuKV11x+T2
un3S10V0SG6nu6V01j3T4sTtqhmftts6QyVPuFPpZpaj9AeS01Un2LFQQgBlIfmpV0SjH1AxVVIg
/TP76vi0HpYQEtLj9fDsoXr6pql68fZFesXO5Xpp3hL97ZZv9Kh1I6z1OyS1hYi6WNu591Ud6JPZ
t3HXDePUpsGXmdHzJCA5XXXjZ6CECEpD8lOviEY/oHKqlED6ZfTRfdIT9NerW+v41B6WEPZ+twen
WgjkcvD4QZ2Sv8YSR5tVLa0Wp7oJpVggl1MgP4ejFALJ4aob1wBRCOFAlUaNaPQDKqfKCIROHZfa
3Wo1ZqJ1CAkj8vJdwVG9aHui7rKmk0V1EokRyMYhV1AgV8JRJGerjvwFiEIIB6oyakSjH1A5VUIg
dObuqV2tvCJ1dwpOzX/ZcnCzJbTOazpWG5G4BMK7ruRs1ZGbgCiEcKAKo0Y0+gGVU+kCYVjFfKMj
xLF+fw5OK/rC1oci6YokvjqIxCWQq+AokrNVR4IWJBa0WtlcJ+1ajVOKXdl6cItuu7qN7oUkXzpm
VSIQSDGouqgRjX5A5VSqQNh6dEruoCdtmIjTiX1ZkrcIOU1b3Tu9lyUUJvAkIb2n7pORIJ5TZRAI
pBhUW9SIRj+gcipVIHTcTsntPSfkkZbCwkLdLaWLlfhzvITCoEB6pHazhMmch/bKDsMCgRSDaosa
0egHVE6lCoTiGLd+DE6l/MrWg1v1xgMb9e6j+RDiXnzu1nmH8/S6fdl69tZZEEi8brO6pZUHVZZQ
AoEUgyqLGtHoB1ROpQqkHXKE9D1pOJXKK/sgmvm5c60BSXYU9MvsI55reRIIpBhUSdSIRj+gcipN
IFY+AKc8eOwATqXyy77v9unh2cP016tbWbmRdM7lRSCQYlAVUSMa/YDKqTSBcB4Vp4pUtTJt0xTd
alXzCm1JAoEUgyqIGtHoB1ROpQmk8xr2Xk3AaVS9MjZntJUfVZRIAoEUg8sfNaLRD6icShEIQxjO
zh27fjROo+yy+cAmnbRrlTXnKmV35KzJT7Zgcu619E7vaQ00VkS4FQikGFz6qBGNfkDlVJhA2EPE
blZ2r7Zd3RphTAs9JmcUTiN8OYD8ZNjaIZaYOOjXelVL3XJls4hpsbKp9UlHX5A7395rZCVrb6Y1
+TEQSFQEAikLOhgH5Thgx+c6GFYtzkvUGw9s0IeOH8JpyKWgsEAPyx5ijbJzvIT7GIPQZypyhLHr
x+gRSKiHrB2kB68dGBYu57Y8dmsIcjVaIS9l/PqxusuajuL3iiWBQIrBZY8a0egHVE65CmRAZr+i
gTo69bZD23DYyAoF1C6pjbUfioM9Xmxx6OR7ju621youFJQEByG5HVstzs86cvyIvUXZJWtvltVy
ub9XrAkEUgwue9SIRj+gcspNIP0QUrVZ3cpy7pz963A4b2X5jqW6rS0Qa39oiXqkdtVd13TWg7IG
WHf3xXmLdN7h7fYW4Uv23rVWeEaB7Dyyw7aWXXYc3mE9iMVWyPndYk0gkGJw2aNGNPoBlVMuAqEz
t0OrMRp37gPH9uNQ3gsfluI+3PvlJ6eHdF3Tybq7szdsxLph1rMgmXsz7K1PLmwJ+BAWt8s/utO2
ll1OFJ7QQ9cOtqamOM8j1gQCKQaXPWpEox9QOTEXCJNxxvyj143EIfyX5TuWlRCIG5PfMAnnukz8
R6wbboVWzpKxJ90hkF22NbIyZeNkq2NBOn6sCARSDC551IhGP6ByYiqQ/sg56KgDM/tj99EVp0Ao
BPaAEdOKhKP5yiZ6fu48ey+hEo1AmDsxPCvruNEQCKQYXPKoEY1+QOXEVCBxCEU46W/P0ehn5xqB
sEWiYzPMYQ7Bz9ImFXIdrn/4+GF7T9EJhFPm2ZPFDgPuuzyEEgikGFzyqBGNfkDlxEwgHHVmV2q0
j8yaYgRiZtkyGecsXCbM7C4O56gc4ONyZ/IejUBYOF8sMXeBNX+Mb1BhWBdLoQQCKQaXO2pEox9Q
OTERCJ2FSTNDKya2sShGIHy2nD1Wpmw6sNHKNcKFW5yVG5/aQ+86UpyMRysQUzhu883m6db0+EjC
vUgJBFIMLnPUiEY/oHJi1oIwMc/cm4ndxqYYgfA1QHxLifOR3MTtCzS7gCtaIKYsxPHNk4ru4/uh
RgmkI2hv00ndApsohHDg8kaNaPQDKicmAmFszkHB8G+v8l6MQCgChlns0uXDTqZwLIRPBLrzkYoQ
CMuC3Hm6zapWpeZDkVKtBdIBtAEt7U/+v2t9XdD757qgW/2bCzrXUQVd6kYMLm3UiEY/oHJiIpBO
azroCRvGYZexK0Yg3D/zG/Ouq2MnjlnL9x/bbyXsHMhztiQVJRCWIVmDrHli0c76rVYC6QLaghag
NW31dEGf83TByOt1wdR7dcHc53VBclNdMOn/JhS0P+V7BZ3p+PUiBpc1akSjH1A5MREIHZmj2rEs
ToEQioO5xwzkAKYwpOOzG85QpyIFwlF5Cpf5iDm+H6qFQCgMtg4URvxPdcHom3XBlPt0wYJXdcGq
z3XBmpa6IKWVLsiO0wUzH51S8DVCpnYMm9CCCKFUOHBZo0Y0+gGVE7VA2KPDu+i6fd6nk5RW3AIx
x+ITf5l7ikfM+Vw58wFzF69IgbCwA4EdCc7z9EqVF4hpNdhijLxRF6yEINLaQhQt8PdnumDpeyHS
2+uCafdMKuDPV1MgXSgOb+CSRo1o9AMqJ2qBmG7X7YdyscvYFUkgbEUYVnGO147Defaa2nq5NSdF
cp2KFsiSvMVWh4HzPL1SpQVixNEOfPsoRNBOF6z4VBcsflsXLHkXvANxfBASzJS7RyMXCYnDahFk
EZQGLmnUiEY/oHKiFggdMuR4+dhl7IpbIMwzKEYmxpzq7kzYOYW+sz0dpKIFwledsgXpk+G/R6vK
CoTiYG8UW45Zj0EcHSEItBQUBcWx2CGOyf8cUdRyUBydAoFYMP5mL9YOD7NkIyknJekQB52bU9ad
OQgLJykyUWf4FTqfihUI34qSwBdQYN/O6+KFKt2CUBzj/wYRoOWwWgwDxfF+SBxT/zUeuUlIHBSG
QRBAWeCSRo1o9AMqJyY5CKdicAAvlsUIhN3HFABzj1W7VtpLWQoR/4+znhhky2J6sipaIAeOHbSO
y65o53XxgksgfxQdtaJh60Fx9PyJLkhurguWfxwSRVHLAXGkd0BYdddoSxxtbVHw5+MCgZwMH4iK
9bt1KRAm38w52Ept2L/eXqKtcI6C6JDUrsS5VLRA+Ly7eaWp+1wixSWQ34kOW9F0AhzXmHZfqIeK
onCGValfUxwji3IOI45SBKLZSwV7qQh+6hXR6AdUTkwEwgG7GZunYZexKxQInZrdqLmOJxEpFAqn
+cqm1ptH3KFNRQuEb21k/mNCPD9QIN3Wj1VbBl1CgTSAg+4o4bAVDRPzuB8gIf8ErQcoCqtMQo6W
w+QccOwicdgCOUFnN4KATXewP2krDcFPvSIa/YDKiYlA2IPEnqRYlpBAWln7NvnN8p3LrGfUGWpx
MuLMLd9aoQ0Fw/UYjkkCYbdweQlk0faFUT+WS4F03jhRbRh6ldIMVzqraSUctqJheDXgIl2Q1ASi
sBNzioNh1aQ7h1vicIZVNkViaB/6e2+X09Xc7n9WjXu+qe7p0039rt94MFpd3G+UCC5p1IhGP6By
YiIQ5gCcrLjT4ZTRFnafcoo5W4iBWQOskXoTcjkLR9T5+lL2bJlwzC2QnP05Vtcw7V4euY2k8Hn3
GLzYoXG7rd+oxdMfVZqO11l9WsJhKxpOHRl2VWiso6i3Con65DuHFuUcuOMXCYOiaBdifefz1Ec9
31V39Omjzuo/U6lB65UavAvk4u8skB0WXNKoEY1+QMXERCDMB5iHTN00GbuNTeG0ee6TD2GxlWCo
xYmL7DEbD7FwFP1IQfELGApOFEAgXS2RcB3+JJspfOUPWxD+ipWfd2SFK9sP51pdvM6RfJ80Lvqd
dDge7rxnwPn2neSwFU0rMO5vofyDCXlKa+Qj/55Y1FsFcVhhFIVBsUAk47vdoZ7r1UQ1GJik1JB9
EMRWpQamKTVgiTplQCJYVCa4rFEjGv2AiomJQAhjcHbD0mliUfgsO52Pg5DOCYH8m2JhDxcdc962
udaYCN9jxQe22OXKVoQj7Jz+Mm3TVCu04rMqfGNiLAtvDGw9TA9aFDSOyxmuBqV0UwVdbIfrrO4+
yWErEiboHBic+ZguSG6mCzI6hnIO/kQ1p4+YvIItBgTSvcfD6kK2FIN3gDyIIlk1GLBAFEBZ4LJG
jWj0AyomZgKhk/DZ7ZHrhmPXsSlsRfi4K3MRioI9RTyOgS0Fwy7a+TcFQwGRlqua66+Wf66brWii
m674yrKV9h4ur4U/Q80bglO8UdC4b0YfxTArc/RNSjeBE0IocNZ2JZy3IqA4up0aajkyO6PluHcg
chJ1ItS6WQLe1+n76oOeH6rf9ptuh04bVV2rlYispQgHLm3UiEY/oGJiJhDC+VCM9d3PhEdT1u7N
0hM3TLDu/hQCnZItC1sJ65gQCu1mLIQtWR/8PTpnJPKW8Xrc+rFw5hkxFQdbJ4Zs0fRcuWjcLz1B
ddwwUY1Ixe2bvTkIY04wxu+smpdw4PKG4dXA3+mC7HhdMKPhmBMQhyZIvLd2OlO1jn9Jndt/NsKo
QxBGDoSxGM69sISz+wGXN2pEox9QMbEVCByUjso7fkqMHr11FoZSK3Yus94Kz4SbkySZp7D1KDp+
BjsMOosvl4u2HDx2EEIdY30/ioPHc18DnzROSO+jRq/toXrmTVEdR3+gdrc63dk1+g847voSjlxe
UCCzn9IFia9PYa+abqPUkc6nqa/jnkd+sRrC2A9hrIVDzwfRtRhucJmjRjT6ARUTU4EQOk1PJNX8
cZyTR75jWygWvhBu1taZ1jGZk5DmCKn6pvcu8eqfcIW5C2fkbi/lBXTbDm3Fcb61xM8xHx4vFuKg
yNgS9kjt+dmYdd3V9I3d1LXjv1Gqzw51Rv/5qlFCE7Wy22UhoXRQdSGW20Fr3UktBpvANrAlpnRU
WyHIXD3s/J4U58F2DdTbCY3VuQPmQRj5yC/S4cjML2IrDAMud9SIRj+gkmIuEMK4nIkxw5DZcODv
TnyHw5VfYW9W2u5UPRN5AUOxbQe32kvKLnO3zdGfLPnQ6gxgly2Tfo7BEP49at3IovdusaXyk3OE
wr6QGHhdeqTwQa+u1v76ZPTT0zcNaDNzc291y6RpSnVbrer0T8QdOj10px6Ype7r3VHFxz2kJve4
WSV2u1wd6HIq7uj1SR37M6Yc7Xpq3ZwOZ6i2XR9Tvxg4B+dxAOeTpepbYVT5CMOAKoka0egHVF65
CIQwHwmFW6FYnb8JWNUKXzDBF02YBJ+hGd9aQjEwdOPfFIfJb6TvKcH1nUJgOGhyJr5Uewzyoymb
Jur52+fp1N0L9Ia9E677v6nzleq0Ek64SDWwnYU9QWrgSiTB20K9Q4M24P8Z6qz+M5ADTFXnlBPn
9puq6iGvUIN32qFU+bUYblAtUSMa/YAKKzeBGHjHpZMxsWYP17IdSyMaizhuP1pbnoXnwunz0Twy
S8enwIwYOA5DgfCZeQph2qbJaKVm6YV58/SSHYl6Vf4ynbJntc7cl6XzDq/+LmP36GsuHj1DqbhV
N/5g8NIx9QYkjoSjDHdTf8Di4XUGLBmuBiwfjjAHZJQzSThmIo5NSp6PDc91COgJWoDHwe+A6PyR
gGqJGtHoB1RwuQuE8O7LEIMi4bQMjo5P3DDeGqdYk7/GGgnnfCn+6M2yHUusZXS6SF5M7bcw7OMA
JB1aOufSoAC4HQXRD//nu4HHrR+tJ20cjzBvul6UNx/51zKduidJp+9do9P2JFuiSN690hLI6vxV
etOBxQeW5Y286cpRE9X3B6Xd+ujc7MOnDVik6/ZP1HCU6k4y+BL8HYhCCAeqJmpEox9Q2RUiECcU
C7tlKRaOYRAmviT0/9C7sBjmMDQrr8LWjMeLNKfgebO1oCj4UwwjIYqZW2foZTsh8t2rIAKKIdki
Bf9fnb9cr9y19CRW7FoCgazUOfshnvwR110McahuydcMzN6lX1+Uo1XPeRohluRw1ZkFIGKhoGqi
RjT6ARVf4QKRsJJY4LTRcenAZf0KlZ/yzeYZ1nhNJHmFWYeTIZlXTN00SS9FqMQWIWNvSqhVQGvh
FoMbimN1/mq9fv8Snb57+JUXjYA4eiXd2jolV49an6/vnJFmCQROUlOZAc4HojAMqJ6oEY1+QMVX
CYGEg87Jn0GjSA7HYKCvEP/4K7ZmHEM6phNnq8EwanHeQp21L9USB0VBp5fE4CYkjlV6w4HF+5J2
jbr1MrYcPVff2HT1tqO9MvN017Tt+o8Tkmq6QMhuwDxFFAdBNUWNaPQDnKBKC4SwJWG4RUflj3n6
LXzJAxNn9qpxv2W1Hkzc2WJ0R/I9ffMUnbEvxcolIhWFwYRV6/cv1cn5I665bAzE0T3puubJ2zTF
0Txpi26dvFWfM3y5VgnzJaeqiXwAAoHECtMTxvlYnD6y+WDkQsk7kqf5HDtDJM4ViyTnoHiYwMel
9tDzcmfrTLQazCn8iCMUVi3VabtHXHvh8ElKxSX9udWaXN0jfbv+ctVm3SE1V3+0bKOVe6i+CyVn
qqmw1ysQSKyg0/LN7cxLOIOW87NW7VxpzdXiSDefReEzILmHcnX2vrXWbxlyJi/DI7ZA7BiINCFn
a9Ujtbues20mQqo0hFOyAErDiGPD/iVHU/NH3voHhlW9kv7aNGnbd3EZ2/VXEEfT1Vt0XEaefm5B
ttV61O0vOlJN5lUQCCSWmAFI/vQaHZ/zsbqhdYmHQ8fjjs+WwszR4iedvaxwyk1X7GPGlql67b50
0fnLIhRWIefYv7QwJX/kXyxx9Fh9XYvkXCusYstBcZAE/P+fTNDj50oOVBu4GgQCKS+YbFMwFALh
35Ek4BIUEgXGx4fZXZskdNWWRajlsMTBrtyrLhmJsAriYM4RZ4dVRhzNQHfYrhq/ujYk6OE4AAKB
VAd6pfW0xEUn5yAfPyURhMOEVZsOLNUpu0be/FvmHPFJNzRL3lbAUMopDtICyXm7lFz961ErtOpV
axJ0ic9AIJCqDFuPrmu66MkbJ1h5x4qdfsSxSm/cv+RQ8q6Rt/yeLUfP5NsgjsKerrDKwN6rFklb
9dnDl2nVe4HkOLWJC4Hop14RjX6AY2xxO0ptheEZp8Ms3bHIGgmXRBCOorAKLUdy/ogrfzvC6q26
8euU7SXCKift0Xp8umKTPm3QYlRGrerBkugCRD/1imj0Axxjo9tRaisc7+CbUzh3ShJBOCiOpN1J
yDkWH0/aNeLK3wyfzLDqplZrtln5RThxkO7pefqlheus1qOGzMGKhk1A9FOviEY/wDGWux2ltsLZ
uJxbleFBIBRH8u5knbM/cf/i7YNuvIg5R8+kW1ogIY/PKF0chD1Y93ybrlV8rU3Q3dwu+alXRKMf
4BhD3Y5SG2FizoFBjntw0qEkBjeWOPKT9Pr9iwsTc/v94YLhE5hz3MxBwEjEQZi4/2liciCQYnpL
fuoV0egHOMfbbmepjZiu4cV5C/SaPWXnH6blgDj0wm39rzl/2ERVp2/a39ogpygrrDK0RHLeFmHY
+SNX1KYpJmWxTPJTr4hGP8A5LnY7S22Ec674pN/qXXxWo/Sxj+KwavHRxO39r//NiImqXt+029hd
G6k4CBP0xkjQTx0YJOgO+IZy0Ve9IBr9AOcgK53OUhthgs6n/zj2IYnCEBIHE/JFxxNz+1/zq2GT
VL1+abd0SN2uu6VFLg7C8Oq/TNBr5xSTcPBXmERf9YJo9AOcg7RyOktthPO1+JxHaT1YxWHVohPz
t/W/4gIk5HX7pd3KlsOrODgPq//anfpuK0GvtVNMJPZJfuoV0egHOAe5xOkstQ0rQU81CXpyKeJI
Ylh1YmHugD/9ajhzjvRb2qd6Fwdh7tEyeav+2dClwQDhyfBlBaKvekE0+gEOYuhsHKa2kYAEnZ9L
diy0Hp2VxWG1HAWLt/e79pcQB8Kq29ojrOKDTl7FwfUHZu/U/2Lr0WOOrj9QdJTaSpUVyA/oJLUR
ToMflNXfEkJS/oqS4shPRs6ReGzutgHX/BriOKV/2u3tUrznHIShVRcIq82arfpHHD0PWg83VVYg
5GU6TG0jPi1OD1k7yOq9cvZgFYdVi44xIbeeIe+dfoPX3ipDE8C5VwlZO/Qfxq3WKg65x8DFkpPU
Zqq0QEitGzjk63tGrRuuU3aHnjMvFkdonGPR9v5XnjM01FvVEXf/Lsg7/IiDU9sHZe/SDWdlWuKo
F/RcSVR5gTQAiUB0ppoIe7A4g5fPfzjFsfFA4pH52wb86fzhk9Sp/dP+8XXK9gJ/YdUWa8bukHW7
9CNzsqznPur2XagbBLmHRJUXCPkRSAKiQ9U0+IK6WVu/sQQSEsdqvW7/4uMLtg289tJR45Xqk3Yz
E3I/YRVzjnYp23TftTv143PXWmMezDsaBKFVOKqFQAzzgehUNQVOMSF8EyJ7sJJCI+QFy/L6XvHL
Ycw50q5jWNU5zVtYxVajOVoN5htdIaxbp6ZYYZXqw5YjEEcpVCuBkE+A6Fw1AU4xMT1YqXtS9KaD
iUfnbhtoza363oDUO1qtyT3SJcKwinkG4RgHhdErc4d+dv5affaQJZY46vRLDMKqsql2AiF/B7OB
6GTVGYZXo3KGI7xKQ1i19OiC3EE3XTJqAluOG9tYs3LlJwEJk27mFq2St+oOKbmaTw0mQBRc//l5
2fpK9lTFz6vNz5r7oVoKxHAvqFFhVzck6DO2TEdCnqyTdva+7DcjkXP0Tr+hM1qNLq6wiiETW4du
CJnYOvSAeCgMCuST5Zv00/PW6hsnJevTOb5hC4NzrIJWwxPVWiCGKwDHTEaAav1EYo/UnnpB7oT9
KbsGXXfl2KGq/oDUv7VNyTvGlqBTaq4lAoqB8P9fQDCvJuboe79N19dNSNIXjVqhzxm+TDdA5VIQ
nFfFPKMGvoC6oqgRAnHzW3A7eAA8CBpK9MtIwGdCw7j0gQ3bZUxr2C7zG3yWH50yJjfsnDGhYXzG
0IYJGf1x7D4nnU+f9N4PDFsb/8jkDf0uuP/bGeq84Vm3xGfkHxm6bqf1nHijRTn6qblr9QOzMq0k
+7ejV+of2qPfVgtBeoV6pThdPRBFTKiRAimT/hm9VNf0Yapd+ng1KDNeLc18XK1If7DcWA6mZbyv
xmd8ofrh2D0yRigIRnXJGIf/J6g+6QlqUFaCmr+1o3p09gxVv3/OhY/OyUbLkKYvGLlC/3AwhICW
wOqWNS0DxQBb8Ox4uVJ7BEJHJBRG67TJljDScl5Q3228Xeks9Sudoi7Taer3MeYScCn4OVDkcNqP
1I60C9Wa9H+qoRkdFVoXFbd2vFq8rYP6z6xxSvVcqU4ZsOQ21RsCYFesLYQ6EEI9uRIDyo+aLxCK
gp9dMsaqtulT1LDMLmpZ9hvqxMa/Kr3xQqW33vMfnfWLQghEw4HLi+/AGtAZNASWWEhS5r/VhMzW
6p8zE5WKX46kfClyj8Tryy1EQpLOVsdqjSjA7nO06jY79GkJEi1UP7RKZSXzWM5QzmrRenA/2IfZ
D1u4BL4ZJbSeuL0PeIOwWlLeNHhc6+ZRrm9gqdkCYSjVJWOM6pAxVQ1Jb6eSsp5UetON4A9Kr79M
FW594tnCnZ9qnXGaLmeBuFkIrgJKZ6JVSa0DYSyGQDapUwfyByoXXe+qqOjho7TMTzrPtByZYdvv
xqzU101M0rdMXqP/MilZ/2HcKn32sGWhfKbjt5YTnjT9HX/XozAoAC6Hg7JT4PJxq63tb56crK/F
/i5CfnQaj9cVgumE48Gp/U6EtERBIXA/XWZZ3+GnQ5daxz2T5woxW6LsiOUUOMUSO1HWPIEwxu+T
0cdqMVpnzFQDMnqo9Mw74YinKL3udIjjVlW47o+qcPO9zxbu7aYL897SOhWHJ7IzlyePA6U3KDVu
4c0Ir7arugOWxFQgDZjI08E6fGPd1R+elaFHb9ildx49jkteshwpOKET8/br95fk6LMHLwkJoccc
Xdc4PP5/Hhyz8bINetnOA/oo1pdK7uHv9LCcnfo/yKOsu30H7AetFs9HOk8nHN2vg09LEBD0Gdjm
ublZuv/aPJ28+5A+cPyEddxD+Mzef0SP3Ziv38H5XsJXprIVs0UZybHKoOYIhKFU74x+aC0mgclq
dEYLlZJ5jyrIOos5BgTyfVWYfbEqXH8jxfFMYX5TXbgvXhduuV/rNTi87MAVwZ1sRcj5QycolZAd
E4FwvIN3fzr0KX0TdfOVm3T2viO4zJGXQ8cLdN+M7frKMau0aj1N34zWYRCc9LsThfYakZXk/IP6
06Xr9SlsweC8VvgY7i5PQUOQPO+7p6fgeDv0njBilsq0zbv1q/z5BrYmnWdZLVAUYz81QyDxGUOQ
7E5TXRFOjcpopbIzkXhnNggJI+t0VZj1C1WYeQY4SxVueeDxwvwWunBXE124p6MuzLkWNYjDy85b
ERzX6eoXer1SDSe0Vipul2qAHESoLE/QCemMt05Mtu6y0RS2ESMyo/+F37UQ6DUIv9gS1ZdCLooD
rcbZWNYvyuMt3L5PX81joUWJIp+rngJhS9E1fYRqnz4BrcVElZDRX83KfEttz7y6WBiZP4UwzgXn
gLNVYapShTl/frFw99chcez6HDTTOuusym5ByBCGWX3m3YM8ZAd/vD8qgdD5GJr8a3oqLmvVKzfw
9w/bo2VzhkAUB1qNPyEPOhgmbPNT7uVvnbSdcfKxIqdqCaRL+sgSUAid0kepjuljIYjx1thF9/Sh
amRmB7Vg7btqbdbd6lDmr2xRGGFAFJkQhRFHWl2I46rnC/Nb6sL85rpwZ2N8tkL+8UZl5h9ODuts
9eOUFRepun1SlOq/0rdArFF0hBc/wWdVLXlHjumfILmug9yE58sQiOd8JhLsfcgrYlmOFRbqK+zc
xEfyXrUEMj6zVQnGZbZRU7KaqmlZX6g5WR+rlOyn1I51dyidcxmS298onX0qRIEEnEKgKDJ/HhKF
JRCQXg+5x6UNC/PbhESx42MI5FOEV52QfzSs7PCqmEz10tGUBuqMQbP5zIdvgVi9TEiI26RsxSUt
u2xA+LVsxwG9ZtcBy5n8lEO4469Gwr4c+9l88KhtLb00x/mp9t9YeZLVU4VwcNgGvoYqsnLUg5CW
IgdSXWdZY0nSNSuFqiUQy+lLcLnS638PLgK/BueF/s65Ap9/UoVrL4AY2GrY4rAEYrcgVlh1xVOF
u9tCHMg7dn4SEgc/9/bQhRtvqzoCyVBDCzPqqMtHDEWinuNbIOyxOn3wEn2iDGfPhiPfNXlNqIeL
vUzx8/S5CEPardlirxFZabl6s/4Zx1W4D1AXifgDM1L1rmMF9hpySdlzKJRIs5sW5/A9HLuscgx8
vmy9vgy5xS+GLrU+Gy9ZryPJsM5jK9LD8zu/qppA4PQiVwLkF6Aw55piRIGw5cBnWh2GVS9bwtiN
lqNIHI2Re3wFWztkjb+oCvlHiHQ1R+co9cik5kjUd/gXCO7Ezy7IxuUMX5bvOqhPpUPjDs6BNstJ
CXuP2kzTzywsfXtT/j07A+tPL3Z0wp6qdjP0WX0Tre7i0sql/Kk3DjLinJ+Yl2Vb5bIQ+7qIeQry
CWvcgwOa/MT/z4dAv83lO97Cl8bLN4Z69LyFWVVLICc5fySEa0HSEFatu+whKyHPb10cVhmB7O2u
Czf/q+q0HiRdzdfr2JP1NRL17b4EYnquOqZuw+WUC7torRdUQxzucQKOPyg4Np1+cM5Oewu5jNuY
bwmBo+nublRr7KX1NH3LlDX22nJ5bXGO5bTsjh1SxvF+MQLnjPMqkWzbojljyJKwYzIssyEg3gA8
hlk1TSAAOS5ajmfZQoQSctNyAAplTwe0IF/AKetV9Oh56bAFgUDuj0IgfDMJY+2+a3fgcsplznY4
Cgf8wjiKJRLkMA/NybS3kIv1S7hw7nCP7HJQkILdVcoYRre0baFWDK3OGoRc4coS5DdWS4MWSjpW
Peucv9G9s/LsLUqW7YePWaP5PC9pH2GoKQL5WUggzDnWXfmilYwTpzj4954ulmh0xs+rTmhliIFA
rDlWCDtGl5Lsjlq/y+rRKe1OyrGIB2eXLpDrJyVjP3PE7Yk1Twu5xVI4d7gykucCgZyKViC/FCH1
zNhudVuHm6xp9dxBrK8uWmdvUbIcQ8t57ojlVq4l7SMMNagFST8F4rjkQasrd3cbCMKEVcw5vkBY
1S009pF1gdZJOJzkpJVJDARCp6dAJm3ejcspF07L4DqlCgTO+OS8tfYWcrmTLQhaIml7YgSyaEf4
PGT61j2WY/982LJSe9C6pqOl6RQaFZeORXjOLyWGFwj3fiETdW8v567uAvkzBPLrUFi17rJHCne3
t3urIAx+cqR8T2cIpq0u3Pq41qn1q1be4SSGApmwKbxArNwhAoE8M790gdw/Cwk6Whppe2IJBOFM
aS3It9sgEIRGF4xcblvkEpeRa+UpZQmEOU24wtkx1V8gdHgvbLgRrceZqnDjTS8X7u2pC/f1CeUY
FEfeu7pwy3904frrtc46PxRSVaWcw00VE8jTZQjkvhgIZAZbEAjkVxUkkN9Ue4Gsu9wb2Zfg8+L7
C7e/ogu3N9KFm/8NQdwAQZwHp0MSTlGwxahq+YZEIJCwJRCIIa2OR3DsjNNWWg5GETgFUfnTR7wR
CCRsCQRiSMW+vECBpKqpQHa66kQgkLAlEIiBDu+dyUB2uupEIJCwJRCIQRZAWQQCsQkEEghEIhCI
TSCQQCASgUBsAoEEApEIBGITCCQQiEQgEJtAIIFAJAKB2AQCCQQiEQjEJhKBjK9ggfDdWeFKIBCv
yAIoi0AgNpEIZMrm3RUnkN4LdNqew/YWJUtMBdJppn5v2QZ7i5IlEEh1p4IEMpotCJyptJ99joVA
rGdTus7SU7bssbcoWWItkKcXhD/nQCDVnRgKZFopTnkrH3TCOtL2Bjrbc2U81/7A7EzLaaXtifUQ
U7fZ+rpxq+wtSpa5uXsjEkh8JALpNV+fMbD0Fz8EAqnOxEog3ebob7exXk8u6XsP6xsnJoXu+mEe
kzVQIC+U8eKGB+dQIDPF7Q3WC+xwvHump+qc/SVfB7Qgb5/1XPtFo1fYFrmM3bhL8+XUpQnEOlbX
2fruqSn6cJhn0/mybhVX+s3BRSCQKkMMBMJnwOv3S9QXwxFunLxG/wmtxQ2Tk/U1fJMhcwK+hpMv
WCjjzR71sS6f8rsR23IfbrjPnw1daq0nbW8oej+wLaQ/QqDX2/vk+V0ydpWuh0T+jCFLdSMk2Eyy
+enkzSXr9a3TUqz1SnuFKFss61gQN1sktoBvLAntg/t9dVGO/gmOU49vmndtWwqBQKoMMRAIsV66
wFf6IIwqgq/z6bOgzJbDYL2VhL/D4dyHG4gj4ren85z4OiCeh3MfOM8GfIM8XxcEEYUFYRHXE/ft
hufOn29ASFZiPziOxze+BwKpMsRIIAExJRBIlSEQSFUkEEiVIRBIVSQQSJUhEEhVJBBIlSEQSFUk
EEiVIRBIVaRGCGQKkJ2uOpGu5gUCqXLUCIHMALLTVScokBylHp/UVKm4nYFAqgY1QiCDgex01YkM
Naogs666dtRApXptCARSNagRAmkEZKerTmSqDwpT66ifDf5Gqd4ZgUCqBjVCIGcC2emqDyf0WnVO
9qrz1Gn9livVLykQSNWgRgiEzAKS41UXpvN30uctuQbh1UZVZ8CS64TKCqh4+LtuqKDoEI2+kJ0/
Ei4FkuNVF67m76R/+s2rSsXvVKiYK10VFVA58MEaVFB0iEZfyM4fKS8DyfmqOv/V6Tj/dUrdMCYB
AtlGgfzaVVEBlcMm0U89Ihp9ITu+F5oByQmrKl8DhfxDHUk5VZ0xcL5SfVIpkO+B/Y6KCqgc+Dgk
Kio6RKMvSjq8Hx4A+4DkkFUFnh/PM3TOG5X68tsXlOqxX9UfuJACIfMcFRVQOYwQ/dQjotEXJzt6
NJwDXgOLgOSglcUSwPM6G4TONVOpY+n11VmDZyiVkKMaDEg0AnnHUVEBlcOjop96RDT64mQnjxUX
gn+D58Az4OkKhMd7HtwLLgIlzy9HqbmL/6hUzy2qzoDFRhzkLHAMSBUXUP7sBqeIfuoR0egLyYFq
Ogiv2sx6Sqm4PRBFUethmASkygsof4YA2U89Ihp9ITlQTYa9V9lK/WVML7QgW93iIHcDqfICyh8O
1sp+6hHR6Is87CscOwHutnoNkJytOrJWqbzVZ6i6/VZy9FwSCPkWSBUYUH70Adb1F/3UI6LRD4mj
rxBZCGYM+rPavfR0pbfjeCkOJ6vOrFdq+II70HpsU3VPzj+cXAqkSgwoP34ArOsv+alXRKMfHn2m
aVjufqideqXRR2rXqh8rvQvHrAkiQYvYlN27cbudvVcSbwOpIgNizyOg6NpLfuoV0eiHt99+Oyzv
vfsGhNJENXr1A4jkR6GQqzqLxB49f3Ricz4g5RRDOCYCqUIDYkdXcNJ1l/zUK6LRD5IwnLz/Xkgk
r7zyYfVvSWyB/Gt8x0gFQhYCqWIDomcCKHHNJT/1imj0gyQKNxTJY8+GRLJjxU+8iYS/rZ4BkByL
yysSWyANQ4/YlqiYUpgFpAoO8M9QIF1r0U+9Ihr9IAlCItSSNLVEkrfiDKV34Bzo/JIjErNsC9gE
KBIm+3DQUrcrT/wLhHQHUkUHeKcZkK6xheSnXhGNfpDEEA6nSPYk/TB8TkIBbAYQRN7KM9SArndZ
288bdbU6vrZeaLtsez33tuVJdAIhz4FcIFV6QNlsABxnkq5tEZKfekU0+sEtgrJ479031RPPf1kc
bu3GuRiRsHXg+Em+Uvmrf6R6drxfvfBSY0tUTz3/hXr46Wbq3ffeVFOH3qD4LIa1bQ6oqJwmeoGQ
0wDvgJIDBMgcBB+COkC6pich+alXRKMfJBGUBUVCZ3+t0ftqy7KzlD6I80FrcSS1gVo2+VLVr/u/
1JtvvKsefLylevW1D9Q777wV4u231LMvfmbZv/rsBTVpyE2qIBMtCoVS3qEX980wD6HhvTPbK9Vz
n2rQv2gWrx8uAm+CKUByitrOcTAGvALOBtI1FJH81Cui0Q+SACLBJO7vvfWmmj7yetW/+93qww9f
U4+htXjoiebq5UYfWUJyb2fE8tQLn6v7HmmjPvqwkZo//ip1PLN+cehlWhTe8enU/CROhzc2t11a
zv0xD4KI85f9SD2Y0FqpvluVGpGiTolOJAY+bPUC6AFmgOVgNVhVS+B35XeeCrqAJ8EvgXStykTy
U6+IRj+4HdgLFAmF8PATzdSjTzdV/33lE8tOAbjXdfMOeBcCevbF/2H75uqdd99S04ZeXxx6MaGH
D1uOzXxmG2DHAJN+O7+xlvMzF1BIyYACY5hHG7chu5Q6mPk9NST+TvXCC43Vh883Us9+0lid3m+h
UqOzVP0Bi8saNAyoQCQ/9Ypo9IPkvBXJSaHXEy1Uiy+fUVOH3aAm9L9FDez2T9WtzYMqocO9amjc
HWp0wq1q04Kz1aa5Z1uJ/9Aed6h+ne9Wi8deFhLOfgCBTB98vRrQ5S41PP52NSzu/9So/repxh+9
oh5AaEdB83jNXn5GffLaK+qSLmOUGpWp6g1cgsqpPJGowStUnUFL0aIFQpX81Cui0Q+S01YGJvSi
UNiiPPwUWiWEa48/+5UVyj2CFqrh463UK40+RF7zoXrgiZbqESzn53+ebKESOt2jFk6/QrX46hl1
36Nt1ENPNbe2Ycv2yJOh1s0Z8r35zrvqf43+q1q9+KS6tPNIpcZkq/oQSXm2JGyp6jttEIOCKNTI
dOu4ashKpYYj7IvmHLhP7mcUmlSLTCuUrDdwcbmLrz6PIdjLgjcnNWRF6LzxKfmpV0SjH5xOWtWh
gF57/X3VCLxrh3H8fOutd6xesseebKKeQcjG0C2SMO/Nd95RH7/+qmr+0jPqyo5DlRqbY1VWLEXC
jgA1eLklAjqq9Tl8DYSxDOEdnHd4srqyw1D1zltvqScbf6XO7D0bYl1rCSUkpgjPhcIYhhgTQv9B
33nqpta91F9bxqtbW/RQv+syGsdOtQRTl98vlkKxjpsUEiO/l/396nEiaCnHsa4LRUEBY/vv95tv
nTc/JT/1imj0g+Q41RUKRbKXBluSxgi1mrz8rLq84zBUWBZCnWXWHZdiMUiVXCp0HIRNdNh62N91
bfure79sq+5u0kGdHzfZcuZrIMpnP/7cCvfYmjXFOXz4xmvqvq/aqfPip1j5ER07/N0/0RKR5aAQ
1U8hrn8072p9p1b/fVK1eOlpfD6lvnz1BfXEp03VZZ1HYX9pIWdGy+VfKOa4IUGemfCtugPH5fe7
q0lH9eseE+3j0PmxDr5/kdBxTGtbLKsP+19b9VSP4txef/d98J567b33RT/1imj0g+Q0tQ061Cev
v2I51RVsSeiYrNihq4vhndG6O6IVgOMzXCrpOCEHsFoMOMApcMKrIbpXPvjYctRmEACP8f6br6tn
P/nCEuWXrzxvncNbaM14Hh+88boV9n0OwdzVrIs6p9c3obu/1ePmcGgexz6vH+Oue0vrBLSGjVTr
Fx/Hd3nVah3Nftk6NXvpWfCMeuSzFurC7hNC20IoFJ8nofC4dotxRt+56q9oqT56g8d9At/nOet7
UuwPf95KXYqW6+xeM1RdhpEU5UiIhq0mru8F8VPVK+9/pNq+8JhqgmvAlpz74afkp14RjX5wOorA
BeAfLpsfzgb3u2xVCjqUqaBH/tdC/ed/LdVDcKZHPmumHsL/b2/eTf2x3SD1m+4T1Wn9FlihkRFN
KLlGyDB0lXVH5ee17QepN3FHbP7fpy1nNw7Lzw8gkM8avWT9/623i1q9q8B5oXUgFKzDFuXzV19U
D8HZzuwzJ7RvhC98joXOdiqO+w+IiIJojtaC589t7f2dhCWUt9+CMz5n7ff5j/6nLqJQ+B0glvq4
w1stHoUDgVutlkMY9UBRCAeR3N20o3XcFvh+zuPyOOz6/wpO/xWO9TGWvfjhp+rvLePURd3G44Yx
VN3VtJMlIrZs0vlKfuoV0egH98m5+DvIctn88CzId9mqHHTe9958A3f1F6w7OyvQwDylKe6Qn8Ox
X33/Q/UfOO0/UNGXdxyOWJrCWKd+hDvqbQgZ6HwMbwQRlMbzYCs43djeAjwf7usDK/Rqr86Nn6bU
uPXW3ZnhWAvcsemgwjFeAe1AW/AT22atR6HQgSkUfo9TmA+hxTsNIv8pwqVTrVbCvgHYrRf//lnv
WVar9ja2b4nj8vilfTceh+fP68DWi6Jgq8njUkTmpuFG8lOviEY/SCfo4BGgQbStyBjA/fzAYauW
MFzhnZMORsdlZT/6aTN1V4vu6g3cDRlq0BHoOBEKw/AnwGu0ymGz4F2WzsjQiyHYA1+1xf8bWa1L
OCcDGwD3Ry60bUWYOz1bgGc+/p96EOJ7GSHP+3Dol9//WD2MFvRvuOv/CqHQ1WgNn/isufXd27zw
uNXKlnLcsHB7jn9Jy5xIfuoV0egH6QQdtAK8wIsdNq/8HJiKusK21QiMABhCNcEdkjlAKY7zN5AO
poKiVsLBDcBcp7m27SS4b4ZebN3oyOHCKZuZgPsqBOfbthJwH5+99pL6CkJnHsb8iJ0WvAGw8+DT
116GEEN3foq0lGP2AxmA0YK0PGIkP/WKaPSDdIIOJgNTaT+1bV7pBsw+7rBttY2LgLkGZBpwr3Mj
cK4zBbjX8UJEAimLd9HK8M4vLXPAUM557n8F0noRIfmpV0SjH6QTdMDm3nzpDrbNK7uB2QdaWHGd
ms5lwFwDkgTc67gFQkYD93qREhOBRMhg4DzvfwFpvYiQ/NQrotEP0gna1Ad7gPOLnwWkdcPxKHBu
PxRI69UGXgSHQCb4rW1zIgmEDATudSOhIgXC6GIhOAxa2DbfSH7qFdHoB+kEba4D7sp6E0jrhmM9
cG6fA6T1ags/E2wGp0Bmgc2O//cC0jalUZECMZwp2Dwj+alXRKMfpBO0aQRMBRmSgbSuxB+Ae3si
3T0DThbIW8AdlrUG0nbhqAyBxATJT70iGv0gnaDNAMALfNz+NDwEpPXdjATO7QzsOpbWr+04BcJr
TxuTXee18xK+BAKJBdIJ2qwFvMBLALvuTCWlAml9J1cCs/5ywOTc/D/SRJ0h3gcgAbQHj4EGwCw/
F/wOnOOwGU4BdAq2Vj+ybXXA06A7iAOvgV8A97al8WvAAbgugGHPh+AvQFrXDc+D5/Mr4PweBkkg
5G7bZvgMOLcLh1eB/BM0A71BE8BBYrPMeT2lMIrX1tSHtLwe+CXgcjNoyb8p+HjAui0KPyU/9Ypo
9IM5KRecYmIqxHQ37nLYfmPbwtEJmHXvAWc4/k9nl7Yx3Ayc3ctOcgEL12O/O23SSP+l4ATgcibH
fwbMf5z7IkdBJHkVBU+nNft0Mxs8CKRtDV8Asz7F4F7uFEh/22Z4HJhl5H3gXC4RqUBeBmnAuX8D
x2PMuZpIgnXj3sdpIA9w+UTb5oRjYUzgufwjcI39txPWk7W+5KdeEY1+MCflgiPn5sTH2rbGDtsQ
2ybBu8kOYNalra7j/+IgmM2dwKxn2As4TcVpawl4DvybFePejzN+5/HM3xTETuB29LuAex8G3lmd
6xL27jlvGAZO65D2QXjOZj3eBNzLSxMIoSOb5eS/wL2Ok0gEwvN17pPwe7l7Lz8GB+y/5wD3fiiQ
70C45ZyLZ/bFXjzzt3MIoCgSkPzUK6LRD+akXDwJzIlzoI82NpPOLxRu4PBdYNYZb9uI6dE6Ar5v
25y4k/rpgE7D0IRTVBiaOEM1Vjw/s4F7X2xBzHoGhlds/r8HOCnQOYA5D7j3QW4Dzn30BVcDjoSb
c2JC7VwnXJ7wJTDreG1BDLzLmnUIWxZpPVKWQNz74mAfIwN+L34/znowNyFiBCANYFIgvPFwudTC
sAXhzcnsi/Da/tD+fBgUrS/5qVdEox+cJ+agKTBfhJPojJ2xt7Gzl8u5jcF5t3f2WDkvtjTSOh+Y
5cwR3MsNnLKxD5h1IxFIQ+Beh6QAsw5jaPdyZ0v4nG2TuBaYEINw2oh7nVgIhHwKzHokXGhXmkAY
7x8EZh/MAZzLnTAkMuuRWAiELZJ7nSIkP/WKaPSDdILgG2C+zO9tG+Fdxdi32DYnTFjNcncy77zT
8qI7l7F5Ncuk/bpxtnBlCYQtl3u5gfmHWY+5knOZ8xjsKHAuk/g3MOs7W05DrARCnPkMkULE0gTi
DPd403Muk+DUGLN+tAJhBMFBaPc6RUh+6hXR6AfhBNnDsh/wy3D6tXv5cGAu1gu2zcBQxSxz37Vv
AmYZZ/c6lzkdlcW5TIIX2LQiZQlEclYD775mPWdLSVYA2nkcqddJgvG32R/jbueyWAqEOJ2cuHvT
ShOIcwpRJD15zqQ6WoEk2rawSH7qFdHoB+EEnRVlEnQnlwCz3DnL19l6lJiyDRjbmmadoY1zmRlz
ISWmZodhFOD6ZQnE5FASFLFZzykQ5iomx5lk2yKBeY7Z30lxNYi1QAi7ms027HigI5tlHI2nXRLI
RsBlkbTWhNejAHCbaAVS5nQjyU+9Ihr9IJwgxwf4RUi4WJFdq2YdCoY20+1KirrsXKwBXM48hUm/
sZsmnM0vk2jnNuEwPTBlCYR9++7lBmdY5Jym7ZxmE6mzktuB2Y5jOM5l5SEQ4sztjoGLAe2m984t
EI5pmNyqzLu5DZNpE1VEK5A+ti0skp96RTT6QTjBNoBfhISblekcvOJAD22mG5C9Hbyg7m2IafaJ
cyxlgm3jXdAdmoSDA1rcpiyBcNDLvdzAvMOs5xSIc/tBti0SmAuY7V63bYbyEgjhhEazLbtoef05
IMr/uwXCLneOJ3EZB4Od+wkHk3qKj9tEKxDnIKiI5KdeEY1+EE6QDsEvQv5o2yS2Aa7Diz3O/pu4
E3AnnYFZzznlxNkf/x/bVhZm4C+aFiScQJhzmC5tdzhYGl8Ds7/rbZuhPAVCOEBntueDS8vsv6UQ
y8yS4A3px7atNBj2mn3XeoGw94lfhDFnabNPnRVuYGXwDiWtT5wjws7nS9h1a+xsZZzbSHAswqxf
HgIhDAXMskgeOebYDqezc30+7upeXt4CIZwWZPZhkARiWmwSyQ2J01vM+rVaIBwLMBditW0Lx6nA
2ZdO3L1TbjguYtZdYNsMHDE3y9jj5Vzmxjk6Xl4C4SCgWcbRZecyCefkTKkVrQiBkEXA7IdIAnH2
KDIfLK2XjvPPnPur1QK5F5gLEckzCIzvzfokkh4o8zIBzs1xvsSBkwDNfhjvSoNXdFpnOEfKSyCk
BzDLlwLnBD4DJ+FxhN2stw5IYUtFCYTX1IRXRBIIYQ+lWYctD18a4V6HOajz5Q+kVgvE2bcerifK
ifNZa46PSOu4Md2z5FbbZnAmm4R3QzbvHGSk05iuRo5NmFCwPAVC6BBmHcIQ8BNgzslMwSBMkKXZ
xaSiBGIwOVo4gXACqckjDcMAx6TYeznDthG2oCYnq9UCMV+SXG7bysIkh5G+kMEpAo4Iu5c7E3kJ
TulgqMYBQGNz78M5sFXaKPgTwKzHOWTSOsTZsxcOOhQdQdqelCUQZxcxxzDcy73CVszkROF6Bjnn
ytnaSLDThnPXzP/5Zhb3fph/meWcGexezsFIs1yazHgSkp96RTT6wXFinIXL2JmT7Thzt7Rk2wkT
WI46S8skbgHNAY/jbkEMHJ+gUPhyA965eKfj5EU+f8E7H9fhHZ+vJWJxb89n5xn+sUWk47mXG34P
eC7EOcgmwY4E7pP5D3vueFflE5bsTo3kIbKyBMK7POfA8bo8YNuihW9r3ATKyukYLfDFC+zd4vVm
q8wBvWeAWYfXkuf2lMNm4MwGtjpch1N03MvZ7fw54PIyv5vkp14RjX6QTtAjHHgqenNfOcCYutS5
O5UAv3OkA5qGsgRSXjBvY8gpLZNw5oWVguSnXhGNfpBOMKBcqCyBVDskP/WKaPSDdIIB5UIgkAiR
/NQrotEP0gkGlAuBQCJE8lOviEY/SCcYUC4EAokQyU+9Ihr9IJ1gQLkQCCRCJD/1imj0g3SCAeWC
8zHmSF8VVCuR/NQrotEP0gkGlAvOGctRvf28piP5qVdEox+kEwwoF+4DnCFMOEVHWicASH7qFdEY
EBAQQjQGBASEEI0BAQEhRGNAQEAI0RgQEBBCNAYEBIQQjQEBASFEY0BAQAjRGBAQEEI0BgQEhBCN
AQEBIURjQEBACNEYEBAQQjQGBASEEI0BAQEhRGNAQADR6v8BUCpjNYYdysQAAAAASUVORK5CYII=')
			#endregion
			$picturebox1.Location = '39, 26'
			$picturebox1.Name = 'picturebox1'
			$picturebox1.Size = '206, 190'
			$picturebox1.TabIndex = 1
			$picturebox1.TabStop = $False
			#
			# buttonOK
			#
			$buttonOK.Anchor = 'Bottom, Right'
			$buttonOK.DialogResult = 'OK'
			$buttonOK.Location = '197, 227'
			$buttonOK.Name = 'buttonOK'
			$buttonOK.Size = '75, 32'
			$buttonOK.TabIndex = 0
			$buttonOK.Text = '&OK'
			$buttonOK.UseVisualStyleBackColor = $True
			$formAbout.ResumeLayout()
			#endregion Generated Form Code
			
			#----------------------------------------------
			
			#Save the initial state of the form
			$InitialFormWindowState = $formAbout.WindowState
			#Init the OnLoad event to correct the initial state of the form
			$formAbout.add_Load($Form_StateCorrection_Load)
			#Clean up the control events
			$formAbout.add_FormClosed($Form_Cleanup_FormClosed)
			#Show the Form
			return $formAbout.ShowDialog()
			
		} #End Function
		
		#Call the form
		Call-About_psf | Out-Null
		
		
	}
	
	# --End User Generated Script--
	#----------------------------------------------
	#region Generated Events
	#----------------------------------------------
	
	$Form_StateCorrection_Load=
	{
		#Correct the initial state of the form to prevent the .Net maximized form issue
		$formEventLogCollectorV10.WindowState = $InitialFormWindowState
	}
	
	$Form_Cleanup_FormClosed=
	{
		#Remove all event handlers from the controls
		try
		{
			$buttonExportResults.remove_Click($buttonExportResults_Click)
			$buttonLoad.remove_Click($buttonLoad_Click)
			$buttonConnect.remove_Click($buttonConnect_Click)
			$formEventLogCollectorV10.remove_Load($formEventLogCollectorV10_Load)
			$closeToolStripMenuItem.remove_Click($closeToolStripMenuItem_Click)
			$onlineDocumentationToolStripMenuItem.remove_Click($onlineDocumentationToolStripMenuItem_Click)
			$aboutToolStripMenuItem.remove_Click($aboutToolStripMenuItem_Click)
			$formEventLogCollectorV10.remove_Load($Form_StateCorrection_Load)
			$formEventLogCollectorV10.remove_FormClosed($Form_Cleanup_FormClosed)
		}
		catch [Exception]
		{ }
	}
	#endregion Generated Events

	#----------------------------------------------
	#region Generated Form Code
	#----------------------------------------------
	$formEventLogCollectorV10.SuspendLayout()
	$groupboxExportResults.SuspendLayout()
	$groupboxSelectEventLog.SuspendLayout()
	$groupbox1.SuspendLayout()
	$menustrip1.SuspendLayout()
	#
	# formEventLogCollectorV10
	#
	$formEventLogCollectorV10.Controls.Add($statusbar1)
	$formEventLogCollectorV10.Controls.Add($groupboxExportResults)
	$formEventLogCollectorV10.Controls.Add($datagridview1)
	$formEventLogCollectorV10.Controls.Add($groupboxSelectEventLog)
	$formEventLogCollectorV10.Controls.Add($groupbox1)
	$formEventLogCollectorV10.Controls.Add($menustrip1)
	$formEventLogCollectorV10.ClientSize = '524, 559'
	$formEventLogCollectorV10.Font = 'Segoe UI, 9.75pt'
	$formEventLogCollectorV10.MainMenuStrip = $menustrip1
	$formEventLogCollectorV10.Name = 'formEventLogCollectorV10'
	$formEventLogCollectorV10.StartPosition = 'CenterScreen'
	$formEventLogCollectorV10.Text = 'Event Log Collector v1.0'
	$formEventLogCollectorV10.add_Load($formEventLogCollectorV10_Load)
	#
	# statusbar1
	#
	$statusbar1.Location = '0, 533'
	$statusbar1.Name = 'statusbar1'
	$statusbar1.Size = '524, 26'
	$statusbar1.TabIndex = 4
	$statusbar1.Text = 'Event Log Collector v1.0'
	#
	# groupboxExportResults
	#
	$groupboxExportResults.Controls.Add($buttonExportResults)
	$groupboxExportResults.Controls.Add($checkboxOpenResultsAutomatic)
	$groupboxExportResults.Controls.Add($radiobuttonHTML)
	$groupboxExportResults.Controls.Add($radiobuttonCSV)
	$groupboxExportResults.Location = '24, 391'
	$groupboxExportResults.Name = 'groupboxExportResults'
	$groupboxExportResults.Size = '476, 104'
	$groupboxExportResults.TabIndex = 3
	$groupboxExportResults.TabStop = $False
	$groupboxExportResults.Text = 'Step 4: Export Results'
	#
	# buttonExportResults
	#
	$buttonExportResults.Location = '354, 45'
	$buttonExportResults.Name = 'buttonExportResults'
	$buttonExportResults.Size = '111, 26'
	$buttonExportResults.TabIndex = 3
	$buttonExportResults.Text = 'Export Results'
	$buttonExportResults.UseVisualStyleBackColor = $True
	$buttonExportResults.add_Click($buttonExportResults_Click)
	#
	# checkboxOpenResultsAutomatic
	#
	$checkboxOpenResultsAutomatic.Location = '160, 48'
	$checkboxOpenResultsAutomatic.Name = 'checkboxOpenResultsAutomatic'
	$checkboxOpenResultsAutomatic.Size = '225, 23'
	$checkboxOpenResultsAutomatic.TabIndex = 2
	$checkboxOpenResultsAutomatic.Text = 'Open Results Automatically'
	$checkboxOpenResultsAutomatic.UseVisualStyleBackColor = $True
	#
	# radiobuttonHTML
	#
	$radiobuttonHTML.Location = '87, 49'
	$radiobuttonHTML.Name = 'radiobuttonHTML'
	$radiobuttonHTML.Size = '181, 22'
	$radiobuttonHTML.TabIndex = 1
	$radiobuttonHTML.TabStop = $True
	$radiobuttonHTML.Text = 'HTML'
	$radiobuttonHTML.UseVisualStyleBackColor = $True
	#
	# radiobuttonCSV
	#
	$radiobuttonCSV.Location = '15, 47'
	$radiobuttonCSV.Name = 'radiobuttonCSV'
	$radiobuttonCSV.Size = '62, 25'
	$radiobuttonCSV.TabIndex = 0
	$radiobuttonCSV.TabStop = $True
	$radiobuttonCSV.Text = 'CSV'
	$radiobuttonCSV.UseVisualStyleBackColor = $True
	#
	# datagridview1
	#
	$datagridview1.BackgroundColor = 'White'
	$datagridview1.ColumnHeadersHeightSizeMode = 'AutoSize'
	$datagridview1.Location = '24, 255'
	$datagridview1.Name = 'datagridview1'
	$datagridview1.Size = '477, 121'
	$datagridview1.TabIndex = 2
	#
	# groupboxSelectEventLog
	#
	$groupboxSelectEventLog.Controls.Add($buttonLoad)
	$groupboxSelectEventLog.Controls.Add($comboboxEventLogSelect)
	$groupboxSelectEventLog.Controls.Add($labelSelectALogToQuery)
	$groupboxSelectEventLog.Location = '24, 151'
	$groupboxSelectEventLog.Name = 'groupboxSelectEventLog'
	$groupboxSelectEventLog.Size = '478, 92'
	$groupboxSelectEventLog.TabIndex = 1
	$groupboxSelectEventLog.TabStop = $False
	$groupboxSelectEventLog.Text = 'Step 2: Event Log Selection'
	#
	# buttonLoad
	#
	$buttonLoad.Location = '385, 38'
	$buttonLoad.Name = 'buttonLoad'
	$buttonLoad.Size = '81, 26'
	$buttonLoad.TabIndex = 2
	$buttonLoad.Text = 'Load'
	$buttonLoad.UseVisualStyleBackColor = $True
	$buttonLoad.add_Click($buttonLoad_Click)
	#
	# comboboxEventLogSelect
	#
	$comboboxEventLogSelect.FormattingEnabled = $True
	$comboboxEventLogSelect.Location = '164, 39'
	$comboboxEventLogSelect.Name = 'comboboxEventLogSelect'
	$comboboxEventLogSelect.Size = '210, 25'
	$comboboxEventLogSelect.TabIndex = 1
	#
	# labelSelectALogToQuery
	#
	$labelSelectALogToQuery.Location = '16, 40'
	$labelSelectALogToQuery.Name = 'labelSelectALogToQuery'
	$labelSelectALogToQuery.Size = '141, 24'
	$labelSelectALogToQuery.TabIndex = 0
	$labelSelectALogToQuery.Text = 'Select a Log to query :'
	#
	# groupbox1
	#
	$groupbox1.Controls.Add($buttonConnect)
	$groupbox1.Controls.Add($textbox1)
	$groupbox1.Controls.Add($labelEnterComputerName)
	$groupbox1.Location = '23, 35'
	$groupbox1.Name = 'groupbox1'
	$groupbox1.Size = '480, 98'
	$groupbox1.TabIndex = 0
	$groupbox1.TabStop = $False
	$groupbox1.Text = 'Step 1: Computer Name Input'
	#
	# buttonConnect
	#
	$buttonConnect.Location = '388, 40'
	$buttonConnect.Name = 'buttonConnect'
	$buttonConnect.Size = '80, 24'
	$buttonConnect.TabIndex = 2
	$buttonConnect.Text = 'Connect'
	$buttonConnect.UseVisualStyleBackColor = $True
	$buttonConnect.add_Click($buttonConnect_Click)
	#
	# textbox1
	#
	$textbox1.Location = '169, 40'
	$textbox1.Name = 'textbox1'
	$textbox1.Size = '207, 25'
	$textbox1.TabIndex = 1
	#
	# labelEnterComputerName
	#
	$labelEnterComputerName.Location = '17, 41'
	$labelEnterComputerName.Name = 'labelEnterComputerName'
	$labelEnterComputerName.Size = '157, 25'
	$labelEnterComputerName.TabIndex = 0
	$labelEnterComputerName.Text = 'Enter Computer Name :'
	#
	# menustrip1
	#
	[void]$menustrip1.Items.Add($fileToolStripMenuItem)
	[void]$menustrip1.Items.Add($helpToolStripMenuItem)
	$menustrip1.Location = '0, 0'
	$menustrip1.Name = 'menustrip1'
	$menustrip1.Size = '524, 24'
	$menustrip1.TabIndex = 5
	$menustrip1.Text = 'menustrip1'
	#
	# fileToolStripMenuItem
	#
	[void]$fileToolStripMenuItem.DropDownItems.Add($closeToolStripMenuItem)
	$fileToolStripMenuItem.Name = 'fileToolStripMenuItem'
	$fileToolStripMenuItem.Size = '37, 20'
	$fileToolStripMenuItem.Text = 'File'
	#
	# closeToolStripMenuItem
	#
	$closeToolStripMenuItem.Name = 'closeToolStripMenuItem'
	$closeToolStripMenuItem.Size = '152, 22'
	$closeToolStripMenuItem.Text = 'Close'
	$closeToolStripMenuItem.add_Click($closeToolStripMenuItem_Click)
	#
	# helpToolStripMenuItem
	#
	[void]$helpToolStripMenuItem.DropDownItems.Add($onlineDocumentationToolStripMenuItem)
	[void]$helpToolStripMenuItem.DropDownItems.Add($aboutToolStripMenuItem)
	$helpToolStripMenuItem.Name = 'helpToolStripMenuItem'
	$helpToolStripMenuItem.Size = '44, 20'
	$helpToolStripMenuItem.Text = 'Help'
	#
	# onlineDocumentationToolStripMenuItem
	#
	$onlineDocumentationToolStripMenuItem.Name = 'onlineDocumentationToolStripMenuItem'
	$onlineDocumentationToolStripMenuItem.Size = '195, 22'
	$onlineDocumentationToolStripMenuItem.Text = 'Online Documentation'
	$onlineDocumentationToolStripMenuItem.add_Click($onlineDocumentationToolStripMenuItem_Click)
	#
	# aboutToolStripMenuItem
	#
	$aboutToolStripMenuItem.Name = 'aboutToolStripMenuItem'
	$aboutToolStripMenuItem.Size = '195, 22'
	$aboutToolStripMenuItem.Text = 'About'
	$aboutToolStripMenuItem.add_Click($aboutToolStripMenuItem_Click)
	#
	# errorprovider1
	#
	$errorprovider1.ContainerControl = $formEventLogCollectorV10
	#
	# folderbrowsermoderndialog1
	#
	$menustrip1.ResumeLayout()
	$groupbox1.ResumeLayout()
	$groupboxSelectEventLog.ResumeLayout()
	$groupboxExportResults.ResumeLayout()
	$formEventLogCollectorV10.ResumeLayout()
	#endregion Generated Form Code

	#----------------------------------------------

	#Save the initial state of the form
	$InitialFormWindowState = $formEventLogCollectorV10.WindowState
	#Init the OnLoad event to correct the initial state of the form
	$formEventLogCollectorV10.add_Load($Form_StateCorrection_Load)
	#Clean up the control events
	$formEventLogCollectorV10.add_FormClosed($Form_Cleanup_FormClosed)
	#Show the Form
	return $formEventLogCollectorV10.ShowDialog()

} #End Function

#Call the form
Call-EventLogCollector_psf | Out-Null
