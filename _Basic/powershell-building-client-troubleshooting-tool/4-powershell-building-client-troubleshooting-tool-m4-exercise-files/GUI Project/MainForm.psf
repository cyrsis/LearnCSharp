<File version="2">
  <FileID>e5725b72-7382-457d-b1c9-da179dc245cc</FileID>
  <Preview>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
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQjaNf/qn/x9V
AP6LLw9MaQAAAABJRU5ErkJggg==</Preview>
  <Object type="System.Windows.Forms.Form, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="MainForm" children="Controls">
    <Property name="ClientSize">994, 605</Property>
    <Property name="Name">MainForm</Property>
    <Property name="StartPosition">CenterScreen</Property>
    <Property name="Text">HelpDesk Tool</Property>
    <Event name="Load">MainForm_Load</Event>
    <Object type="System.Windows.Forms.GroupBox, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="groupbox4" children="Controls">
      <Property name="Location">16, 314</Property>
      <Property name="Name">groupbox4</Property>
      <Property name="Size">664, 258</Property>
      <Property name="TabIndex">31</Property>
      <Property name="TabStop">False</Property>
      <Property name="Text">Event Logs</Property>
      <Object type="System.Windows.Forms.ComboBox, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="comboboxEventLog" children="Controls">
        <Property name="FormattingEnabled">True</Property>
        <Property name="Location">105, 17</Property>
        <Property name="Name">comboboxEventLog</Property>
        <Property name="Size">121, 21</Property>
        <Property name="TabIndex">7</Property>
      </Object>
      <Object type="System.Windows.Forms.Label, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="labelTimeframe" children="Controls">
        <Property name="Location">21, 63</Property>
        <Property name="Name">labelTimeframe</Property>
        <Property name="Size">78, 23</Property>
        <Property name="TabIndex">6</Property>
        <Property name="Text">Timeframe</Property>
      </Object>
      <Object type="System.Windows.Forms.ComboBox, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="comboboxDateFilter" children="Controls">
        <Property name="FormattingEnabled">True</Property>
        <Property name="Items">
          <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Last Hour</Item>
          <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Last Day</Item>
        </Property>
        <Property name="Location">105, 65</Property>
        <Property name="Name">comboboxDateFilter</Property>
        <Property name="Size">81, 21</Property>
        <Property name="TabIndex">5</Property>
        <Property name="Text">Last Hour</Property>
      </Object>
      <Object type="System.Windows.Forms.Label, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="labelEventType" children="Controls">
        <Property name="Location">21, 41</Property>
        <Property name="Name">labelEventType</Property>
        <Property name="Size">78, 18</Property>
        <Property name="TabIndex">4</Property>
        <Property name="Text">Event Type</Property>
      </Object>
      <Object type="System.Windows.Forms.DataGridView, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="datagridviewEventLogs" children="Controls">
        <Property name="AutoSizeColumnsMode">DisplayedCells</Property>
        <Property name="ColumnHeadersHeightSizeMode">AutoSize</Property>
        <Property name="Location">21, 101</Property>
        <Property name="Name">datagridviewEventLogs</Property>
        <Property name="Size">622, 151</Property>
        <Property name="TabIndex">3</Property>
      </Object>
      <Object type="System.Windows.Forms.Button, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="buttonEventLogs" children="Controls">
        <Property name="Location">206, 63</Property>
        <Property name="Name">buttonEventLogs</Property>
        <Property name="Size">75, 23</Property>
        <Property name="TabIndex">2</Property>
        <Property name="Text">Submit</Property>
        <Property name="UseVisualStyleBackColor">True</Property>
        <Event name="Click">buttonEventLogs_Click</Event>
      </Object>
      <Object type="System.Windows.Forms.Label, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="labelEventLog" children="Controls">
        <Property name="Location">21, 17</Property>
        <Property name="Name">labelEventLog</Property>
        <Property name="Size">58, 23</Property>
        <Property name="TabIndex">1</Property>
        <Property name="Text">Event Log</Property>
      </Object>
      <Object type="System.Windows.Forms.ComboBox, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="comboboxEventType" children="Controls">
        <Property name="FormattingEnabled">True</Property>
        <Property name="Items">
          <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Errors</Item>
          <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Warnings</Item>
        </Property>
        <Property name="Location">105, 41</Property>
        <Property name="Name">comboboxEventType</Property>
        <Property name="Size">81, 21</Property>
        <Property name="TabIndex">0</Property>
        <Property name="Text">Errors</Property>
      </Object>
    </Object>
    <Object type="System.Windows.Forms.Button, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="buttonConnect" children="Controls">
      <Property name="Location">199, 32</Property>
      <Property name="Name">buttonConnect</Property>
      <Property name="Size">75, 23</Property>
      <Property name="TabIndex">30</Property>
      <Property name="Text">Connect</Property>
      <Property name="UseVisualStyleBackColor">True</Property>
      <Event name="Click">buttonConnect_Click</Event>
    </Object>
    <Object type="System.Windows.Forms.Label, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="labelConnectTo" children="Controls">
      <Property name="Location">16, 37</Property>
      <Property name="Name">labelConnectTo</Property>
      <Property name="Size">71, 14</Property>
      <Property name="TabIndex">27</Property>
      <Property name="Text">Connect To :</Property>
    </Object>
    <Object type="System.Windows.Forms.TextBox, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="txtBoxConnect" children="Controls">
      <Property name="Location">93, 34</Property>
      <Property name="Name">txtBoxConnect</Property>
      <Property name="Size">100, 20</Property>
      <Property name="TabIndex">26</Property>
    </Object>
    <Object type="System.Windows.Forms.GroupBox, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="groupbox3" children="Controls">
      <Property name="Location">505, 72</Property>
      <Property name="Name">groupbox3</Property>
      <Property name="Size">470, 236</Property>
      <Property name="TabIndex">25</Property>
      <Property name="TabStop">False</Property>
      <Property name="Text">Windows Services</Property>
      <Object type="System.Windows.Forms.Button, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="buttonShowServices" children="Controls">
        <Property name="Location">226, 35</Property>
        <Property name="Name">buttonShowServices</Property>
        <Property name="Size">75, 23</Property>
        <Property name="TabIndex">24</Property>
        <Property name="Text">Submit</Property>
        <Property name="UseVisualStyleBackColor">True</Property>
        <Event name="Click">buttonShowServices_Click</Event>
      </Object>
      <Object type="System.Windows.Forms.Label, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="labelShow" children="Controls">
        <Property name="Location">37, 38</Property>
        <Property name="Name">labelShow</Property>
        <Property name="Size">59, 23</Property>
        <Property name="TabIndex">23</Property>
        <Property name="Text">Show</Property>
      </Object>
      <Object type="System.Windows.Forms.ComboBox, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="comboboxServices" children="Controls">
        <Property name="FormattingEnabled">True</Property>
        <Property name="Items">
          <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">All Services</Item>
          <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Stopped Services</Item>
          <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Disabled Services</Item>
        </Property>
        <Property name="Location">98, 35</Property>
        <Property name="Name">comboboxServices</Property>
        <Property name="Size">121, 21</Property>
        <Property name="TabIndex">22</Property>
        <Property name="Text">All Services</Property>
      </Object>
      <Object type="System.Windows.Forms.DataGridView, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="datagridviewServices" children="Controls">
        <Property name="AllowUserToOrderColumns">True</Property>
        <Property name="ColumnHeadersHeightSizeMode">AutoSize</Property>
        <Property name="ContextMenuStrip">
          <Reference name="contextmenustripServices" />
        </Property>
        <Property name="Location">33, 62</Property>
        <Property name="Name">datagridviewServices</Property>
        <Property name="SelectionMode">FullRowSelect</Property>
        <Property name="Size">407, 154</Property>
        <Property name="TabIndex">20</Property>
      </Object>
    </Object>
    <Object type="System.Windows.Forms.GroupBox, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="groupbox2" children="Controls">
      <Property name="Location">16, 72</Property>
      <Property name="Name">groupbox2</Property>
      <Property name="Size">472, 236</Property>
      <Property name="TabIndex">24</Property>
      <Property name="TabStop">False</Property>
      <Property name="Text">Installed Updates</Property>
      <Object type="System.Windows.Forms.DataGridView, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="datagridviewUpdates" children="Controls">
        <Property name="ColumnHeadersHeightSizeMode">AutoSize</Property>
        <Property name="Location">21, 62</Property>
        <Property name="Name">datagridviewUpdates</Property>
        <Property name="Size">426, 154</Property>
        <Property name="TabIndex">22</Property>
      </Object>
      <Object type="System.Windows.Forms.Button, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="buttonShowUpdates" children="Controls">
        <Property name="Location">21, 33</Property>
        <Property name="Name">buttonShowUpdates</Property>
        <Property name="Size">97, 23</Property>
        <Property name="TabIndex">20</Property>
        <Property name="Text">Show Updates</Property>
        <Property name="UseVisualStyleBackColor">True</Property>
        <Event name="Click">buttonShowUpdates_Click</Event>
      </Object>
    </Object>
    <Object type="System.Windows.Forms.StatusBar, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="statusbar1" children="Controls">
      <Property name="Location">0, 578</Property>
      <Property name="Name">statusbar1</Property>
      <Property name="Size">994, 27</Property>
      <Property name="TabIndex">23</Property>
      <Property name="Text">HelpDesk Tool</Property>
    </Object>
    <Object type="System.Windows.Forms.GroupBox, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="groupbox1" children="Controls">
      <Property name="Location">718, 379</Property>
      <Property name="Name">groupbox1</Property>
      <Property name="Size">200, 91</Property>
      <Property name="TabIndex">15</Property>
      <Property name="TabStop">False</Property>
      <Property name="Text">VNC</Property>
      <Object type="System.Windows.Forms.Label, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="labelVNCStatus" children="Controls">
        <Property name="Location">79, 27</Property>
        <Property name="Name">labelVNCStatus</Property>
        <Property name="Size">100, 23</Property>
        <Property name="TabIndex">8</Property>
        <Property name="Text">N/A</Property>
      </Object>
      <Object type="System.Windows.Forms.Button, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="buttonOpenVNC" children="Controls">
        <Property name="Location">104, 59</Property>
        <Property name="Name">buttonOpenVNC</Property>
        <Property name="Size">75, 23</Property>
        <Property name="TabIndex">7</Property>
        <Property name="Text">Open VNC</Property>
        <Property name="UseVisualStyleBackColor">True</Property>
        <Event name="Click">buttonOpenVNC_Click</Event>
      </Object>
      <Object type="System.Windows.Forms.Label, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="label2" children="Controls">
        <Property name="Location">7, 30</Property>
        <Property name="Name">label2</Property>
        <Property name="Size">100, 23</Property>
        <Property name="TabIndex">5</Property>
        <Property name="Text">VNC Status:</Property>
      </Object>
      <Object type="System.Windows.Forms.Button, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="buttonDeployVNC" children="Controls">
        <Property name="Location">7, 59</Property>
        <Property name="Name">buttonDeployVNC</Property>
        <Property name="Size">75, 23</Property>
        <Property name="TabIndex">4</Property>
        <Property name="Text">Deploy VNC</Property>
        <Property name="UseVisualStyleBackColor">True</Property>
        <Event name="Click">buttonDeployVNC_Click</Event>
      </Object>
    </Object>
    <Object type="System.Windows.Forms.MenuStrip, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="menustrip1" children="Controls">
      <Property name="Items">
        <Item type="System.Windows.Forms.ToolStripMenuItem, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <Reference name="fileToolStripMenuItem" />
        </Item>
      </Property>
      <Property name="Location">0, 0</Property>
      <Property name="Name">menustrip1</Property>
      <Property name="Size">994, 24</Property>
      <Property name="TabIndex">11</Property>
      <Property name="Text">menustrip1</Property>
    </Object>
  </Object>
  <Object type="System.Windows.Forms.ToolStripMenuItem, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="fileToolStripMenuItem">
    <Property name="DropDownItems">
      <Item type="System.Windows.Forms.ToolStripMenuItem, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
        <Reference name="exitToolStripMenuItem" />
      </Item>
    </Property>
    <Property name="Name">fileToolStripMenuItem</Property>
    <Property name="Size">37, 20</Property>
    <Property name="Text">File</Property>
  </Object>
  <Object type="System.Windows.Forms.ToolStripMenuItem, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="exitToolStripMenuItem">
    <Property name="Name">exitToolStripMenuItem</Property>
    <Property name="Size">152, 22</Property>
    <Property name="Text">Exit</Property>
    <Event name="Click">exitToolStripMenuItem_Click</Event>
  </Object>
  <Object type="System.Windows.Forms.ContextMenuStrip, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="contextmenustripServices" children="Controls">
    <Property name="Items">
      <Item type="System.Windows.Forms.ToolStripMenuItem, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
        <Reference name="enableToolStripMenuItem" />
      </Item>
      <Item type="System.Windows.Forms.ToolStripMenuItem, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
        <Reference name="startToolStripMenuItem" />
      </Item>
    </Property>
    <Property name="Name">contextmenustripServices</Property>
    <Property name="Size">110, 26</Property>
  </Object>
  <Object type="System.Windows.Forms.ToolStripMenuItem, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="enableToolStripMenuItem">
    <Property name="Name">enableToolStripMenuItem</Property>
    <Property name="Size">109, 22</Property>
    <Property name="Text">Enable</Property>
    <Event name="Click">enableToolStripMenuItem_Click</Event>
  </Object>
  <Object type="System.Windows.Forms.ToolStripMenuItem, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="startToolStripMenuItem">
    <Property name="Name">startToolStripMenuItem</Property>
    <Property name="Size">109, 22</Property>
    <Property name="Text">Start</Property>
    <Event name="Click">startToolStripMenuItem_Click</Event>
  </Object>
  <Code><![CDATA[#region Control Helper Functions
function Load-ComboBox 
{
<#
	.SYNOPSIS
		This functions helps you load items into a ComboBox.

	.DESCRIPTION
		Use this function to dynamically load items into the ComboBox control.

	.PARAMETER  ComboBox
		The ComboBox control you want to add items to.

	.PARAMETER  Items
		The object or objects you wish to load into the ComboBox's Items collection.

	.PARAMETER  DisplayMember
		Indicates the property to display for the items in this control.
	
	.PARAMETER  Append
		Adds the item(s) to the ComboBox without clearing the Items collection.
	
	.EXAMPLE
		Load-ComboBox $combobox1 "Red", "White", "Blue"
	
	.EXAMPLE
		Load-ComboBox $combobox1 "Red" -Append
		Load-ComboBox $combobox1 "White" -Append
		Load-ComboBox $combobox1 "Blue" -Append
	
	.EXAMPLE
		Load-ComboBox $combobox1 (Get-Process) "ProcessName"
#>
	Param (
		[ValidateNotNull()]
		[Parameter(Mandatory=$true)]
		[System.Windows.Forms.ComboBox]$ComboBox,
		[ValidateNotNull()]
		[Parameter(Mandatory=$true)]
		$Items,
	    [Parameter(Mandatory=$false)]
		[string]$DisplayMember,
		[switch]$Append
	)
	
	if(-not $Append)
	{
		$ComboBox.Items.Clear()	
	}
	
	if($Items -is [Object[]])
	{
		$ComboBox.Items.AddRange($Items)
	}
	elseif ($Items -is [Array])
	{
		$ComboBox.BeginUpdate()
		foreach($obj in $Items)
		{
			$ComboBox.Items.Add($obj)	
		}
		$ComboBox.EndUpdate()
	}
	else
	{
		$ComboBox.Items.Add($Items)	
	}

	$ComboBox.DisplayMember = $DisplayMember	
}

function Clear-DataGridView
{
	[CmdletBinding()]
	param
	(
		[Parameter(Mandatory)]
		[ValidateNotNullOrEmpty()]
		[System.Windows.Forms.DataGridView]$DataGridView
	)
	
	$DataGridView.DataSource = $null
	$DataGridView.Refresh()
}

function Load-DataGridView
{
	<#
	.SYNOPSIS
		This functions helps you load items into a DataGridView.

	.DESCRIPTION
		Use this function to dynamically load items into the DataGridView control.

	.PARAMETER  DataGridView
		The DataGridView control you want to add items to.

	.PARAMETER  Item
		The object or objects you wish to load into the DataGridView's items collection.
	
	.PARAMETER  DataMember
		Sets the name of the list or table in the data source for which the DataGridView is displaying data.

	#>
	Param (
		[ValidateNotNull()]
		[Parameter(Mandatory=$true)]
		[System.Windows.Forms.DataGridView]$DataGridView,
		[ValidateNotNull()]
		[Parameter(Mandatory=$true)]
		$Item,
	    [Parameter(Mandatory=$false)]
		[string]$DataMember
	)
	$DataGridView.SuspendLayout()
	$DataGridView.DataMember = $DataMember
	
	if ($Item -is [System.ComponentModel.IListSource]`
	-or $Item -is [System.ComponentModel.IBindingList] -or $Item -is [System.ComponentModel.IBindingListView] )
	{
		$DataGridView.DataSource = $Item
	}
	else
	{
		$array = New-Object System.Collections.ArrayList
		
		if ($Item -is [System.Collections.IList])
		{
			$array.AddRange($Item)
		}
		else
		{	
			$array.Add($Item)	
		}
		$DataGridView.DataSource = $array
	}
	
	$DataGridView.ResumeLayout()
}

function ConvertTo-DataTable
{
	<#
		.SYNOPSIS
			Converts objects into a DataTable.
	
		.DESCRIPTION
			Converts objects into a DataTable, which are used for DataBinding.
	
		.PARAMETER  InputObject
			The input to convert into a DataTable.
	
		.PARAMETER  Table
			The DataTable you wish to load the input into.
	
		.PARAMETER RetainColumns
			This switch tells the function to keep the DataTable's existing columns.
		
		.PARAMETER FilterWMIProperties
			This switch removes WMI properties that start with an underline.
	
		.EXAMPLE
			$DataTable = ConvertTo-DataTable -InputObject (Get-Process)
	#>
	[OutputType([System.Data.DataTable])]
	param(
	[ValidateNotNull()]
	$InputObject, 
	[ValidateNotNull()]
	[System.Data.DataTable]$Table,
	[switch]$RetainColumns,
	[switch]$FilterWMIProperties)
	
	if($Table -eq $null)
	{
		$Table = New-Object System.Data.DataTable
	}

	if($InputObject-is [System.Data.DataTable])
	{
		$Table = $InputObject
	}
	else
	{
		if(-not $RetainColumns -or $Table.Columns.Count -eq 0)
		{
			#Clear out the Table Contents
			$Table.Clear()

			if($InputObject -eq $null){ return } #Empty Data
			
			$object = $null
			#find the first non null value
			foreach($item in $InputObject)
			{
				if($item -ne $null)
				{
					$object = $item
					break	
				}
			}

			if($object -eq $null) { return } #All null then empty
			
			#Get all the properties in order to create the columns
			foreach ($prop in $object.PSObject.Get_Properties())
			{
				if(-not $FilterWMIProperties -or -not $prop.Name.StartsWith('__'))#filter out WMI properties
				{
					#Get the type from the Definition string
					$type = $null
					
					if($prop.Value -ne $null)
					{
						try{ $type = $prop.Value.GetType() } catch {}
					}

					if($type -ne $null) # -and [System.Type]::GetTypeCode($type) -ne 'Object')
					{
		      			[void]$table.Columns.Add($prop.Name, $type) 
					}
					else #Type info not found
					{ 
						[void]$table.Columns.Add($prop.Name) 	
					}
				}
		    }
			
			if($object -is [System.Data.DataRow])
			{
				foreach($item in $InputObject)
				{	
					$Table.Rows.Add($item)
				}
				return  @(,$Table)
			}
		}
		else
		{
			$Table.Rows.Clear()	
		}
		
		foreach($item in $InputObject)
		{		
			$row = $table.NewRow()
			
			if($item)
			{
				foreach ($prop in $item.PSObject.Get_Properties())
				{
					if($table.Columns.Contains($prop.Name))
					{
						$row.Item($prop.Name) = $prop.Value
					}
				}
			}
			[void]$table.Rows.Add($row)
		}
	}

	return @(,$Table)	
}

function Load-ListBox 
{
<#
	.SYNOPSIS
		This functions helps you load items into a ListBox or CheckedListBox.

	.DESCRIPTION
		Use this function to dynamically load items into the ListBox control.

	.PARAMETER  ListBox
		The ListBox control you want to add items to.

	.PARAMETER  Items
		The object or objects you wish to load into the ListBox's Items collection.

	.PARAMETER  DisplayMember
		Indicates the property to display for the items in this control.
	
	.PARAMETER  Append
		Adds the item(s) to the ListBox without clearing the Items collection.
	
	.EXAMPLE
		Load-ListBox $ListBox1 "Red", "White", "Blue"
	
	.EXAMPLE
		Load-ListBox $listBox1 "Red" -Append
		Load-ListBox $listBox1 "White" -Append
		Load-ListBox $listBox1 "Blue" -Append
	
	.EXAMPLE
		Load-ListBox $listBox1 (Get-Process) "ProcessName"
#>
	Param (
		[ValidateNotNull()]
		[Parameter(Mandatory=$true)]
		[System.Windows.Forms.ListBox]$ListBox,
		[ValidateNotNull()]
		[Parameter(Mandatory=$true)]
		$Items,
	    [Parameter(Mandatory=$false)]
		[string]$DisplayMember,
		[switch]$Append
	)
	
	if(-not $Append)
	{
		$listBox.Items.Clear()	
	}
	
	if($Items -is [System.Windows.Forms.ListBox+ObjectCollection])
	{
		$listBox.Items.AddRange($Items)
	}
	elseif ($Items -is [Array])
	{
		$listBox.BeginUpdate()
		foreach($obj in $Items)
		{
			$listBox.Items.Add($obj)
		}
		$listBox.EndUpdate()
	}
	else
	{
		$listBox.Items.Add($Items)	
	}

	$listBox.DisplayMember = $DisplayMember
}

function Toggle-Buttons
{
	<#
	.SYNOPSIS
		This function either enables or disables a set of buttons on the current form. It is primarily used to indicate if
		the tool is connected to a client or not.
		
	.EXAMPLE
		PS> Toggle-Buttons -Status $true
	
		This example enables all buttons that attempt to make connections to the client.
		
	.PARAMETER Status
		This is a boolean value that either disables or enables all buttons that attempt to make connections to the client.
	#>
	[CmdletBinding()]
	param
	(
		[Parameter(Mandatory)]
		[ValidateNotNullOrEmpty()]
		[bool]$Status
	)
	$buttonOpenVNC.Enabled = $Status
	$buttonDeployVNC.Enabled = $Status
	$buttonEventLogs.Enabled = $Status
	$buttonShowUpdates.Enabled = $Status
	$buttonShowServices.Enabled = $Status
}
#endregion

$buttonDeployVNC_Click={
	try
	{
		Write-Status -Message 'Deploying VNC...'
		Deploy-VNC -ComputerName $ComputerName
		if (Test-VncInstalled -ComputerName $ComputerName)
		{
			$buttonOpenVNC.Enabled = $true
			$buttonDeployVNC.Enabled = $false
			$labelVNCStatus.Text = 'Installed'
			Write-Status -Message 'Successfully deployed VNC.'
		}
		else
		{
			throw 'VNC deployment failed.'	
		}
	}
	catch
	{
		Write-Status -Message $_.Exception.Message
	}
}

$buttonShowUpdates_Click = {
	try
	{
		Write-Status -Message 'Retrieving installed updates...'
		
		## Get all installed updates from the remote computer but only select the description and hotfixid. These are the only
		## fields we want populated in the datagrid view.
		$updates = Get-HotFix -ComputerName $ComputerName | select description,hotfixid
		
		## Load the results of the Get-Hotfix query.
		Load-DataGridView -DataGridView $datagridviewUpdates -Item $updates
		Write-Status -Message "Successfully retrieved installed updates."
	}
	catch
	{
		Write-Status -Message $_.Exception.Message
	}
}

$buttonOpenVNC_Click= {
	try
	{
		## Always check for any external dependencies you reference before attempting to run them.
		if (-not (Test-Path -Path "$toolFileShare\vncviewer.exe" -PathType Leaf))
		{
			throw "The VNC viewer app at [$toolFileShare\vncviewer.exe] was not found."
		}
		## Open the VNC viewer EXE on the file share. Use the -connect argument to immediately connect to the remote client
		## the tool is connected to.
		& "$toolFileShare\vncviewer.exe" -connect $ComputerName
	}
	catch
	{
		Write-Status -Message $_.Exception.Message
	}
}

$exitToolStripMenuItem_Click={
	## Close the application
	$MainForm.Close()
}

$buttonConnect_Click={
	try
	{
		if (-not $txtBoxConnect.Text) ## If the Connect text box is empty
		{
			## Rather than simply displaying the connection error in the status bar like all the other errors, you can choose
			## to be more obvious and display a message box. I use message boxes to display more critical errors that will affect
			## the entire tool as a whole.
			[System.Windows.Forms.MessageBox]::Show('No computer specified for connection', 'Invalid input', 0, 16)
			throw 'No computer specified for connection'
		}
		else
		{
			## $computername must be global because I'm going to be referencing it in various functions that will not be in the
			## same scope as the scriptblock we're in now.
			$global:ComputerName = $txtBoxConnect.Text
		}
		
		Write-Status -Message "Testing connectivity..."
		## Test to ensure the remote client can be pinged
		if (-not (Test-Connection -ComputerName $ComputerName -Count 1 -Quiet))
		{
			throw 'Computer is offline or does not exist.'
		}
		## We'll be using PS remoting to invoke a VNC deployment so that functionality must be working.
		elseif ((Invoke-Command -ComputerName $ComputerName -ScriptBlock { hostname }) -ne $ComputerName)
		{
			throw 'Computer cannot be connected to.'
		}
		else
		{
			## If the user connects to one computer and populates various datagrid views and then connects to another remote client
			## we need to make sure the previous client's information is not still displayed.
			$toClearDgvs = $datagridviewServices, $datagridviewUpdates
			foreach ($dgv in $toClearDgvs)
			{
				## Custom function built because more than one datagrid view will need to be cleared.
				Clear-DataGridView -DataGridView $dgv
			}
			
			## This changes the title bar of the form. This is good practice if you need to keep a persistent message up and
			## not be too obtrusive. Knowing what client the user connected to is useful information.
			$MainForm.Text = "Helpdesk Tool - Connected to $ComputerName"
			
			## Because we've chosen to allow the user to query the client's event logs, we need to prepopulate a combobox
			## This saves time when the user does eventually want to view the client's event logs. This retrieves all of the log
			## names and populates them into a combobox.
			Write-Status -Message 'Gathering event log sources...'
			$eventLogs = (Get-EventLog -ComputerName $ComputerName -LogName *).Log
			Load-ComboBox -ComboBox $comboboxEventLog -Items $eventLogs
			
			## Test to see if VNC is already installed using the Test-VNCInstalled function inside the VNC.ps1 script.
			## The result of this is reflected in the VNC status label which will indicate "Installed" if it's installed or 
			## "not installed" otherwise.
			Write-Status -Message 'Testing VNC install status...'
			if (Test-VNCInstalled -ComputerName $ComputerName)
			{
				$labelVNCStatus.Text = 'Installed'
				$buttonDeployVNC.Enabled = $false
			}
			else
			{
				$labelVNCStatus.Text = 'Not Installed'
				$buttonOpenVNC.Enabled = $false
			}
			
			## If the client successfully passed all of our prerequisite tests, consider it go to go and enable all of the buttons
			## that can make connections to it.
			Toggle-Buttons -Status $true
			
			## The throw command is typically used for error handling. However, in a GUI, it can also be a great way to simply
			## act as status messaging as well.
			throw "Connected to $ComputerName"
		}
	}
	catch
	{
		Write-Status -Message $_.Exception.Message
	}
}

$buttonShowServices_Click={
	try
	{
		## The helpdesk needed a way to easily find disabled and stopped Windows services. Depending on what was chosen
		## in the services combo box depends on the FilterScript we'll build to use with Get-Service.
		switch ($comboboxServices.Text) {
			'All Services' {
				Write-Status -Message "Retrieving all Windows services..."
				$whereFilter = {$_.Name -ne $null}
			}
			'Disabled Services' {
				Write-Status -Message "Retrieving all disabled Windows services..."
				$whereFilter = { $_.StartMode -eq 'Disabled'}
			}
			'Stopped Services' {
				Write-Status -Message "Retrieving all stopped Windows services..."
				$whereFilter = { $_.State -eq 'Stopped' }
			}
			default {
				throw 'Unknown service criteria'
			}
		}
		
		## Query all services with the FilterScript based off of the combo box. We only need to see certain fields in the datagrid
		## view so use Select-Object to only output those.
		$services = Get-WmiObject -ComputerName $ComputerName -Class Win32_Service | where $whereFilter | select displayname,state,startmode | sort displayName
		Load-DataGridView -DataGridView $datagridviewServices -Item $services
		Write-Status -Message "Successfully retrieved Windows services."
	}
	catch
	{
		Write-Status -Message $_.Exception.Message
	}
	
}

$buttonEventLogs_Click={
	try
	{
		switch ($comboboxEventType.Text)
		{
			'Errors' {
				$eventType = 'error'
			}
			'Warnings' {
				$eventType = 'warning'
			}
			default
			{
				throw 'Unknown event type'
			}
		}
		
		## Ensure the datagrid view is empty
		Clear-DataGridView -DataGridView $datagridviewEventLogs
		Write-Status -Message "Retrieving all events of type $eventType..."
		
		$params = @{
			'ComputerName' = $ComputerName
			'EntryType' = $eventType
			'LogName' = $comboboxEventLog.Text
		}
		switch ($comboboxDateFilter.Text) {
			'Last Hour' {
				$params.After = (Get-date).AddHours(-1)
			}
			'Last Day' {
				$params.After = (Get-date).AddDays(-1)
			}
			default {
				throw 'Unknown date filter.'
			}
		}

		$events = Get-EventLog @params | select timegenerated, message
		if (-not $events)
		{
			$events = [pscustomobject]@{ 'Status' = 'No events found' }
		}
		Load-DataGridView -DataGridView $datagridviewEventLogs -Item $events
		Write-Status -Message "Successfully retrieved Windows events."
	}
	catch
	{
		Write-Status -Message $_.Exception.Message
	}
	
}

$MainForm_Load = {
	## Disable all of the buttons until a computer is connected
	Toggle-Buttons -Status $false
}

$enableToolStripMenuItem_Click={
	try
	{
		$serviceName = $datagridviewServices.CurrentRow.Cells[0].Value
		Write-Status -Message "Enabling the $serviceName Windows service..."
		Get-Service -ComputerName $ComputerName -DisplayName $serviceName | Set-Service -StartupType Automatic
		Write-Status -Message "Succesfully enabled the $serviceName Windows service"
	}
	catch
	{
		Write-Status -Message $_.Exception.Message	
	}
}

$startToolStripMenuItem_Click={
	try
	{
		$serviceName = $datagridviewServices.CurrentRow.Cells[0].Value
		Write-Status -Message "Starting the $serviceName Windows service..."
		Get-Service -ComputerName $ComputerName -DisplayName $serviceName | Start-Service
		Write-Status -Message "Succesfully starated the $serviceName Windows service"
	}
	catch
	{
		Write-Status -Message $_.Exception.Message
	}
	
}
]]></Code>
  <Bookmarks />
  <BreakPoints />
  <TracePoints />
  <Mode>1</Mode>
  <Assemblies>
    <Assembly>mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</Assembly>
    <Assembly>System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</Assembly>
    <Assembly>System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</Assembly>
    <Assembly>System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</Assembly>
    <Assembly>System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</Assembly>
    <Assembly>System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</Assembly>
    <Assembly>System.DirectoryServices, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</Assembly>
    <Assembly>System.Core, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</Assembly>
    <Assembly>System.ServiceProcess, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</Assembly>
  </Assemblies>
</File>