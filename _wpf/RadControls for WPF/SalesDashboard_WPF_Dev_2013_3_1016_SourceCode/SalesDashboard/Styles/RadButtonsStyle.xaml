<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:telerik="http://schemas.telerik.com/2008/xaml/presentation" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:System="clr-namespace:System;assembly=mscorlib" xmlns:Telerik_Windows_Controls_Chromes="clr-namespace:Telerik.Windows.Controls.Chromes;assembly=Telerik.Windows.Controls" mc:Ignorable="d">
	
    <ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="/SalesDashboard;component/Palettes/Brushes.xaml"/>
	</ResourceDictionary.MergedDictionaries>
	
	<Style x:Key="PaletteRadioButtonStyle" TargetType="telerik:RadRadioButton">
		<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
		<Setter Property="VerticalContentAlignment" Value="Stretch"/>
		<Setter Property="Padding" Value="1"/>
		<Setter Property="BorderThickness" Value="0"/>
		<Setter Property="Cursor" Value="Hand"/>		
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="telerik:RadRadioButton">
					<Grid Background="Transparent">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualStateGroup.Transitions>
									<VisualTransition GeneratedDuration="0:0:0.3">
										<VisualTransition.GeneratedEasingFunction>
											<QuarticEase EasingMode="EaseOut"/>
										</VisualTransition.GeneratedEasingFunction>
									</VisualTransition>
								</VisualStateGroup.Transitions>
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="Disabled" />
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<DoubleAnimation Duration="0" To="0.795" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="border" d:IsOptimized="True"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="border" d:IsOptimized="True"/>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="CheckStates">
								<VisualState x:Name="Checked">
									<Storyboard>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="borderChecked" d:IsOptimized="True"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unchecked"/>
								<VisualState x:Name="Indeterminate"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Focused"/>
								<VisualState x:Name="Unfocused"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="ValidationStates">
								<VisualState x:Name="InvalidFocused"/>
								<VisualState x:Name="Valid"/>
								<VisualState x:Name="InvalidUnfocused"/>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" Opacity="0"/>
						<Border x:Name="borderChecked" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" Opacity="0"/>
						<ContentPresenter x:Name="Content" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>		
	</Style>
	<Style x:Key="RadButtonStyle" TargetType="telerik:RadButton">
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Padding" Value="0"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="telerik:RadButton">
					<Grid Background="Transparent">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualStateGroup.Transitions>
									<VisualTransition GeneratedDuration="0:0:0.3">
										<VisualTransition.GeneratedEasingFunction>
											<QuarticEase EasingMode="EaseOut"/>
										</VisualTransition.GeneratedEasingFunction>
									</VisualTransition>
								</VisualStateGroup.Transitions>
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="Disabled" />
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<DoubleAnimation Duration="0" To="0.8" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="border" d:IsOptimized="True"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="border" d:IsOptimized="True"/>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Content" d:IsOptimized="True"/>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Unfocused"/>
								<VisualState x:Name="Focused"/>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" Opacity="0.3"/>
						<ContentPresenter x:Name="Content" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Opacity="0.595" RenderTransformOrigin="0.5,0.5">
							<ContentPresenter.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform/>
                                    <RotateTransform/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </ContentPresenter.RenderTransform>
						</ContentPresenter>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
    <Style x:Key="RadToggleButtonStyle" TargetType="telerik:RadToggleButton">
        <Setter Property="Background" Value="{StaticResource background}"/>
        <Setter Property="BorderBrush" Value="{StaticResource text}"/>
        <Setter Property="Foreground" Value="{StaticResource text}"/>
        <Setter Property="FontFamily" Value="{StaticResource font}"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Height" Value="Auto"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerik:RadToggleButton">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.3">
                                		<VisualTransition.GeneratedEasingFunction>
                                			<QuinticEase EasingMode="EaseOut"/>
                                		</VisualTransition.GeneratedEasingFunction>
                                	</VisualTransition>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Disabled"/>
                                <VisualState x:Name="MouseOver" >
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="0.8" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ellipse_over" />
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="textBlock_over" />
                                        <DoubleAnimation Duration="0" To="-40" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="textBlock_over" />
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="textBlock_hide" />
                                        <DoubleAnimation Duration="0" To="-35" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="textBlock_hide" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed" >
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="0.8" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ellipse_over" />
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="textBlock_over" />
                                        <DoubleAnimation Duration="0" To="-40" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="textBlock_over" />
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="textBlock_hide" />
                                        <DoubleAnimation Duration="0" To="-35" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="textBlock_hide" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                            	<VisualStateGroup.Transitions>
                            		<VisualTransition GeneratedDuration="0:0:0.3"/>
                            	</VisualStateGroup.Transitions>
                            	<VisualState x:Name="Indeterminate"/>
                            	<VisualState x:Name="Checked">
                            		<Storyboard>
                            			<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="textBlock_over">
                            				<DiscreteObjectKeyFrame KeyTime="0">
                            					<DiscreteObjectKeyFrame.Value>
                            						<Visibility>Collapsed</Visibility>
                            					</DiscreteObjectKeyFrame.Value>
                            				</DiscreteObjectKeyFrame>
                            			</ObjectAnimationUsingKeyFrames>
                            			<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="textBlock_hide">
                            				<DiscreteObjectKeyFrame KeyTime="0">
                            					<DiscreteObjectKeyFrame.Value>
                            						<Visibility>Visible</Visibility>
                            					</DiscreteObjectKeyFrame.Value>
                            				</DiscreteObjectKeyFrame>
                            			</ObjectAnimationUsingKeyFrames>
                            			<DoubleAnimation Duration="0" To="0.8" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ellipse" />
                            			<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Content" />
                            		</Storyboard>
                            	</VisualState>
                            	<VisualState x:Name="Unchecked" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <TextBlock x:Name="textBlock_over" Foreground="{TemplateBinding Foreground}" Margin="-15,0" Opacity="0"
                                   FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" 
                                   Text="{TemplateBinding Tag}" IsHitTestVisible="False" RenderTransformOrigin="0.5,0.5" Visibility="Visible"
                                   HorizontalAlignment="Center" VerticalAlignment="Center">
                        	<TextBlock.RenderTransform>
                                <TransformGroup>
                                  <ScaleTransform/>
                                  <SkewTransform/>
                                  <RotateTransform/>
                                  <TranslateTransform X="-15"/>
                                </TransformGroup>
                        	</TextBlock.RenderTransform>
                        </TextBlock>
                        <TextBlock x:Name="textBlock_hide" Foreground="{TemplateBinding Foreground}" Margin="-15,0" Opacity="0"
                                   FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" Visibility="Collapsed"
                                   Text="hide" IsHitTestVisible="False" RenderTransformOrigin="0.5,0.5" 
                                   HorizontalAlignment="Center" VerticalAlignment="Center" >
                        	<TextBlock.RenderTransform>
                                <TransformGroup>
                                  <ScaleTransform/>
                                  <SkewTransform/>
                                  <RotateTransform/>
                                  <TranslateTransform X="-15"/>
                                </TransformGroup>
                        	</TextBlock.RenderTransform>
                        </TextBlock>
                        <Ellipse x:Name="ellipse_over" Stroke="{TemplateBinding BorderBrush}" Fill="{TemplateBinding Background}" StrokeThickness="2" Opacity="0.3"/>
                        <Ellipse x:Name="ellipse" Stroke="{TemplateBinding BorderBrush}" Fill="{TemplateBinding Background}" StrokeThickness="2" Opacity="0"/>
                        <ContentPresenter x:Name="Content" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" 
                                          Opacity="0.6" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="RadRadioButtonStyle" TargetType="telerik:RadRadioButton">
        <Setter Property="Background" Value="{StaticResource background}"/>
        <Setter Property="BorderBrush" Value="{StaticResource text}"/>
        <Setter Property="Foreground" Value="{StaticResource text}"/>
        <Setter Property="FontFamily" Value="{StaticResource font}"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Height" Value="Auto"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerik:RadRadioButton">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.3">
                                		<VisualTransition.GeneratedEasingFunction>
                                			<QuinticEase EasingMode="EaseOut"/>
                                		</VisualTransition.GeneratedEasingFunction>
                                	</VisualTransition>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Disabled"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="0.8" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ellipse_over" />
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="textBlock_over" />
                                        <DoubleAnimation Duration="0" To="20" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="textBlock_over" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="0.8" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ellipse_over" />
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="textBlock_over" />
                                        <DoubleAnimation Duration="0" To="20" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="textBlock_over" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                            	<VisualStateGroup.Transitions>
                            		<VisualTransition GeneratedDuration="0:0:0.3"/>
                            	</VisualStateGroup.Transitions>
                            	<VisualState x:Name="Indeterminate"/>
                            	<VisualState x:Name="Checked">
                            		<Storyboard>
                            			<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ellipse" />
                            			<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Content" />
                            		</Storyboard>
                            	</VisualState>
                                <VisualState x:Name="Unchecked" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <TextBlock x:Name="textBlock_over" Foreground="{TemplateBinding Foreground}" Margin="-15,0"
                                   FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" HorizontalAlignment="Center"
                                   Text="{TemplateBinding Tag}" Opacity="0" IsHitTestVisible="False" RenderTransformOrigin="0.5,0.5" VerticalAlignment="Bottom">
                        	<TextBlock.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform/>
                                    <RotateTransform/>
                                    <TranslateTransform Y="8"/>
                                </TransformGroup>
                        	</TextBlock.RenderTransform>
                        </TextBlock>
                        <Ellipse x:Name="ellipse_over" Stroke="{TemplateBinding BorderBrush}" Fill="{TemplateBinding Background}" StrokeThickness="2" Opacity="0.3"/>
                        <Ellipse x:Name="ellipse" Stroke="{TemplateBinding BorderBrush}" Fill="{TemplateBinding Background}" StrokeThickness="2" Opacity="0"/>
                        <ContentPresenter x:Name="Content" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" 
                                          Opacity="0.6" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
</ResourceDictionary>