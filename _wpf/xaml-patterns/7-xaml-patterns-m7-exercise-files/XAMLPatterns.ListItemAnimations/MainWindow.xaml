<Window
    x:Class="XAMLPatterns.ListItemAnimations.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    Title="List Item Animations"
    Height="350"
    Width="525"
    DataContext="{Binding Main, Source={StaticResource Locator}}">
	<Window.Resources>
		<Style x:Key="FocusVisual">
			<Setter Property="Control.Template">
				<Setter.Value>
					<ControlTemplate>
						<Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<SolidColorBrush x:Key="Item.MouseOver.Background" Color="#1F26A0DA"/>
		<SolidColorBrush x:Key="Item.MouseOver.Border" Color="#a826A0Da"/>
		<SolidColorBrush x:Key="Item.SelectedInactive.Background" Color="#3DDADADA"/>
		<SolidColorBrush x:Key="Item.SelectedInactive.Border" Color="#FFDADADA"/>
		<SolidColorBrush x:Key="Item.SelectedActive.Background" Color="#3D26A0DA"/>
		<SolidColorBrush x:Key="Item.SelectedActive.Border" Color="#FF26A0DA"/>
		<Style x:Key="AnimatedListBoxItemStyle" TargetType="{x:Type ListBoxItem}">
			<Setter Property="SnapsToDevicePixels" Value="True"/>
			<Setter Property="Padding" Value="4,1"/>
			<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
			<Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="BorderBrush" Value="Transparent"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ListBoxItem}">
						<ControlTemplate.Resources>
							<Storyboard x:Key="OnLoaded1">
								<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.LayoutTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="Bd">
									<EasingDoubleKeyFrame KeyTime="0" Value="0">
										<EasingDoubleKeyFrame.EasingFunction>
											<CubicEase EasingMode="EaseOut"/>
										</EasingDoubleKeyFrame.EasingFunction>
									</EasingDoubleKeyFrame>
									<EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1">
										<EasingDoubleKeyFrame.EasingFunction>
											<CubicEase EasingMode="EaseOut"/>
										</EasingDoubleKeyFrame.EasingFunction>
									</EasingDoubleKeyFrame>
								</DoubleAnimationUsingKeyFrames>
							</Storyboard>
							<Storyboard x:Key="Unloaded">
								<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="Bd">
									<EasingDoubleKeyFrame KeyTime="0" Value="1">
										<EasingDoubleKeyFrame.EasingFunction>
											<CubicEase EasingMode="EaseOut"/>
										</EasingDoubleKeyFrame.EasingFunction>
									</EasingDoubleKeyFrame>
									<EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0">
										<EasingDoubleKeyFrame.EasingFunction>
											<CubicEase EasingMode="EaseOut"/>
										</EasingDoubleKeyFrame.EasingFunction>
									</EasingDoubleKeyFrame>
								</DoubleAnimationUsingKeyFrames>
							</Storyboard>
						</ControlTemplate.Resources>
						<Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true" RenderTransformOrigin="0.5,0.5">
							<Border.RenderTransform>
								<TransformGroup>
									<ScaleTransform/>
									<SkewTransform/>
									<RotateTransform/>
									<TranslateTransform/>
								</TransformGroup>
							</Border.RenderTransform>
							<Border.LayoutTransform>
								<TransformGroup>
									<ScaleTransform/>
									<SkewTransform/>
									<RotateTransform/>
									<TranslateTransform/>
								</TransformGroup>
							</Border.LayoutTransform>
							<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
						</Border>
						<ControlTemplate.Triggers>
							<EventTrigger RoutedEvent="FrameworkElement.Unloaded">
								<BeginStoryboard x:Name="Unloaded_BeginStoryboard" Storyboard="{StaticResource Unloaded}"/>
							</EventTrigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsMouseOver" Value="True"/>
								</MultiTrigger.Conditions>
								<Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.MouseOver.Background}"/>
								<Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.MouseOver.Border}"/>
							</MultiTrigger>
							<EventTrigger RoutedEvent="FrameworkElement.Loaded">
								<BeginStoryboard Storyboard="{StaticResource OnLoaded1}"/>
							</EventTrigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="Selector.IsSelectionActive" Value="False"/>
									<Condition Property="IsSelected" Value="True"/>
								</MultiTrigger.Conditions>
								<Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Background}"/>
								<Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Border}"/>
							</MultiTrigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="Selector.IsSelectionActive" Value="True"/>
									<Condition Property="IsSelected" Value="True"/>
								</MultiTrigger.Conditions>
								<Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedActive.Background}"/>
								<Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.SelectedActive.Border}"/>
							</MultiTrigger>
							<Trigger Property="IsEnabled" Value="False">
								<Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
	</Window.Resources>
    <Grid
        Margin="6">
        <Grid.RowDefinitions>
            <RowDefinition />
            <RowDefinition
                Height="Auto" />
        </Grid.RowDefinitions>
        <ListBox
            Margin="6"
            FontSize="18"
            ItemsSource="{Binding Numbers}"
            SelectedItem="{Binding SelectedNumber, Mode=TwoWay}" ItemContainerStyle="{DynamicResource AnimatedListBoxItemStyle}"/>
        <StackPanel
            Grid.Row="1"
            Orientation="Horizontal">
            <Button
                Margin="6"
                FontSize="22"
                Command="{Binding NewNumber}" Width="165">New Number</Button>
            <Button
                Margin="6"
                FontSize="22"
                Command="{Binding DeleteNumber}" Width="165">Delete Number</Button>
        </StackPanel>
    </Grid>
</Window>
